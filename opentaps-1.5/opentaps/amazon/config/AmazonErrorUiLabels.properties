#
# Copyright (c) Open Source Strategies, Inc.
# 
# Opentaps is free software: you can redistribute it and/or modify it
# under the terms of the GNU Affero General Public License as published
# by the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# Opentaps is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Opentaps.  If not, see <http://www.gnu.org/licenses/>.

AmazonError_AckDocumentError = Error acknowledging download of Amazon order documents with IDs ${documentIds}. Error was: ${errorMessage}
AmazonError_AckDocumentNoDocuments = No successfully downloaded Amazon order documents to acknowledge
AmazonError_AckOrderError = Error acknowledging successfully imported Amazon orders with IDs ${amazonOrderIds}. Error was: ${errorMessage}
AmazonError_AckOrderItemsError = Error acknowledging shipped Amazon order items with item codes ${amazonOrderItemCodes}. Error was: ${errorMessage}
AmazonError_AckOrderItemsNoItems = No fulfilled Amazon order items to acknowledge
AmazonError_AckOrderNoOrders = No successfully imported Amazon orders to acknowledge
AmazonError_AmazonOrderNotFound = Amazon order not found with Amazon orderID ${amazonOrderId}
AmazonError_BadGeoStateCountry = Unable to resolve any of ${geoString} to a country in the Geo entity 
AmazonError_BadGeoStateProvince = Unable to resolve any of ${geoString} to a province/state in the Geo entity
AmazonError_CheckAcksDocNotReady = Amazon processing document with ID ${documentId} is not yet ready for download
AmazonError_CheckAcksDocParseError = Error parsing Amazon processing document with ID ${documentId}. Error was: ${errorMessage}
AmazonError_CheckAcksNoValues = No outstanding Amazon posted documents to check for processing status
AmazonError_DecodeOrderError = Error extracting order data from Amazon order document with ID ${documentId}. Error was: ${errorMessage}
AmazonError_ErrorEmailSubject_AckImage = Amazon.com reports errors in product image posting
AmazonError_ErrorEmailSubject_AckInventory = Amazon.com reports errors in product inventory posting
AmazonError_ErrorEmailSubject_AckOrder = Error acknowledging Amazon.com order(s)
AmazonError_ErrorEmailSubject_AckOrderDoc = Error acknowledging Amazon.com order document ${documentId}
AmazonError_ErrorEmailSubject_AckOrderItemFulfill = Error posting fulfillment confirmation for Amazon.com order item(s)
AmazonError_ErrorEmailSubject_AckOrderItemFulfillValidate = Amazon.com reports errors in order item fulfillment posting
AmazonError_ErrorEmailSubject_AckOrderValidate = Amazon.com reports errors in order acknowledgement posting
AmazonError_ErrorEmailSubject_AckPrice = Amazon.com reports errors in product price posting
AmazonError_ErrorEmailSubject_AckProduct = Amazon.com reports errors in product posting
AmazonError_ErrorEmailSubject_BulkPostfix = (${message} of ${total})
AmazonError_ErrorEmailSubject_ExtractOrders = Error extracting orders from Amazon.com order document ${documentId}
AmazonError_ErrorEmailSubject_ImportOrder = Error importing Amazon.com order ID ${amazonOrderId}
AmazonError_ErrorEmailSubject_PostImage = Error posting images to Amazon.com
AmazonError_ErrorEmailSubject_PostInventory = Error posting inventory to Amazon.com
AmazonError_ErrorEmailSubject_PostPrice = Error posting product prices to Amazon.com
AmazonError_ErrorEmailSubject_PostProduct = Error posting products to Amazon.com
AmazonError_ErrorEmailSubject_ProcDocAgeWarning = Possible problem posting product data to Amazon.com
AmazonError_ErrorEmailSubject_StoreOrderDoc = Error downloading Amazon.com order document ${documentId}
AmazonError_ErrorGettingDocument = Error downloading Amazon order document with ID ${documentId}. Error was: ${errorMessage}
AmazonError_ErrorGettingDocumentAttachment = Error getting attachment for Amazon order document with ID ${documentId}. Error was: ${errorMessage}
AmazonError_ErrorProductDoesntExists = Product with ID ${productId} doesn't exist. You can't create Amazon product separately from standard product.
AmazonError_ErrorUomRequired = You must set units of measure together with ${dimension}.
AmazonError_ErrorWas = Error was
AmazonError_ExpandingUPCE = Expanding UPC-E [${upce}] to UPC-A [${upca}] for product [${productId}]
AmazonError_ExtractAttemptsOverThreshold = Extraction of orders from Amazon order document with ID ${documentId} has failed more than ${threshold} times, ignoring
AmazonError_IgnoreExistingOrder = Amazon order with ID ${amazonOrderId} was previously extracted on ${createdTimestamp}, ignoring
AmazonError_IgnoreExistingOrderDocument = Amazon order document with ID ${documentId} was previously imported on ${downloadTimestamp}, ignoring
AmazonError_IgnoringProduct_ProductDeleted = Not updating modified product with ID ${productId} - AmazonProduct is marked deleted
AmazonError_IgnoringProductImage_ProductDeleted = Not including images for product ID ${productId} in Amazon image post - product is marked deleted
AmazonError_IgnoringProductInventoryUpdate_NoRecord = Not updating AmazonProductInventory status for product ID ${productId} - No AmazonProductInventory record found
AmazonError_IgnoringProductInventoryUpdate_ProductDeleted = Not updating AmazonProductInventory status for product ID ${productId} - product is marked deleted
AmazonError_IgnoringProductInventoryUpdate_WrongFacility = Not updating AmazonProductInventory status for product ID ${productId} - facilityId doesn't match inventoryFacilityId defined in ProductStore ID in opentaps.amazon.export.product.price.productStoreGroupId
AmazonError_IgnoringProductInventory_ProductDeleted = Not including inventory for product ID ${productId} in Amazon inventory post - product is marked deleted
AmazonError_IgnoringProductPriceUpdate_NoRecord = Not updating AmazonProductPrice status for product ID ${productId} - No AmazonProductPrice record found
AmazonError_IgnoringProductPriceUpdate_ProductDeleted = Not updating AmazonProductPrice status for product ID ${productId} - product is marked deleted
AmazonError_IgnoringProductPriceUpdate_WrongStoreGroup = Not updating AmazonProductPrice status for product ID ${productId} - ProductPrice.productStoreGroupId doesn't match opentaps.amazon.export.product.price.productStoreGroupId
AmazonError_IgnoringProductPrice_ProductDeleted = Not including prices for product ID ${productId} in Amazon price post - product is marked deleted
AmazonError_ImportAttemptsOverThreshold = Amazon order ID ${amazonOrderId} has failed more than ${threshold} times, ignoring
AmazonError_InsufficientInventory = Insufficient inventory to import Amazon order ID ${amazonOrderId}, product ID ${productId} (Amazon orderItemCode ${amazonOrderItemCode} - Shortfall is ${quantityNotReserved}
AmazonError_InvalidAmazonProductStore = The Amazon product store ${productStoreId} does not have a facilityInventoryId.
AmazonError_InvalidCodeUPC = UPC code for Product with ID ${productId} is invalid. Skipped.
AmazonError_InvalidProductImageUri = The contents of the ${fieldName} field of Product ID ${productId} can't make a valid web address
AmazonError_MissingCodeUPC = Missing UPC code for product ID ${productId} 
AmazonError_MissingProductImage = Product ID ${productId} is missing an image in the field ${productContentTypeId}
AmazonError_MissingTaxAuthMap = Amazon tax jurisdiction for district [${taxJurisDistrict}], city [${taxJurisCity}], county [${taxJurisCounty}], state [${taxJurisState}] requires a mapping to a taxAuthority geoId/partyId in the AmazonOrderTaxJurisToAuth entity
AmazonError_NoOrgParty = Error importing Amazon orders: Organization Party ID ${organizationPartyId} doesn't exist
AmazonError_NoProductStore = Error importing Amazon orders: Product Store ID ${productStoreId} doesn't exist
AmazonError_NoRequiredParameter = Parameter ${parameterName} is required and you must specify it. Product ${internalName} is excluded from post. 
AmazonError_NoSuccesfulProcDocs = No successful processing document downloads - not checking the time of the last successful feed processing document download
AmazonError_NotCheckingLastProcDocSuccessNoEmail = The Amazon component is not configured to send error emails (opentaps.amazon.error.email.sendErrorEmails in amazon.properties) - not checking the time of the last successful feed processing document download
AmazonError_OrderAlreadyImported = Amazon order was previously imported into orderId ${orderId}
AmazonError_OrderImportError = Error importing Amazon order ID ${amazonOrderId}: ${errorMessage}
AmazonError_OrderImportSuccess = Amazon Order ID ${amazonOrderId} successfully imported into orderId ${orderId}
AmazonError_OrderNoItems = Amazon order has no order items to import
AmazonError_ParseError = Error parsing Amazon order document with ID ${documentId}. Error was: ${errorMessage}
AmazonError_PhoneNumberParseFailure = Can't parse phone number ${phoneNumber} into separate fields, inserting into TelecomNumber.contactNumber
AmazonError_PostDeleteProductFeedEmpty = There are no products in resultant XML document. It seems as all products for deletion have some errors and don't pass prior validation.
AmazonError_PostImageAttemptsOverThreshold = Posting of product images to Amazon for product with ID ${productId} has failed more than ${threshold} times, ignoring
AmazonError_PostImageError = Error posting image feed to Amazon.com. Error was: ${errorMessage}. Product IDs affected are: ${productIds}
AmazonError_PostImageNonExistentProduct = Images for product ID ${productId} excluded from product image feed - corresponding AmazonProduct record was not successfully posted 
AmazonError_PostInventoryError = Error posting inventory feed to Amazon.com. Error was: ${errorMessage}. Product IDs affected are: ${productIds}
AmazonError_PostInventoryNonExistentProduct = Inventory for product ID ${productId} excluded from product inventory feed - corresponding AmazonProduct record was not successfully posted 
AmazonError_PostNoDeletedProducts = There are no deleted products. Nothing to post.
AmazonError_PostNoNewImages = There are no new product images. Nothing to post.
AmazonError_PostNoNewPrices = There are no new product prices. Nothing to post.
AmazonError_PostNoNewProductInventory = Inventory has not changed for any products.
AmazonError_PostNoNewProducts = There are no new products. Nothing to post.
AmazonError_PostPriceAttemptsOverThreshold = Posting of prices to Amazon for product with ID ${productId} has failed more than ${threshold} times, ignoring
AmazonError_PostPriceError = Error posting price feed to Amazon.com. Error was: ${errorMessage}. Product IDs affected are: ${productIds}
AmazonError_PostPriceNonExistentProduct = Prices for product ID ${productId} excluded from price feed - corresponding AmazonProduct record was not successfully posted 
AmazonError_PostPriceNoSaleEndDate = Sale price for productId ${productId}  has no thruDate - adding 20 years to the current date
AmazonError_PostPriceSalePriceSkipped = Sale price for productId ${productId} excluded from Amazon Price Feed because it expired in ${thruDate}
AmazonError_PostProductAttemptsOverThreshold = Posting of products to Amazon for product with ID ${productId} has failed more than ${threshold} times, ignoring
AmazonError_PostProductError = Error posting product feed to Amazon.com. Error was: ${errorMessage}. Product IDs affected are: ${productIds}
AmazonError_Processed_Records_Image = Processed ${count} product image records for posting to Amazon.com
AmazonError_Processed_Records_Inventory = Processed ${count} product inventory records for posting to Amazon.com
AmazonError_Processed_Records_Price = Processed ${count} product price records for posting to Amazon.com
AmazonError_Processed_Records_Product = Processed ${count} product records for posting to Amazon.com
AmazonError_ProcessingDocumentId_Image = Amazon.com image feed processingDocumentId = ${processingDocumentId}
AmazonError_ProcessingDocumentId_Inventory = Amazon.com inventory feed processingDocumentId = ${processingDocumentId}
AmazonError_ProcessingDocumentId_Price = Amazon.com price feed processingDocumentId = ${processingDocumentId}
AmazonError_ProcessingDocumentId_Product = Amazon.com product feed processingDocumentId = ${processingDocumentId}
AmazonError_ProductIdNotFound = Product not found for SKU ${sku}
AmazonError_ProductStoreNotConfigured = Amazon product store [${productStoreId}] has not been configured
AmazonError_SKUChangesNotAllowed = Amazon.com integration requires that SKUs not be changed or removed
AmazonError_TaxJurisMatchFail = Amazon tax jurisdiction to tax authority match failed for district [${taxJurisDistrict}], city [${taxJurisCity}], county [${taxJurisCounty}], state [${taxJurisState}]
AmazonError_TaxJurisMatchTrying = Trying Amazon tax jurisdiction to tax authority match by district [${taxJurisDistrict}], city [${taxJurisCity}], county [${taxJurisCounty}], state [${taxJurisState}]
AmazonError_TooMuchElementsInFeed = You may include ${max} ${elementName} to the Product Feed but there are ${elementsCount} elements in database refer to product with ID ${productId}. Unnecessary elements are ignored.
AmazonError_WarningStringTruncated = String <${str}> is longer than ${maxLength} chars. Truncated.
