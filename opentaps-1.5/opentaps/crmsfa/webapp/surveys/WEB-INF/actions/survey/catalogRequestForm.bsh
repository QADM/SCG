/*
 * Copyright (c) Open Source Strategies, Inc.
 * 
 * Opentaps is free software: you can redistribute it and/or modify it
 * under the terms of the GNU Affero General Public License as published
 * by the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * Opentaps is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with Opentaps.  If not, see <http://www.gnu.org/licenses/>.
 */

import org.ofbiz.base.util.*;
import org.ofbiz.entity.util.*;
import org.ofbiz.content.survey.SurveyWrapper;

delegator = request.getAttribute("delegator");

// create a new survey wrapper for the CATRQ_SURVEY survey.  This wrapper basically generates the survey.  See Javadocs for more info.
surveyWrapper = new SurveyWrapper(delegator, "CATRQ_SURVEY");
context.put("surveyWrapper", surveyWrapper);

// marketing campaigns - should cache this search because of high number of lookups versus how frequently new campaigns come out
campaigns = delegator.findByAndCache("MarketingCampaign", UtilMisc.toMap("parentCampaignId", "CATRQ_CAMPAIGNS"), UtilMisc.toList("campaignName"));
context.put("campaigns", campaigns);

// US States
assocs = delegator.findByAndCache("GeoAssoc", UtilMisc.toMap("geoIdTo", "USCN"));
states = EntityUtil.orderBy( EntityUtil.getRelatedCache("MainGeo", assocs), UtilMisc.toList("abbreviation") );
context.put("states", states);

// Countries of the world
countries = delegator.findByAndCache("Geo", UtilMisc.toMap("geoTypeId", "COUNTRY"), UtilMisc.toList("geoName"));
context.put("countries", countries);
