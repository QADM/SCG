/*
 * Copyright (c) Open Source Strategies, Inc.
 * 
 * Opentaps is free software: you can redistribute it and/or modify it
 * under the terms of the GNU Affero General Public License as published
 * by the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * Opentaps is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with Opentaps.  If not, see <http://www.gnu.org/licenses/>.
 */

import org.ofbiz.base.util.UtilMisc;
import org.ofbiz.entity.condition.EntityConditionList;
import org.ofbiz.entity.condition.EntityExpr;
import org.ofbiz.entity.condition.EntityOperator;
import org.ofbiz.entity.util.EntityFindOptions;
import org.ofbiz.entity.util.EntityUtil;

listIteratorNameToUse = parameters.get("listIteratorNameToUse");

// order by
orderParam = parameters.get("campaignsOrderBy");
if (orderParam == null || orderParam.length() == 0) orderParam = "campaignName";
orderBy = UtilMisc.toList(orderParam);

// possible fields we're searching by
campaignName = parameters.get("campaignName");
statusId = parameters.get("statusId");

// search conditions
searchConditions = new ArrayList();

// find parameters for the sorting headers
findParams = "";

// construct search conditions and find parameters
if (campaignName != null && !campaignName.equals("")) {
    searchConditions.add(new EntityExpr("campaignName", true, EntityOperator.LIKE, "%" + campaignName + "%", true));
    findParams += "&campaignName="+campaignName;
}
if (statusId != null && !statusId.equals("")) {
    searchConditions.add(new EntityExpr("statusId", EntityOperator.EQUALS, statusId));
    findParams += "&statusId="+statusId;
}
if (searchConditions.size() == 0) return;
searchConditionList = new EntityConditionList(searchConditions, EntityOperator.AND);

listIt = delegator.findListIteratorByCondition("MarketingCampaign", searchConditionList, null, 
        null,  // fields to select
        orderBy, // fields to order by
        // the first true here is for "specifyTypeAndConcur"
        // the second true is for a distinct select.  Apparently this is the only way the entity engine can do a distinct query
        new EntityFindOptions(true, EntityFindOptions.TYPE_SCROLL_INSENSITIVE, EntityFindOptions.CONCUR_READ_ONLY, true));

// this is the iterator to use in form-widgets
context.put(listIteratorNameToUse, listIt);

// and parameters for the sort headers
context.put("findParams", findParams);
