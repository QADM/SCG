import org.ofbiz.base.util.UtilMisc;
import org.opentaps.common.domain.organization.OrganizationRepository;
import org.opentaps.common.util.UtilAccountingTags;
import org.opentaps.common.util.UtilCommon;
import org.opentaps.base.entities.ClasifPresupuestal;
import org.opentaps.base.entities.EstructuraClave;
import org.opentaps.base.entities.AcctgTagUsageType;
import org.opentaps.base.entities.AcctgTagInvoiceType;

import java.util.Arrays;

import org.ofbiz.entity.condition.*;
import org.ofbiz.base.util.*;
import org.ofbiz.entity.util.EntityUtil;

organizationPartyId = UtilCommon.getOrganizationPartyId(request);
context.put("organizationPartyId", organizationPartyId);

OrganizationRepository repository = new OrganizationRepository(delegator);

// get all available usages
usage = repository.findOne(AcctgTagUsageType.class, repository.map(AcctgTagUsageType.Fields.acctgTagUsageTypeId, "PRCH_INV_ITEMS"));
//usages = repository.findAll(AcctgTagUsageType.class, UtilMisc.toList(AcctgTagUsageType.Fields.acctgTagUsageTypeId.asc()));
context.put("usage", usage);

// Obtener todas las clasificaciones
/// Lista para las clasificaciones

listTabla = new ArrayList();
listTabla.add("Enumeration");
listTabla.add("Geo");
listTabla.add("WorkEffort");

	//Obtenemos las unidades ejecutoras
	unidadConditions = UtilMisc.toList(
		new EntityExpr("tablaRelacion", EntityOperator.IN, listTabla)
	);

tagClassification = delegator.findByCondition("ClasifPresupuestal", new EntityConditionList(unidadConditions, EntityOperator.AND) , UtilMisc.toList("clasificacionId","descripcion"), null);
context.put("tagClassification", tagClassification);

System.out.print("Hola Esmeralda tagClassification " + tagClassification);

// get the used configurations for the organization
// this builds a map associating the usage configuration for the current organization to each usage found,
// note that a configuration might not exist yet, so it could be null
configurations = new HashMap();

	System.out.print("Hola Esmeralda !!!!! ");

    configurations.put(usage, repository.getFirst(repository.findList(AcctgTagInvoiceType.class, repository.map(
          AcctgTagInvoiceType.Fields.organizationPartyId, organizationPartyId,
          AcctgTagInvoiceType.Fields.acctgTagUsageTypeId, usage.getAcctgTagUsageTypeId()))));

System.out.print("Nena configurations " + configurations);
context.put("configurations", configurations);
