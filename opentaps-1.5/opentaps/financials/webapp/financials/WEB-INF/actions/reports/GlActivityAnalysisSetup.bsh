/*
 * Copyright (c) Open Source Strategies, Inc.
 *
 * Opentaps is free software: you can redistribute it and/or modify it
 * under the terms of the GNU Affero General Public License as published
 * by the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * Opentaps is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with Opentaps.  If not, see <http://www.gnu.org/licenses/>.
 *  
 */

 import javolution.util.FastList;
 import org.ofbiz.base.util.UtilDateTime;
 import org.ofbiz.base.util.UtilMisc;
 import org.opentaps.common.reporting.UtilReports;
 import org.opentaps.common.util.UtilCommon;
 import org.opentaps.common.util.UtilMessage;
 import org.opentaps.common.util.UtilAccountingTags;

 organizationPartyId = UtilCommon.getOrganizationPartyId(request);
 if (organizationPartyId == null) {
     return;
 }
 
 glAccounts = delegator.findByAnd("GlAccountOrganizationAndClass", UtilMisc.toMap("organizationPartyId", organizationPartyId));
 if (glAccounts == null) {
     UtilMessage.addError(request, "FinancialsError_ReportGlActivitySetupNoParameter", UtilMisc.toMap("parameter", UtilMessage.expandLabel("AccountingGlAcc", locale)));    
 }
 
 glFiscalTypes = delegator.findAll("GlFiscalType");
 if (glFiscalTypes == null) {
     UtilMessage.addError(request, "FinancialsError_ReportGlActivitySetupNoParameter", UtilMisc.toMap("parameter", UtilMessage.expandLabel("GlFiscalType", locale)));    
 }
 
 printers = UtilReports.enumeratePrinters();
 if (printers != null && printers.size() > 0) {
     context{"printers"} = printers;
 }
 
 context{"glAccounts"} = glAccounts;
 context{"glFiscalTypes"} = glFiscalTypes;
 context{"reportTypes"} = UtilReports.getJRSupportedMimeType(delegator);
 now = UtilDateTime.nowTimestamp();
 context{"thruDate"} = now;
 context{"fromDate"} = UtilDateTime.adjustTimestamp(now, Calendar.MONTH, -1, TimeZone.getDefault(), locale);
context{"tagTypes"} = UtilAccountingTags.getAccountingTagFiltersForOrganization(organizationPartyId, UtilAccountingTags.FINANCIALS_REPORTS_TAG, delegator, locale);
