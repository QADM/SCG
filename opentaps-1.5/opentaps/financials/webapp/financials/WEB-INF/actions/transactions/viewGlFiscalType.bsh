
/*
 * Find the acctg trans Presupuestal  for a transaction
 */

import org.ofbiz.base.util.*;
import org.opentaps.common.util.UtilMessage;
import org.opentaps.common.util.UtilCommon;
import org.opentaps.common.util.UtilAccountingTags;
import org.opentaps.domain.DomainsLoader;
import org.opentaps.domain.ledger.AccountingTransaction;
import org.opentaps.foundation.exception.FoundationException;
import org.opentaps.foundation.repository.ofbiz.Repository;
import org.opentaps.foundation.infrastructure.*;
import javolution.util.FastMap;
import org.ofbiz.entity.condition.*;
import org.ofbiz.entity.util.EntityUtil;
import javolution.util.FastList;

transIds = null;

try {
	transIds = parameters.get("listTransId"); 
	
	clavePresupuestal = UtilCommon.getParameter(context, "clavePres"); 
	agrupador = UtilCommon.getParameter(context, "agrupador");
	
	print("clave Presupuestal: " + clavePresupuestal);
	print("agrupador: " + agrupador);
	
	dl = new DomainsLoader(new Infrastructure(dispatcher), new User(userLogin));
	
	
	
	ledgerDomain = dl.loadDomainsDirectory().getLedgerDomain();
	ledgerRepository = ledgerDomain.getLedgerRepository();
	ledgerSpecification = ledgerRepository.getSpecification();
	
	//// Busqueda de Polizas
	if(clavePresupuestal!=null || agrupador!=null)
	{
		subConditions = UtilMisc.toList(
		new EntityExpr("agrupador", EntityOperator.EQUALS, agrupador),
		new EntityExpr("clavePres", EntityOperator.EQUALS, clavePresupuestal)
		);
		
		transIds = delegator.findByCondition("AcctgTransPresupuestal", new EntityConditionList(subConditions, EntityOperator.AND) , UtilMisc.toList("acctgTransId"), null);
		listTransIds = ledgerRepository.getTransactionsAcctgTrans(transIds); 
		//context.put("listaSubfuente", resultadoSub);
	}
	//////Busqueda por Operacion diaria Ingresos y Egresos
	else
	{	
	
		print("transIds: " + transIds);
		if (transIds == null) return;
		
		listTransIds = null;
		listTransIds = ledgerRepository.getTransactions(transIds); 
		
		
		print("Lista parametros: listTransIds " + listTransIds);
	}
	context.put("listTransIds", Repository.genericValueFromEntity(delegator, listTransIds));
	

   
} catch ( e ) { 
    print( "caught exception: "+e );
}



