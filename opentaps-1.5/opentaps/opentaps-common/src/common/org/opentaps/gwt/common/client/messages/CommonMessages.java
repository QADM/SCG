/*
 * Copyright (c) Open Source Strategies, Inc.
 *
 * Opentaps is free software: you can redistribute it and/or modify it
 * under the terms of the GNU Affero General Public License as published
 * by the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * Opentaps is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with Opentaps.  If not, see <http://www.gnu.org/licenses/>.
 */

// DO NOT EDIT THIS FILE!  THIS IS AUTO GENERATED AND WILL GET WRITTEN OVER PERIODICALLY BY THE GWT BUILD

package org.opentaps.gwt.common.client.messages;

import com.google.gwt.i18n.client.Messages;

public interface CommonMessages extends Messages {
    @DefaultMessage("AP")
    String aP();
    @DefaultMessage("AR")
    String aR();
    @DefaultMessage("Account")
    String account();
    @DefaultMessage("Account Id")
    String accountId();
    @DefaultMessage("Account List")
    String accountList();
    @DefaultMessage("Account Name")
    String accountName();
    @DefaultMessage("Accounting")
    String accounting();
    @DefaultMessage("EFT Account: AHC/Electronic Check")
    String accountingAHCElectronicCheck();
    @DefaultMessage("Account")
    String accountingAccount();
    @DefaultMessage("Account ID")
    String accountingAccountId();
    @DefaultMessage("Account Limit")
    String accountingAccountLimit();
    @DefaultMessage("Account Number")
    String accountingAccountNumber();
    @DefaultMessage("Account Number is missing")
    String accountingAccountNumberMissing();
    @DefaultMessage("Account Transaction Id")
    String accountingAccountTransactionId();
    @DefaultMessage("Account Type")
    String accountingAccountType();
    @DefaultMessage("Account Type is missing")
    String accountingAccountTypeMissing();
    @DefaultMessage("Accounting")
    String accountingAccounting();
    @DefaultMessage("Accounts")
    String accountingAccounts();
    @DefaultMessage("Account Reconciliation")
    String accountingAcctRecon();
    @DefaultMessage("Account Reconciliations")
    String accountingAcctRecons();
    @DefaultMessage("Accounting Transactions")
    String accountingAcctgTrans();
    @DefaultMessage("Accounting Transactions Entries")
    String accountingAcctgTransEntries();
    @DefaultMessage("Accounting Transaction Entries For")
    String accountingAcctgTransEntriesFor();
    @DefaultMessage("Accounting Transactions For")
    String accountingAcctgTransFor();
    @DefaultMessage("Actual Currency Amount")
    String accountingActualCurrencyAmount();
    @DefaultMessage("Actual Currency Uom Id")
    String accountingActualCurrencyUomId();
    @DefaultMessage("Add Agreement Work Effort Applic")
    String accountingAddAgreementWorkEffortApplic();
    @DefaultMessage("Add Category GL Account")
    String accountingAddCategoryGlAccount();
    @DefaultMessage("Add Custom Time Period")
    String accountingAddCustomTimePeriod();
    @DefaultMessage("AccountingAddFinAccountReconciliations")
    String accountingAddFinAccountReconciliations(String finAccount_finAccountName, String finAccountId);
    @DefaultMessage("Add FinAccount Type Gl Account")
    String accountingAddFinAccountTypeGlAccount();
    @DefaultMessage("Add Fixed Asset Identification")
    String accountingAddFixedAssetIdent();
    @DefaultMessage("Add Fixed Asset Maintenance Order")
    String accountingAddFixedAssetMaintOrder();
    @DefaultMessage("Add Fixed Asset Maintenance")
    String accountingAddFixedAssetMaintenance();
    @DefaultMessage("Add Fixed Asset Meter Reading")
    String accountingAddFixedAssetMeter();
    @DefaultMessage("Add Party Fixed Asset Assignment")
    String accountingAddFixedAssetPartyAssignment();
    @DefaultMessage("Add Fixed Asset Registration")
    String accountingAddFixedAssetRegistration();
    @DefaultMessage("Add Fixed Asset Standard Cost")
    String accountingAddFixedAssetStdCost();
    @DefaultMessage("Add New Credit Card")
    String accountingAddNewCreditCard();
    @DefaultMessage("Add New EFT Account")
    String accountingAddNewEftAccount();
    @DefaultMessage("Add New Gift Card")
    String accountingAddNewGiftCard();
    @DefaultMessage("Add Party Gl Account")
    String accountingAddPartyGlAccount();
    @DefaultMessage("Add Payment Group Member")
    String accountingAddPaymentGroupMember();
    @DefaultMessage("Add TaxAuthority GL Account")
    String accountingAddTaxAuthorityGlAccount();
    @DefaultMessage("AccountingAdditionalShippingChargeForShipment")
    String accountingAdditionalShippingChargeForShipment(String shipmentId);
    @DefaultMessage("Admin")
    String accountingAdmin();
    @DefaultMessage("Agreement")
    String accountingAgreement();
    @DefaultMessage("List Available Agreements")
    String accountingAgreementAvailable();
    @DefaultMessage("Agreement Date")
    String accountingAgreementDate();
    @DefaultMessage("Agreement Id")
    String accountingAgreementId();
    @DefaultMessage("Agreement Information")
    String accountingAgreementInformation();
    @DefaultMessage("Please set a supplier in Agreement.partyIdTo and a currency in the AgreementItem before editing the price list")
    String accountingAgreementIsNotSetForSupplierProducts();
    @DefaultMessage("Agreement Item")
    String accountingAgreementItem();
    @DefaultMessage("Agreement Item Products For Report")
    String accountingAgreementItemProductsForReport();
    @DefaultMessage("Agreement Item Seq Id")
    String accountingAgreementItemSeqId();
    @DefaultMessage("Agreement Item Supplier Products For Report")
    String accountingAgreementItemSupplierProductsForReport();
    @DefaultMessage("Terms")
    String accountingAgreementItemTerms();
    @DefaultMessage("Agreement Item Type Id")
    String accountingAgreementItemTypeId();
    @DefaultMessage("Agreement Items")
    String accountingAgreementItems();
    @DefaultMessage("Promotions")
    String accountingAgreementPromoAppls();
    @DefaultMessage("Agreement Roles")
    String accountingAgreementRoles();
    @DefaultMessage("Agreement Term Id")
    String accountingAgreementTermId();
    @DefaultMessage("Agreement Terms")
    String accountingAgreementTerms();
    @DefaultMessage("Agreement Type Id")
    String accountingAgreementTypeId();
    @DefaultMessage("Agreement Work Effort Applic Already Exists")
    String accountingAgreementWorkEffortApplicAlreadyExists();
    @DefaultMessage("Agreement Work Effort Applics")
    String accountingAgreementWorkEffortApplics();
    @DefaultMessage("Agreements")
    String accountingAgreements();
    @DefaultMessage("Amount")
    String accountingAmount();
    @DefaultMessage("Amount Applied")
    String accountingAmountApplied();
    @DefaultMessage("Amount not yet applied")
    String accountingAmountNotApplied();
    @DefaultMessage("Amount To Use")
    String accountingAmountToUse();
    @DefaultMessage("Any Invoice Status")
    String accountingAnyInvoiceStatus();
    @DefaultMessage("Any Payment Method")
    String accountingAnyPaymentMethod();
    @DefaultMessage("Any Payment Status")
    String accountingAnyPaymentStatus();
    @DefaultMessage("Main Page Account Payable")
    String accountingAp();
    @DefaultMessage("OFBiz: AP Manager")
    String accountingApCompanyName();
    @DefaultMessage("Account Payable Manager")
    String accountingApManager();
    @DefaultMessage("Account Payable Manager Application")
    String accountingApManagerApplication();
    @DefaultMessage("Edit Vendor")
    String accountingApPageTitleEditVendor();
    @DefaultMessage("Find Vendor Results")
    String accountingApPageTitleFindVendorResults();
    @DefaultMessage("Find Vendors")
    String accountingApPageTitleFindVendors();
    @DefaultMessage("List Vendors")
    String accountingApPageTitleListVendors();
    @DefaultMessage("AP Payment Groups")
    String accountingApPaymentGroupMenu();
    @DefaultMessage("AccountingApplicationSuccess")
    String accountingApplicationSuccess(String isoCode, String paymentId, String toMessage);
    @DefaultMessage("AccountingApplicationToBillingAccount")
    String accountingApplicationToBillingAccount(String billingAccountId);
    @DefaultMessage("AccountingApplicationToInvoice")
    String accountingApplicationToInvoice(String invoiceId);
    @DefaultMessage("AccountingApplicationToInvoiceItem")
    String accountingApplicationToInvoiceItem(String paymentApplication_invoiceId, String paymentApplication_invoiceItemSeqId);
    @DefaultMessage("AccountingApplicationToPayment")
    String accountingApplicationToPayment(String paymentId);
    @DefaultMessage("AccountingApplicationToTax")
    String accountingApplicationToTax(String taxAuthGeoId);
    @DefaultMessage("Applications")
    String accountingApplications();
    @DefaultMessage("Applied Payments")
    String accountingAppliedPayments();
    @DefaultMessage("Apply this payment to")
    String accountingApplyPaymentoTo();
    @DefaultMessage("Apply Service Credit")
    String accountingApplyServiceCredit();
    @DefaultMessage("Apply to Invoice Items")
    String accountingApplyToInvoiceItems();
    @DefaultMessage("Approved Grand Total")
    String accountingApprovedGrandTotal();
    @DefaultMessage("Main Page Account Receivable")
    String accountingAr();
    @DefaultMessage("OFBiz: AR Manager")
    String accountingArCompanyName();
    @DefaultMessage("Account Receivable Manager")
    String accountingArManager();
    @DefaultMessage("Account Receivable Manager Application")
    String accountingArManagerApplication();
    @DefaultMessage("List Reports")
    String accountingArPageTitleListReports();
    @DefaultMessage("AR Payment Groups")
    String accountingArPaymentGroupMenu();
    @DefaultMessage("Arithmetic properties for Invoice services not configured properly. Cannot proceed.")
    String accountingAritmeticPropertiesNotConfigured();
    @DefaultMessage("Assets")
    String accountingAssets();
    @DefaultMessage("Assign Payment to This Invoice")
    String accountingAssignPaymentToInvoice();
    @DefaultMessage("Assign Purchase Invoice type to Revenue GL Account Number")
    String accountingAssignPurchaseInvoiceToRevenue();
    @DefaultMessage("Assign Sales Invoice type to Revenue GL Account Number")
    String accountingAssignSalesInvoiceToRevenue();
    @DefaultMessage("Assign to Reconciliation")
    String accountingAssignToReconciliation();
    @DefaultMessage("Authorize")
    String accountingAuthorize();
    @DefaultMessage("Authorize Dot Net API Version")
    String accountingAuthorizeNetApiVersion();
    @DefaultMessage("Delimited Data")
    String accountingAuthorizeNetDelimitedData();
    @DefaultMessage("Delimited Char")
    String accountingAuthorizeNetDelimiterChar();
    @DefaultMessage("Email to Customer")
    String accountingAuthorizeNetEmailCustomer();
    @DefaultMessage("Email to Merchant")
    String accountingAuthorizeNetEmailMerchant();
    @DefaultMessage("Method (only CC supported)")
    String accountingAuthorizeNetMethod();
    @DefaultMessage("CC")
    String accountingAuthorizeNetMethodCC();
    @DefaultMessage("Relay Response")
    String accountingAuthorizeNetRelayResponse();
    @DefaultMessage("Test Mode")
    String accountingAuthorizeNetTestMode();
    @DefaultMessage("Transaction Key")
    String accountingAuthorizeNetTransKey();
    @DefaultMessage("Transaction URL")
    String accountingAuthorizeNetTransactionUrl();
    @DefaultMessage("Available Internal Organizations")
    String accountingAvailableInternalOrganizations();
    @DefaultMessage("Back to Admin")
    String accountingBackToAdmin();
    @DefaultMessage("Balance Due")
    String accountingBalanceDue();
    @DefaultMessage("Balance Of The Account")
    String accountingBalanceOfTheAccount();
    @DefaultMessage("Balance Sheet")
    String accountingBalanceSheet();
    @DefaultMessage("Bank")
    String accountingBank();
    @DefaultMessage("Bank Account")
    String accountingBankAccount();
    @DefaultMessage("Bank Name")
    String accountingBankName();
    @DefaultMessage("Bank Name is missing")
    String accountingBankNameMissing();
    @DefaultMessage("Bank Reconciliation")
    String accountingBankReconciliation();
    @DefaultMessage("Bill-To Address1")
    String accountingBillToAddress1();
    @DefaultMessage("Bill-To Address2")
    String accountingBillToAddress2();
    @DefaultMessage("Bill Up To")
    String accountingBillUpTo();
    @DefaultMessage("Billing")
    String accountingBilling();
    @DefaultMessage("Billing Account")
    String accountingBillingAccount();
    @DefaultMessage("AccountingBillingAccountBalanceNotFound")
    String accountingBillingAccountBalanceNotFound(String billingAccountId);
    @DefaultMessage("AccountingBillingAccountBalanceProblem")
    String accountingBillingAccountBalanceProblem(String billingAccountId, String isoCode);
    @DefaultMessage("AccountingBillingAccountCurrencyProblem")
    String accountingBillingAccountCurrencyProblem(String billingAccountId, String accountCurrencyUomId, String paymentId, String paymentCurrencyUomId);
    @DefaultMessage("Billing Acct ID")
    String accountingBillingAccountId();
    @DefaultMessage("Billing Account Invoices")
    String accountingBillingAccountInvoices();
    @DefaultMessage("AccountingBillingAccountLessRequested")
    String accountingBillingAccountLessRequested(String billingAccountId, String isoCode, String isoCode1);
    @DefaultMessage("AccountingBillingAccountNotEnough")
    String accountingBillingAccountNotEnough(String billingAccountId, String isoCode, String isoCode1);
    @DefaultMessage("AccountingBillingAccountNotFound")
    String accountingBillingAccountNotFound(String billingAccountId);
    @DefaultMessage("Billing Account Only")
    String accountingBillingAccountOnly();
    @DefaultMessage("Billing Account Payments")
    String accountingBillingAccountPayments();
    @DefaultMessage("Billing Accounts")
    String accountingBillingAccounts();
    @DefaultMessage("Billing Acct")
    String accountingBillingAcct();
    @DefaultMessage("Billing Address")
    String accountingBillingAddress();
    @DefaultMessage("Available Balance")
    String accountingBillingAvailableBalance();
    @DefaultMessage("This is the amount which can be used for new orders.")
    String accountingBillingAvailableBalanceMessage();
    @DefaultMessage("Billing Contact Mech")
    String accountingBillingContactMechId();
    @DefaultMessage("Billing Address; Add Party/Role first, then select from drop-down")
    String accountingBillingContactMechIdMessage();
    @DefaultMessage("AccountingBilling Information")
    String accountingBillingInformation();
    @DefaultMessage("Billing Accounts")
    String accountingBillingMenu();
    @DefaultMessage("Net Balance")
    String accountingBillingNetBalance();
    @DefaultMessage("This is the amount which is currently outstanding on the billing account.")
    String accountingBillingNetBalanceMessage();
    @DefaultMessage("Both InvoiceId and BillingAccountId Empty")
    String accountingBothInvoiceIdBillingAccountIdEmptyError();
    @DefaultMessage("By Account")
    String accountingByAccount();
    @DefaultMessage("By Date")
    String accountingByDate();
    @DefaultMessage("Cancel Bank Reconciliation")
    String accountingCancelBankReconciliation();
    @DefaultMessage("Cancel Batch Payments")
    String accountingCancelBatchPayments();
    @DefaultMessage("AccountingCancelBatchPaymentsError")
    String accountingCancelBatchPaymentsError(String paymentGroupId, String glReconciliationId);
    @DefaultMessage("Cancel Check Run")
    String accountingCancelCheckRun();
    @DefaultMessage("Cancel Transaction Status")
    String accountingCancelTransactionStatus();
    @DefaultMessage("Cannot add incoming payment to paymentGroup type Check Run")
    String accountingCannotCreateIncomingPaymentError();
    @DefaultMessage("Cannot add outgoing payment to paymentGroup type Batch Of Payments")
    String accountingCannotCreateOutgoingPaymentError();
    @DefaultMessage("AccountingCannotGetPaymentForApplication")
    String accountingCannotGetPaymentForApplication(String payAppl, String msg);
    @DefaultMessage("AccountingCannotIncludeApPaymentError")
    String accountingCannotIncludeApPaymentError(String disbursementPaymentIds);
    @DefaultMessage("Capture")
    String accountingCapture();
    @DefaultMessage("The credit card specified does not belong to you, you may not view or edit it")
    String accountingCardInfoNotBelongToYou();
    @DefaultMessage("Card Number")
    String accountingCardNumber();
    @DefaultMessage("Card Number is missing")
    String accountingCardNumberMissing();
    @DefaultMessage("Card Security Code")
    String accountingCardSecurityCode();
    @DefaultMessage("Card Type")
    String accountingCardType();
    @DefaultMessage("Card Type is missing")
    String accountingCardTypeMissing();
    @DefaultMessage("Cash Balance")
    String accountingCashBalance();
    @DefaultMessage("Cash Flow Statement")
    String accountingCashFlowStatement();
    @DefaultMessage("Chart of accounts for")
    String accountingChartOfAcctsFor();
    @DefaultMessage("Chart of Accounts")
    String accountingChartOfAcctsMenu();
    @DefaultMessage("Check Amount")
    String accountingCheckAmount();
    @DefaultMessage("Check If You Have A Gift Card To Use Today")
    String accountingCheckGiftCard();
    @DefaultMessage("Check Is Already Issued")
    String accountingCheckIsAlreadyIssued();
    @DefaultMessage("Check Number")
    String accountingCheckNumber();
    @DefaultMessage("Checks")
    String accountingChecks();
    @DefaultMessage("Child Periods")
    String accountingChildPeriods();
    @DefaultMessage("Closed Time Periods")
    String accountingClosedTimePeriods();
    @DefaultMessage("Closing Cash Balance")
    String accountingClosingCashBalance();
    @DefaultMessage("Comments")
    String accountingComments();
    @DefaultMessage("Commission Amount")
    String accountingCommissionAmount();
    @DefaultMessage("Commission Report")
    String accountingCommissionReport();
    @DefaultMessage("Commission Run")
    String accountingCommissionRun();
    @DefaultMessage("Companies")
    String accountingCompanies();
    @DefaultMessage("OFBiz: Accounting Manager")
    String accountingCompanyName();
    @DefaultMessage("Company Name on Account")
    String accountingCompanyNameAccount();
    @DefaultMessage("Company Name Card")
    String accountingCompanyNameCard();
    @DefaultMessage("Company Name on Account")
    String accountingCompanyNameOnAccount();
    @DefaultMessage("Company Name on Card")
    String accountingCompanyNameOnCard();
    @DefaultMessage("Part of the Open For Business Family of Open Source Software")
    String accountingCompanySubtitle();
    @DefaultMessage("Comparative Balance Sheet")
    String accountingComparativeBalanceSheet();
    @DefaultMessage("Comparative Cash Flow Statement")
    String accountingComparativeCashFlowStatement();
    @DefaultMessage("Comparative Income Statement")
    String accountingComparativeIncomeStatement();
    @DefaultMessage("Complete transaction fields")
    String accountingCompleteAcctgTransFields();
    @DefaultMessage("AccountingConsolidatedDataFromDivisions")
    String accountingConsolidatedDataFromDivisions(String partyNameList);
    @DefaultMessage("Copy Agreement")
    String accountingCopyAgreement();
    @DefaultMessage("Could not find GlAccount with ID")
    String accountingCouldNotFindGlAccount();
    @DefaultMessage("Create Account Reconciliation")
    String accountingCreateAcctRecons();
    @DefaultMessage("Quick Create an Accounting Transaction")
    String accountingCreateAcctgTransAndEntries();
    @DefaultMessage("Create an Accounting Transaction")
    String accountingCreateAnAccountingTransaction();
    @DefaultMessage("Create Assignment")
    String accountingCreateAssignment();
    @DefaultMessage("Create Batch")
    String accountingCreateBatch();
    @DefaultMessage("Create Billing Account")
    String accountingCreateBillingAccount();
    @DefaultMessage("Create Billing Account Role")
    String accountingCreateBillingAccountRole();
    @DefaultMessage("Create Billing Account Term")
    String accountingCreateBillingAccountTerm();
    @DefaultMessage("Create New Cost Component Calc")
    String accountingCreateCostComponentCalc();
    @DefaultMessage("Security Error: to run createFixedAssetMaintOrder you must have the ACCOUNTING_CREATEUPDATE or ACCOUNTING_ADMIN permission, or the limited ACCOUNTING_ROLE_CREATE permission")
    String accountingCreateFixedAssetMaintOrderPermissionError();
    @DefaultMessage("Create New Credit Card")
    String accountingCreateNewCreditCard();
    @DefaultMessage("Create New Deposit Payment")
    String accountingCreateNewDepositPayment();
    @DefaultMessage("AccountingCreateNewDepositPaymentFor")
    String accountingCreateNewDepositPaymentFor(String finAccount_finAccountName, String finAccountId);
    @DefaultMessage("Create New Deposit Slip")
    String accountingCreateNewDepositSlip();
    @DefaultMessage("AccountingCreateNewDepositSlipForFinancialAccount")
    String accountingCreateNewDepositSlipForFinancialAccount(String finAccount_finAccountName, String finAccountId);
    @DefaultMessage("Create New EFT Account")
    String accountingCreateNewEftAccount();
    @DefaultMessage("Create New Financial Account")
    String accountingCreateNewFinAccount();
    @DefaultMessage("Create New Financial Account Reconciliations")
    String accountingCreateNewFinAccountReconciliations();
    @DefaultMessage("Create New Gift Card")
    String accountingCreateNewGiftCard();
    @DefaultMessage("Create New Invoice")
    String accountingCreateNewInvoice();
    @DefaultMessage("Create New Payment Group")
    String accountingCreateNewPaymentGroup();
    @DefaultMessage("New Purchase Invoice")
    String accountingCreateNewPurchaseInvoice();
    @DefaultMessage("New Sales Invoice")
    String accountingCreateNewSalesInvoice();
    @DefaultMessage("Create New Withdrawal Payment")
    String accountingCreateNewWithdrawalPayment();
    @DefaultMessage("AccountingCreateNewWithdrawalPaymentFor")
    String accountingCreateNewWithdrawalPaymentFor(String finAccount_finAccountName, String finAccountId);
    @DefaultMessage("Create Payment")
    String accountingCreatePayment();
    @DefaultMessage("Create Payment Accounting Transaction")
    String accountingCreatePaymentAcctgTrans();
    @DefaultMessage("Security Error : To Create a Payment you must either be the to or from party or have the PAY_INFO_CREATE or PAY_INFO_ADMIN permissions.")
    String accountingCreatePaymentPermissionError();
    @DefaultMessage("Security Error: to run createGlAccount you must have the ACCOUNTING_CREATE or ACCOUNTING_ADMIN permission")
    String accountingCreatePermissionError();
    @DefaultMessage("Create Sales Accounting Transaction")
    String accountingCreateSalesAcctgTrans();
    @DefaultMessage("Created/Approved Grand Total")
    String accountingCreatedApprovedGrandTotal();
    @DefaultMessage("Created Grand Total")
    String accountingCreatedGrandTotal();
    @DefaultMessage("Credit Amount")
    String accountingCreditAmount();
    @DefaultMessage("Credit Card")
    String accountingCreditCard();
    @DefaultMessage("Billing Address associated with Credit Card not found.")
    String accountingCreditCardBillingAddNotFoundError();
    @DefaultMessage("Could not create credit card (id generation failure)")
    String accountingCreditCardCreateIdGenerationFailure();
    @DefaultMessage("Could not create credit card (write failure) :")
    String accountingCreditCardCreateWriteFailure();
    @DefaultMessage("Bill To Email Address not found.")
    String accountingCreditCardEmailAddNotFoundError();
    @DefaultMessage("AccountingCreditCardExpireDateBeforeToday")
    String accountingCreditCardExpireDateBeforeToday(String expireDate);
    @DefaultMessage("Credit Card Information")
    String accountingCreditCardInformation();
    @DefaultMessage("Not creating credit card.  Credit card not verified, authentication failed.")
    String accountingCreditCardManualAuthFailedError();
    @DefaultMessage("AccountingCreditCardNumberInvalid")
    String accountingCreditCardNumberInvalid(String cardNumber, String cardType, String validCardType);
    @DefaultMessage("Credit Card Payment Method ID is missing")
    String accountingCreditCardPaymentMethodIdMissing();
    @DefaultMessage("Credit Card Type GlAccount")
    String accountingCreditCardTypeGlAccount();
    @DefaultMessage("Could not update credit card info (id generation failure)")
    String accountingCreditCardUpdateIdGenerationFailure();
    @DefaultMessage("Could not get credit card to update (read error) :")
    String accountingCreditCardUpdateReadFailure();
    @DefaultMessage("ERROR: Could not find credit card to update with payment method id")
    String accountingCreditCardUpdateWithPaymentMethodId();
    @DefaultMessage("AccountingCreditCardUpdateWithoutPermission")
    String accountingCreditCardUpdateWithoutPermission(String partyId, String paymentMethodId);
    @DefaultMessage("Could not update credit card (write failure) :")
    String accountingCreditCardUpdateWriteFailure();
    @DefaultMessage("Cr/Dr")
    String accountingCreditDebitFlag();
    @DefaultMessage("Cr")
    String accountingCreditFlag();
    @DefaultMessage("Currency")
    String accountingCurrency();
    @DefaultMessage("Current Asset")
    String accountingCurrentAsset();
    @DefaultMessage("Your current balance is:")
    String accountingCurrentBalance();
    @DefaultMessage("Problem checking you balance; check your card and pin number and try again")
    String accountingCurrentBalanceProblem();
    @DefaultMessage("Current Bank Reconciliation")
    String accountingCurrentBankReconciliation();
    @DefaultMessage("Current Custom Time Period")
    String accountingCurrentCustomTimePeriod();
    @DefaultMessage("Cust.Nr")
    String accountingCustNr();
    @DefaultMessage("Customer")
    String accountingCustomer();
    @DefaultMessage("CyberSource API Version")
    String accountingCyberSourceApiVersion();
    @DefaultMessage("Auto-Bill In Authorization (Capture)")
    String accountingCyberSourceAutoBill();
    @DefaultMessage("Avs Decline Codes -- May not be supported any longer")
    String accountingCyberSourceAvsDeclineCodes();
    @DefaultMessage("Disable AVS for Capture -- May not be supported any longer")
    String accountingCyberSourceDisableBillAvs();
    @DefaultMessage("Use DAV In Authorization -- May not be supported any longer")
    String accountingCyberSourceEnableDav();
    @DefaultMessage("Use Fraud Scoring In Authorization -- May not be supported any longer")
    String accountingCyberSourceFraudScore();
    @DefaultMessage("Ignore AVS Results")
    String accountingCyberSourceIgnoreAvs();
    @DefaultMessage("Directory of the keys from CyberSource (Generate using online tools)")
    String accountingCyberSourceKeysDir();
    @DefaultMessage("Name of the keystore (if different then \"merchantID.p12\")")
    String accountingCyberSourceKeysFile();
    @DefaultMessage("Log directory")
    String accountingCyberSourceLogDir();
    @DefaultMessage("Log transaction information")
    String accountingCyberSourceLogEnable();
    @DefaultMessage("Log File Name")
    String accountingCyberSourceLogFile();
    @DefaultMessage("Max log size (megabytes)")
    String accountingCyberSourceLogSize();
    @DefaultMessage("Merchant Contact")
    String accountingCyberSourceMerchantContact();
    @DefaultMessage("Merchant Description")
    String accountingCyberSourceMerchantDescr();
    @DefaultMessage("Enable Production Mode")
    String accountingCyberSourceProduction();
    @DefaultMessage("Data Exchange")
    String accountingDataExchange();
    @DefaultMessage("Field dateAcquired is empty in FixedAsset data.")
    String accountingDateAcquiredIsEmpty();
    @DefaultMessage("Date Filter")
    String accountingDateFilter();
    @DefaultMessage("Debit Amount")
    String accountingDebitAmount();
    @DefaultMessage("Debit and Credit Totals must be equal to post to GL.")
    String accountingDebitCreditMustEqual();
    @DefaultMessage("Dr")
    String accountingDebitFlag();
    @DefaultMessage("Debit Or Credit Of The Balance")
    String accountingDebitOrCreditOfBalance();
    @DefaultMessage("Security Error: to run deleteFixedAssetMaintOrder you must have the ACCOUNTING_DELETE or ACCOUNTING_ADMIN permission, or the limited ACCOUNTING_ROLE_UPDATE permission")
    String accountingDeleteFixedAssetMaintOrderPermissionError();
    @DefaultMessage("Deposit")
    String accountingDeposit();
    @DefaultMessage("AccountingDepositOrWithdrawPayments")
    String accountingDepositOrWithdrawPayments(String finAccount_finAccountName, String finAccountId);
    @DefaultMessage("AccountingDepositPaymentInFinAccount")
    String accountingDepositPaymentInFinAccount(String finAccount_finAccountName);
    @DefaultMessage("Deposit Slip")
    String accountingDepositSlip();
    @DefaultMessage("Deposit Slip Id")
    String accountingDepositSlipId();
    @DefaultMessage("Deposit Slips")
    String accountingDepositSlips();
    @DefaultMessage("Deposit/Withdraw")
    String accountingDepositWithdraw();
    @DefaultMessage("Descr")
    String accountingDescr();
    @DefaultMessage("Due Date")
    String accountingDueDate();
    @DefaultMessage("Duplicate Accounting Transaction")
    String accountingDuplicateAccountingTransaction();
    @DefaultMessage("EFT Account")
    String accountingEFTAccount();
    @DefaultMessage("EFT Account Information")
    String accountingEFTAccountInformation();
    @DefaultMessage("EFT Account Payment Method ID is missing")
    String accountingEFTAccountPaymentMethodIdMissing();
    @DefaultMessage("The EFT Account specified does not belong to you, you may not view or edit it")
    String accountingEFTNotBelongToYou();
    @DefaultMessage("Edit Account Reconciliation")
    String accountingEditAcctRecon();
    @DefaultMessage("Edit Credit Card")
    String accountingEditCreditCard();
    @DefaultMessage("Edit Custom Time Periods")
    String accountingEditCustomTimePeriods();
    @DefaultMessage("AccountingEditFinAccount")
    String accountingEditFinAccount(String finAccount_finAccountName, String finAccountId);
    @DefaultMessage("AccountingEditFinAccountAuthorityFor")
    String accountingEditFinAccountAuthorityFor(String finAccount_finAccountName, String finAccountId);
    @DefaultMessage("AccountingEditFinAccountReconciliations")
    String accountingEditFinAccountReconciliations(String finAccount_finAccountName, String finAccountId);
    @DefaultMessage("AccountingEditFinAccountRoleFor")
    String accountingEditFinAccountRoleFor(String finAccount_finAccountName, String finAccountId);
    @DefaultMessage("AccountingEditFinAccountTransactionFor")
    String accountingEditFinAccountTransactionFor(String finAccount_finAccountName, String finAccountId);
    @DefaultMessage("Edit Gift Card")
    String accountingEditGiftCard();
    @DefaultMessage("Edit Payment")
    String accountingEditPayment();
    @DefaultMessage("Edit Payment Group")
    String accountingEditPaymentGroup();
    @DefaultMessage("AccountingEditPaymentGroupFor")
    String accountingEditPaymentGroupFor(String finAccount_finAccountName, String finAccountId);
    @DefaultMessage("Edit Payment Group Member")
    String accountingEditPaymentGroupMember();
    @DefaultMessage("AccountingEditPaymentGroupMemberFor")
    String accountingEditPaymentGroupMemberFor(String finAccount_finAccountName, String finAccountId);
    @DefaultMessage("Edit TaxAuthority GL Accounts")
    String accountingEditTaxAuthorityGlAccounts();
    @DefaultMessage("Effective")
    String accountingEffective();
    @DefaultMessage("Effective Date")
    String accountingEffectiveDate();
    @DefaultMessage("AccountingEmailScheduledToSend")
    String accountingEmailScheduledToSend(String parameters_invoiceId);
    @DefaultMessage("Leave empty for maximum amount")
    String accountingEmptyForMaxAmount();
    @DefaultMessage("Ending Balance")
    String accountingEndingBalance();
    @DefaultMessage("Ending Cash Balance")
    String accountingEndingCashBalance();
    @DefaultMessage("Enter your physical and virtual card and pin number to link your account")
    String accountingEnterGiftCardLink();
    @DefaultMessage("Enter your gift card number and PIN to check the balance")
    String accountingEnterGiftCardNumber();
    @DefaultMessage("AccountingEntityDataProblemCreatingInvoiceFromOrderItems")
    String accountingEntityDataProblemCreatingInvoiceFromOrderItems(String reason);
    @DefaultMessage("Equities")
    String accountingEquities();
    @DefaultMessage("Error creating InvoiceContactMech from order")
    String accountingErrorCreatingInvoiceContactMechFromOrder();
    @DefaultMessage("AccountingErrorCreatingInvoiceForReturn")
    String accountingErrorCreatingInvoiceForReturn(String returnId);
    @DefaultMessage("AccountingErrorCreatingInvoiceForShipment")
    String accountingErrorCreatingInvoiceForShipment(String shipmentId);
    @DefaultMessage("Error creating invoice from order")
    String accountingErrorCreatingInvoiceFromOrder();
    @DefaultMessage("Error creating invoice from order while checking payment applications")
    String accountingErrorCreatingInvoiceFromOrderCheckPaymentAppl();
    @DefaultMessage("Error creating InvoiceItem from order")
    String accountingErrorCreatingInvoiceItemFromOrder();
    @DefaultMessage("Error creating InvoiceRole from order")
    String accountingErrorCreatingInvoiceRoleFromOrder();
    @DefaultMessage("Error creating InvoiceTerm from order")
    String accountingErrorCreatingInvoiceTermFromOrder();
    @DefaultMessage("Error creating OrderAdjustmentBilling from order")
    String accountingErrorCreatingOrderAdjustmentBillingFromOrder();
    @DefaultMessage("Error creating OrderItemBilling from order")
    String accountingErrorCreatingOrderItemBillingFromOrder();
    @DefaultMessage("Field expectedEndOfLife is empty in FixedAsset data.")
    String accountingExpEndOfLifeIsEmpty();
    @DefaultMessage("Expenses")
    String accountingExpenses();
    @DefaultMessage("Expiration Date")
    String accountingExpirationDate();
    @DefaultMessage("The expiration date is before today")
    String accountingExpirationDateIsBeforeToday();
    @DefaultMessage("Expiration Month is missing")
    String accountingExpirationMonthMissing();
    @DefaultMessage("Expiration Year is missing")
    String accountingExpirationYearMissing();
    @DefaultMessage("Export as CSV")
    String accountingExportAsCsv();
    @DefaultMessage("Export as PDF")
    String accountingExportAsPdf();
    @DefaultMessage("Accounting External Account Id")
    String accountingExternalAccountId();
    @DefaultMessage("Foreign Exchange Rates")
    String accountingFX();
    @DefaultMessage("Financial Account")
    String accountingFinAccount();
    @DefaultMessage("Authorizations")
    String accountingFinAccountAuth();
    @DefaultMessage("FinAccountTrans must be in created status.")
    String accountingFinAccountTransInvalidStatusError();
    @DefaultMessage("Financial Account Transaction")
    String accountingFinAccountTransaction();
    @DefaultMessage("Transactions")
    String accountingFinAccountTransations();
    @DefaultMessage("FinAccount Type Gl Account")
    String accountingFinAccountTypeGlAccount();
    @DefaultMessage("Financial Accounts")
    String accountingFinAccounts();
    @DefaultMessage("Fin Account Trans Associated To Gl Reconciliation")
    String accountingFinAcctTransAssociatedToGlReconciliation();
    @DefaultMessage("Find AP Invoices")
    String accountingFindApInvoices();
    @DefaultMessage("Find AP Payment Groups")
    String accountingFindApPaymentGroups();
    @DefaultMessage("Find AP Payments")
    String accountingFindApPayments();
    @DefaultMessage("Find AR Invoices")
    String accountingFindArInvoices();
    @DefaultMessage("Find AR Payment Groups")
    String accountingFindArPaymentGroups();
    @DefaultMessage("Find AR Payments")
    String accountingFindArPayments();
    @DefaultMessage("AccountingFindDepositSlip")
    String accountingFindDepositSlip(String finAccount_finAccountName, String finAccountId);
    @DefaultMessage("Find Financial Account Reconciliations")
    String accountingFindFinAccountReconciliations();
    @DefaultMessage("Find Fixed Assets")
    String accountingFindFixedAssets();
    @DefaultMessage("Find Invoices")
    String accountingFindInvoices();
    @DefaultMessage("Find Payment Group")
    String accountingFindPaymentGroup();
    @DefaultMessage("Find Purchase Invoices")
    String accountingFindPurchaseInvoices();
    @DefaultMessage("Find Purchase Invoices By Due Date")
    String accountingFindPurchaseInvoicesByDueDate();
    @DefaultMessage("Find Sales Invoices By Due Date")
    String accountingFindSalesInvoicesByDueDate();
    @DefaultMessage("Find Sales Invoices For Commission Run")
    String accountingFindSalesInvoicesForCommissionRun();
    @DefaultMessage("First Name Card")
    String accountingFirstNameCard();
    @DefaultMessage("First Name on Card is missing")
    String accountingFirstNameOnCardMissing();
    @DefaultMessage("01-Jan")
    String accountingFiscalMonth01();
    @DefaultMessage("02-Feb")
    String accountingFiscalMonth02();
    @DefaultMessage("03-Mar")
    String accountingFiscalMonth03();
    @DefaultMessage("04-Apr")
    String accountingFiscalMonth04();
    @DefaultMessage("05-May")
    String accountingFiscalMonth05();
    @DefaultMessage("06-Jun")
    String accountingFiscalMonth06();
    @DefaultMessage("07-Jul")
    String accountingFiscalMonth07();
    @DefaultMessage("08-Aug")
    String accountingFiscalMonth08();
    @DefaultMessage("09-Sep")
    String accountingFiscalMonth09();
    @DefaultMessage("10-Oct")
    String accountingFiscalMonth10();
    @DefaultMessage("11-Nov")
    String accountingFiscalMonth11();
    @DefaultMessage("12-Dec")
    String accountingFiscalMonth12();
    @DefaultMessage("Fixed Asset")
    String accountingFixedAsset();
    @DefaultMessage("Calendar")
    String accountingFixedAssetCalendar();
    @DefaultMessage("Fixed Asset Class Enum Id")
    String accountingFixedAssetClassEnumId();
    @DefaultMessage("Depreciation")
    String accountingFixedAssetDepreciation();
    @DefaultMessage("Depreciation method not found")
    String accountingFixedAssetDepreciationMethodNotFound();
    @DefaultMessage("Create/Update Fixed Asset")
    String accountingFixedAssetEdit();
    @DefaultMessage("Government Agency")
    String accountingFixedAssetGovAgencyPartyId();
    @DefaultMessage("Fixed Asset Id")
    String accountingFixedAssetId();
    @DefaultMessage("AccountingFixedAssetIdAlreadyExists")
    String accountingFixedAssetIdAlreadyExists(String parameters_fixedAssetId);
    @DefaultMessage("Value")
    String accountingFixedAssetIdentIdValue();
    @DefaultMessage("Identification Type")
    String accountingFixedAssetIdentType();
    @DefaultMessage("Fixed Asset Ident Type Id")
    String accountingFixedAssetIdentTypeId();
    @DefaultMessage("Identifications")
    String accountingFixedAssetIdents();
    @DefaultMessage("License Number")
    String accountingFixedAssetLicenseNumber();
    @DefaultMessage("Maintenance")
    String accountingFixedAssetMaint();
    @DefaultMessage("Interval Meter Type")
    String accountingFixedAssetMaintIntervalMeterType();
    @DefaultMessage("Interval Quantity")
    String accountingFixedAssetMaintIntervalQuantity();
    @DefaultMessage("Interval Uom")
    String accountingFixedAssetMaintIntervalUom();
    @DefaultMessage("If the Product Maintenance is specified, this will be set/reset automatically")
    String accountingFixedAssetMaintMessage1();
    @DefaultMessage("Only use if applicable, can use Maintenance Type instead")
    String accountingFixedAssetMaintMessage2();
    @DefaultMessage("If Maintenance Template is specified with Product Maintenance, this will be set/reset automatically")
    String accountingFixedAssetMaintMessage3();
    @DefaultMessage("Maintenance Name")
    String accountingFixedAssetMaintName();
    @DefaultMessage("Purchase Orders")
    String accountingFixedAssetMaintOrders();
    @DefaultMessage("Fixed Asset Maint Seq Id")
    String accountingFixedAssetMaintSeqId();
    @DefaultMessage("Maintenance Type")
    String accountingFixedAssetMaintType();
    @DefaultMessage("AccountingFixedAssetMaintWorkEffortName")
    String accountingFixedAssetMaintWorkEffortName(String fixedAsset_fixedAssetName, String fixedAsset_fixedAssetId);
    @DefaultMessage("Maintenance Template")
    String accountingFixedAssetMaintenanceTemplate();
    @DefaultMessage("Maintenances")
    String accountingFixedAssetMaints();
    @DefaultMessage("Fixed Asset Manufacturer Id")
    String accountingFixedAssetManufacturerId();
    @DefaultMessage("*) empty, but maximum from fixed Asset capacity shown")
    String accountingFixedAssetMessage1();
    @DefaultMessage("Meter Value")
    String accountingFixedAssetMeterValue();
    @DefaultMessage("Meter Readings")
    String accountingFixedAssetMeters();
    @DefaultMessage("Fixed Asset Name")
    String accountingFixedAssetName();
    @DefaultMessage("Add link to Fixed Asset")
    String accountingFixedAssetNew();
    @DefaultMessage("Asset Group")
    String accountingFixedAssetParent();
    @DefaultMessage("Party Roles")
    String accountingFixedAssetParties();
    @DefaultMessage("Link New product to Fixed Asset")
    String accountingFixedAssetProductAdd();
    @DefaultMessage("Fixed Asset Product Type")
    String accountingFixedAssetProductType();
    @DefaultMessage("Type of usage")
    String accountingFixedAssetProductTypeId();
    @DefaultMessage("Update a link to a fixed Asset")
    String accountingFixedAssetProductUpd();
    @DefaultMessage("Products")
    String accountingFixedAssetProducts();
    @DefaultMessage("Registration Number")
    String accountingFixedAssetRegNumber();
    @DefaultMessage("Registrations")
    String accountingFixedAssetRegistrations();
    @DefaultMessage("RollUp")
    String accountingFixedAssetRollUp();
    @DefaultMessage("Standard Cost already Exists")
    String accountingFixedAssetStdCostAlreadyExists();
    @DefaultMessage("Standard Cost Type")
    String accountingFixedAssetStdCostTypeId();
    @DefaultMessage("Standard Costs")
    String accountingFixedAssetStdCosts();
    @DefaultMessage("Fixed Asset Type Gl Mappings")
    String accountingFixedAssetTypeGlAccounts();
    @DefaultMessage("Asset Type")
    String accountingFixedAssetTypeId();
    @DefaultMessage("Fixed Assets")
    String accountingFixedAssets();
    @DefaultMessage("From Party")
    String accountingFromParty();
    @DefaultMessage("From Party ID")
    String accountingFromPartyId();
    @DefaultMessage("At least the ''from'' party should be the same as the ''to'' party of the other payment")
    String accountingFromPartySameToParty();
    @DefaultMessage("Gateway Response")
    String accountingGatewayResponse();
    @DefaultMessage("Gateway Responses")
    String accountingGatewayResponses();
    @DefaultMessage("General Ledger")
    String accountingGeneralLedger();
    @DefaultMessage("Gift")
    String accountingGift();
    @DefaultMessage("Gift Card")
    String accountingGiftCard();
    @DefaultMessage("Gift Card Balance")
    String accountingGiftCardBalance();
    @DefaultMessage("Gift Card Information")
    String accountingGiftCardInformation();
    @DefaultMessage("Gift Card Link")
    String accountingGiftCardLink();
    @DefaultMessage("Gift Card Number")
    String accountingGiftCardNumber();
    @DefaultMessage("GL Account")
    String accountingGlAccount();
    @DefaultMessage("GL Account Assignments")
    String accountingGlAccountAssignments();
    @DefaultMessage("GL Account Class")
    String accountingGlAccountClass();
    @DefaultMessage("GL Account defaults")
    String accountingGlAccountDefault();
    @DefaultMessage("GL Account ID")
    String accountingGlAccountId();
    @DefaultMessage("Gl account code and Gl account name")
    String accountingGlAccountNameAndGlAccountCode();
    @DefaultMessage("GL Account Trial Balance")
    String accountingGlAccountTrialBalance();
    @DefaultMessage("GL Account Trial Balance Report")
    String accountingGlAccountTrialBalanceReport();
    @DefaultMessage("GL Account Type Defaults")
    String accountingGlAccountTypeDefaults();
    @DefaultMessage("GL Accounts")
    String accountingGlAccounts();
    @DefaultMessage("GL Accounts")
    String accountingGlAccs();
    @DefaultMessage("Journals")
    String accountingGlJournals();
    @DefaultMessage("AccountingGlReconciliationFor")
    String accountingGlReconciliationFor(String finAccount_finAccountName, String finAccountId);
    @DefaultMessage("Global GL Settings")
    String accountingGlobalGLSettings();
    @DefaultMessage("Group in one Transaction")
    String accountingGroupInOneTransaction();
    @DefaultMessage("Group Members")
    String accountingGroupMembers();
    @DefaultMessage("Hide Fields")
    String accountingHideFields();
    @DefaultMessage("Ignore Invoice Items")
    String accountingIgnoreInvoiceItems();
    @DefaultMessage("AccountingIgnoringAdditionalShipCharges")
    String accountingIgnoringAdditionalShipCharges(String productStoreId);
    @DefaultMessage("Illegal values passed to create invoice service")
    String accountingIllegalValuesPassedToCreateInvoiceService();
    @DefaultMessage("Income")
    String accountingIncome();
    @DefaultMessage("Income Statement")
    String accountingIncomeStatement();
    @DefaultMessage("Information")
    String accountingInformation();
    @DefaultMessage("Inherited Value")
    String accountingInheritedValue();
    @DefaultMessage("Instance Of Product Id")
    String accountingInstanceOfProductId();
    @DefaultMessage("Inv.Nr")
    String accountingInvNr();
    @DefaultMessage("AccountingInvalidGlReconciliation")
    String accountingInvalidGlReconciliation(String glReconciliationId);
    @DefaultMessage("Invalid Gl Reconciliation Assignement: You can not assign FinAccountTrans in Approved or Cancel Status. FinAccount Transaction need to be in Created status only.")
    String accountingInvalidGlReconciliationAssignment();
    @DefaultMessage("Inventory Valuation")
    String accountingInventoryValuation();
    @DefaultMessage("Inventory Valuation List")
    String accountingInventoryValuationList();
    @DefaultMessage("Invoice")
    String accountingInvoice();
    @DefaultMessage("AccountingInvoiceCancelledCannotApplyTo")
    String accountingInvoiceCancelledCannotApplyTo(String invoiceId);
    @DefaultMessage("INVOICE")
    String accountingInvoiceCapitals();
    @DefaultMessage("AccountingInvoiceCommissionEntityDataProblem")
    String accountingInvoiceCommissionEntityDataProblem(String reason);
    @DefaultMessage("Error creating commission invoice")
    String accountingInvoiceCommissionError();
    @DefaultMessage("Error creating invoice item for commission invoice")
    String accountingInvoiceCommissionErrorItem();
    @DefaultMessage("Error creating invoice role for commission invoice")
    String accountingInvoiceCommissionErrorRole();
    @DefaultMessage("This type of invoice has no commission, not creating commission invoice")
    String accountingInvoiceCommissionInvalid();
    @DefaultMessage("Multiple orders or returns, not handled.")
    String accountingInvoiceCommissionMultHeader();
    @DefaultMessage("No order or return items, not creating commission invoice")
    String accountingInvoiceCommissionNoItems();
    @DefaultMessage("This invoice has an amount of zero, so no commission invoice will be created")
    String accountingInvoiceCommissionZeroInvoiceAmount();
    @DefaultMessage("AccountingInvoiceCompletelyApplied")
    String accountingInvoiceCompletelyApplied(String invoiceId);
    @DefaultMessage("Invoice Date")
    String accountingInvoiceDate();
    @DefaultMessage("Inv. Date")
    String accountingInvoiceDateAbbr();
    @DefaultMessage("Header")
    String accountingInvoiceHeader();
    @DefaultMessage("Header Detailed Information")
    String accountingInvoiceHeaderDetailedInformation();
    @DefaultMessage("InvoiceID")
    String accountingInvoiceID();
    @DefaultMessage("Invoice Item")
    String accountingInvoiceItem();
    @DefaultMessage("Add a new invoice Item")
    String accountingInvoiceItemAdd();
    @DefaultMessage("AccountingInvoiceItemLessRequested")
    String accountingInvoiceItemLessRequested(String invoiceId, String invoiceItemSeqId, String isoCode, String isoCode1);
    @DefaultMessage("AccountingInvoiceItemNotEnough")
    String accountingInvoiceItemNotEnough(String invoiceId, String invoiceItemSeqId);
    @DefaultMessage("AccountingInvoiceItemNotFound")
    String accountingInvoiceItemNotFound(String invoiceId, String invoiceItemSeqId);
    @DefaultMessage("AccountingInvoiceItemPaymentCurrencyProblem")
    String accountingInvoiceItemPaymentCurrencyProblem(String paymentCurrencyId, String itemCurrency);
    @DefaultMessage("Item Nr")
    String accountingInvoiceItemSeqId();
    @DefaultMessage("Invoice Item Type")
    String accountingInvoiceItemType();
    @DefaultMessage("Items")
    String accountingInvoiceItems();
    @DefaultMessage("AccountingInvoiceLessRequested")
    String accountingInvoiceLessRequested(String invoiceId, String isoCode, String isoCode1);
    @DefaultMessage("AccountingInvoiceNotEnough")
    String accountingInvoiceNotEnough(String invoiceId);
    @DefaultMessage("AccountingInvoiceNotFound")
    String accountingInvoiceNotFound(String invoiceId);
    @DefaultMessage("Invoice Override Expense Gl Account Id")
    String accountingInvoiceOverrideExpenseGlAccountId();
    @DefaultMessage("Overview")
    String accountingInvoiceOverview();
    @DefaultMessage("PDF")
    String accountingInvoicePDF();
    @DefaultMessage("PDF default Currency")
    String accountingInvoicePDFDefaultCur();
    @DefaultMessage("Paid")
    String accountingInvoicePaid();
    @DefaultMessage("AccountingInvoicePaymentCurrencyProblem")
    String accountingInvoicePaymentCurrencyProblem(String paymentCurrencyId, String invoiceCurrency);
    @DefaultMessage("Payments")
    String accountingInvoicePayments();
    @DefaultMessage("Purchase Invoice")
    String accountingInvoicePurchase();
    @DefaultMessage("Invoice Purchase Item Type")
    String accountingInvoicePurchaseItemType();
    @DefaultMessage("Roles")
    String accountingInvoiceRoles();
    @DefaultMessage("Sales Invoice")
    String accountingInvoiceSales();
    @DefaultMessage("Status History")
    String accountingInvoiceStatusHistory();
    @DefaultMessage("Status to ''Approved''")
    String accountingInvoiceStatusToApproved();
    @DefaultMessage("Status to ''Cancelled''")
    String accountingInvoiceStatusToCancelled();
    @DefaultMessage("Status to ''In Process''")
    String accountingInvoiceStatusToInProcess();
    @DefaultMessage("Status to ''Paid''")
    String accountingInvoiceStatusToPaid();
    @DefaultMessage("Status to ''Ready''")
    String accountingInvoiceStatusToReady();
    @DefaultMessage("Status to ''Received''")
    String accountingInvoiceStatusToReceived();
    @DefaultMessage("Status to ''Sent''")
    String accountingInvoiceStatusToSent();
    @DefaultMessage("Status to ''Writeoff''")
    String accountingInvoiceStatusToWriteoff();
    @DefaultMessage("Time Entries")
    String accountingInvoiceTimeEntries();
    @DefaultMessage("Invoice Total")
    String accountingInvoiceTotal();
    @DefaultMessage("AccountingInvoiceTotalZero")
    String accountingInvoiceTotalZero(String invoiceId);
    @DefaultMessage("Invoices")
    String accountingInvoices();
    @DefaultMessage("Payments applied to Invoices")
    String accountingInvoicesApplPayments();
    @DefaultMessage("Invoices Due Soon")
    String accountingInvoicesDueSoon();
    @DefaultMessage("Invoices Found")
    String accountingInvoicesFound();
    @DefaultMessage("Invoices")
    String accountingInvoicesMenu();
    @DefaultMessage("All Invoices should be in READY status for Check Run process.")
    String accountingInvoicesRequiredInReadyStatus();
    @DefaultMessage("Issue Check")
    String accountingIssueCheck();
    @DefaultMessage("ItemNr")
    String accountingItemNr();
    @DefaultMessage("Last Name Card")
    String accountingLastNameCard();
    @DefaultMessage("Last Name on Card is missing")
    String accountingLastNameOnCardMissing();
    @DefaultMessage("Leave empty for maximum amount")
    String accountingLeaveEmptyForMaximumAmount();
    @DefaultMessage("Liabilities")
    String accountingLiabilities();
    @DefaultMessage("Licensed Product")
    String accountingLicensedProduct();
    @DefaultMessage("Line Total")
    String accountingLineTotal();
    @DefaultMessage("List Agreement Work Effort Applics")
    String accountingListAgreementWorkEffortApplics();
    @DefaultMessage("Invoice Item Type List")
    String accountingListInvoiceItemType();
    @DefaultMessage("List Invoices")
    String accountingListInvoices();
    @DefaultMessage("Possible invoices to apply")
    String accountingListInvoicesNotYetApplied();
    @DefaultMessage("Payment Method Type List")
    String accountingListPaymentMethodType();
    @DefaultMessage("Possible payments to apply")
    String accountingListPaymentsNotYetApplied();
    @DefaultMessage("Lookup Agreement")
    String accountingLookupAgreement();
    @DefaultMessage("Lookup Agreement Item")
    String accountingLookupAgreementItem();
    @DefaultMessage("Lookup Gl Reconciliations")
    String accountingLookupGlReconciliations();
    @DefaultMessage("Lookup Invoices")
    String accountingLookupInvoices();
    @DefaultMessage("Lookup Payment")
    String accountingLookupPayment();
    @DefaultMessage("Main")
    String accountingMainMenu();
    @DefaultMessage("Accounting Manager Main Page")
    String accountingMainPage();
    @DefaultMessage("Welcome to the Accounting Manager!")
    String accountingMainPageNote();
    @DefaultMessage("Accounting Manager")
    String accountingManager();
    @DefaultMessage("Accounting Manager Application")
    String accountingManagerApplication();
    @DefaultMessage("Manual Journal Entry")
    String accountingManualJournalEntry();
    @DefaultMessage("Manual Transactions Posting")
    String accountingManualPostTrans();
    @DefaultMessage("Manual Electronic Transaction")
    String accountingManualTransaction();
    @DefaultMessage("Method")
    String accountingMethod();
    @DefaultMessage("Middle Name Card")
    String accountingMiddleNameCard();
    @DefaultMessage("Monthly Trial Balance")
    String accountingMonthlyTrialBalance();
    @DefaultMessage("Name Account")
    String accountingNameAccount();
    @DefaultMessage("Name on Account")
    String accountingNameOnAccount();
    @DefaultMessage("Name on Account is missing")
    String accountingNameOnAccountMissing();
    @DefaultMessage("Name on Card")
    String accountingNameOnCard();
    @DefaultMessage("Account #")
    String accountingNb();
    @DefaultMessage("Net Income")
    String accountingNetIncome();
    @DefaultMessage("Net Sale")
    String accountingNetSale();
    @DefaultMessage("New Account")
    String accountingNewAccount();
    @DefaultMessage("Create Agreement")
    String accountingNewAgreement();
    @DefaultMessage("Create Agreement Item")
    String accountingNewAgreementItem();
    @DefaultMessage("Create Term")
    String accountingNewAgreementItemTerm();
    @DefaultMessage("Add New Promotion")
    String accountingNewAgreementPromoAppl();
    @DefaultMessage("Create New Agreement Role")
    String accountingNewAgreementRole();
    @DefaultMessage("Create Agreement Term")
    String accountingNewAgreementTerm();
    @DefaultMessage("New Billing Account")
    String accountingNewBillingAccount();
    @DefaultMessage("New Fixed Asset")
    String accountingNewFixedAsset();
    @DefaultMessage("Create Fixed Asset Identification")
    String accountingNewFixedAssetIdents();
    @DefaultMessage("Create Fixed Asset Identification Type")
    String accountingNewFixedAssetIdentsType();
    @DefaultMessage("New Maintenance")
    String accountingNewFixedAssetMaint();
    @DefaultMessage("New Standard Cost")
    String accountingNewFixedAssetStdCost();
    @DefaultMessage("New Payment")
    String accountingNewPayment();
    @DefaultMessage("New Payment Group")
    String accountingNewPaymentGroup();
    @DefaultMessage("New incoming payment")
    String accountingNewPaymentIncoming();
    @DefaultMessage("New outgoing payment")
    String accountingNewPaymentOutgoing();
    @DefaultMessage("New Tax Authority")
    String accountingNewTaxAuthority();
    @DefaultMessage("New Tax Authority Party Info")
    String accountingNewTaxAuthorityPartyInfo();
    @DefaultMessage("No Account")
    String accountingNoAccount();
    @DefaultMessage("No Accounting Transactions Found.")
    String accountingNoAcctgTransFound();
    @DefaultMessage("Amount requested to apply is zero or not provided: no amount applied/n")
    String accountingNoAmount();
    @DefaultMessage("No Billing Account")
    String accountingNoBillingAccount();
    @DefaultMessage("No billing accounts found.")
    String accountingNoBillingAccountFound();
    @DefaultMessage("No billing account roles exist.")
    String accountingNoBillingAccountRole();
    @DefaultMessage("No billing account terms exist.")
    String accountingNoBillingAccountTerm();
    @DefaultMessage("No changes made, not updating credit card")
    String accountingNoChangesMadeNotUpdatingCreditCard();
    @DefaultMessage("No changes made, not updating EFT Account")
    String accountingNoChangesMadeNotUpdatingEftAccount();
    @DefaultMessage("No child periods found")
    String accountingNoChildPeriodsFound();
    @DefaultMessage("No Current Custom Time Period Selected; \"Children\" below have no Parent Period.")
    String accountingNoCurrentCustomTimePeriodSelected();
    @DefaultMessage("No general/billing address found for party:")
    String accountingNoGenBilAddressFound();
    @DefaultMessage("No Gl Reconciliation Exists, To Create New Gl Reconciliation")
    String accountingNoGlReconciliationExists();
    @DefaultMessage("No Invoices Found")
    String accountingNoInvoicesFound();
    @DefaultMessage("Either no selected invoices in ready state or selected invoices outstanding amount equals to zero.")
    String accountingNoInvoicesReadyOrOutstandingAmountZero();
    @DefaultMessage("AccountingNoKnownInvoiceItemTypeReturnAdjustmentType")
    String accountingNoKnownInvoiceItemTypeReturnAdjustmentType(String returnAdjustmentTypeId);
    @DefaultMessage("AccountingNoKnownInvoiceItemTypeReturnItemType")
    String accountingNoKnownInvoiceItemTypeReturnItemType(String returnItemTypeId);
    @DefaultMessage("No OrderHeader, cannot create invoice")
    String accountingNoOrderHeader();
    @DefaultMessage("No order items to invoice, not creating invoice.")
    String accountingNoOrderItemsToInvoice();
    @DefaultMessage("No payment method information on file")
    String accountingNoPaymentMethodInformation();
    @DefaultMessage("No Payment Methods")
    String accountingNoPaymentMethods();
    @DefaultMessage("No applications found..")
    String accountingNoPaymentsApplicationsfound();
    @DefaultMessage("No Payments found")
    String accountingNoPaymentsfound();
    @DefaultMessage("No contact information set")
    String accountingNocontactinformationset();
    @DefaultMessage("No current invoice line items")
    String accountingNocurrentinvoicelineitems();
    @DefaultMessage("Not a adjustment financial account transaction.")
    String accountingNotAdjustmentFinAccountTrans();
    @DefaultMessage("Not a deposit financial account transaction.")
    String accountingNotDepositFinAccountTrans();
    @DefaultMessage("This cannot be changed without re-creating the GL Account.")
    String accountingNotModificationRecrationGlAccount();
    @DefaultMessage("Not a withdrawal financial account transaction.")
    String accountingNotWithdrawalFinAccountTrans();
    @DefaultMessage("Number")
    String accountingNumber();
    @DefaultMessage("Number of Orders")
    String accountingNumberOfOrders();
    @DefaultMessage("Number of Transaction")
    String accountingNumberOfTransaction();
    @DefaultMessage("Offline Payment")
    String accountingOfflinePayment();
    @DefaultMessage("Open")
    String accountingOpenPayments();
    @DefaultMessage("Open Time Periods")
    String accountingOpenTimePeriods();
    @DefaultMessage("Opening Balance")
    String accountingOpeningBalance();
    @DefaultMessage("Opening Cash Balance")
    String accountingOpeningCashBalance();
    @DefaultMessage("Operational Cash")
    String accountingOperationalCash();
    @DefaultMessage("AccountingOrderItemWithIdNotFound")
    String accountingOrderItemWithIdNotFound(String orderItemSeqId);
    @DefaultMessage("Order #")
    String accountingOrderNr();
    @DefaultMessage("Accounting Order Payment Preference Id")
    String accountingOrderPaymentPreferenceId();
    @DefaultMessage("AccountingOrderWithIdNotFound")
    String accountingOrderWithIdNotFound(String orderId);
    @DefaultMessage("Orders")
    String accountingOrders();
    @DefaultMessage("Organization GL Settings")
    String accountingOrgGlSettings();
    @DefaultMessage("Org Party Id")
    String accountingOrgPartyId();
    @DefaultMessage("Organization Party Id")
    String accountingOrganizationPartyId();
    @DefaultMessage("Original Currency")
    String accountingOriginalCurrency();
    @DefaultMessage("Override Revenue Gl Account Id")
    String accountingOverrideRevenueGlAccountId();
    @DefaultMessage("PIN")
    String accountingPIN();
    @DefaultMessage("PIN Number")
    String accountingPINNumber();
    @DefaultMessage("The new status is not a valid change")
    String accountingPSInvalidStatusChange();
    @DefaultMessage("Status cannot be set to ''Confirmed'', the payment is not fully applied!")
    String accountingPSNotConfirmedNotFullyApplied();
    @DefaultMessage("Status does not allow an update of the information")
    String accountingPSUpdateNotAllowedBecauseOfStatus();
    @DefaultMessage("Agreement Price List")
    String accountingPageTitleAgreementPriceList();
    @DefaultMessage("Paid Date")
    String accountingPaidDate();
    @DefaultMessage("Accounts Summary")
    String accountingPartyAccountsSummary();
    @DefaultMessage("Party Billed From")
    String accountingPartyBilledFrom();
    @DefaultMessage("Party Billed To")
    String accountingPartyBilledTo();
    @DefaultMessage("Assignments")
    String accountingPartyFixedAssetAssignments();
    @DefaultMessage("Party Gl Accounts")
    String accountingPartyGlAccounts();
    @DefaultMessage("Party Id From")
    String accountingPartyIdFrom();
    @DefaultMessage("Party Id To")
    String accountingPartyIdTo();
    @DefaultMessage("Party must be an Internal Organization (set in PartyRole)")
    String accountingPartyMustBeInternalOrganization();
    @DefaultMessage("Add a new Party Role")
    String accountingPartyRoleAdd();
    @DefaultMessage("Party Role List")
    String accountingPartyRoleList();
    @DefaultMessage("Past Due Invoices")
    String accountingPastDueInvoices();
    @DefaultMessage("Pay only with Billing Account")
    String accountingPayOnlyWithBillingAccount();
    @DefaultMessage("Pay With PayPal")
    String accountingPayWithPayPal();
    @DefaultMessage("Pay With WorldPay")
    String accountingPayWithWorldPay();
    @DefaultMessage("Logging Off")
    String accountingPayflowProLoggingOff();
    @DefaultMessage("Logging Severity Debug")
    String accountingPayflowProLoggingSeverityDebug();
    @DefaultMessage("Logging Severity Error")
    String accountingPayflowProLoggingSeverityError();
    @DefaultMessage("Logging Severity Fatal")
    String accountingPayflowProLoggingSeverityFatal();
    @DefaultMessage("Logging Severity Info")
    String accountingPayflowProLoggingSeverityInfo();
    @DefaultMessage("Logging Severity Warn")
    String accountingPayflowProLoggingSeverityWarn();
    @DefaultMessage("Payment")
    String accountingPayment();
    @DefaultMessage("AccountingPaymentAlreadyApplied")
    String accountingPaymentAlreadyApplied(String paymentId);
    @DefaultMessage("AccountingPaymentAlreadyAssociatedToFinAccountError")
    String accountingPaymentAlreadyAssociatedToFinAccountError(String paymentId);
    @DefaultMessage("Payment Already Received")
    String accountingPaymentAlreadyReceived();
    @DefaultMessage("Payment Amount")
    String accountingPaymentAmount();
    @DefaultMessage("AccountingPaymentApplRemoved")
    String accountingPaymentApplRemoved(String paymentApplication_paymentId, String currencyUomId);
    @DefaultMessage("AccountingPaymentApplToBillingAccount")
    String accountingPaymentApplToBillingAccount(String paymentApplication_billingAccountId);
    @DefaultMessage("AccountingPaymentApplToInvoice")
    String accountingPaymentApplToInvoice(String paymentApplication_invoiceId);
    @DefaultMessage("AccountingPaymentApplToPayment")
    String accountingPaymentApplToPayment(String paymentApplication_toPaymentId);
    @DefaultMessage("AccountingPaymentApplToTaxAuth")
    String accountingPaymentApplToTaxAuth(String paymentApplication_taxAuthGeoId);
    @DefaultMessage("AccountingPaymentApplicationNotFound")
    String accountingPaymentApplicationNotFound(String paymentApplicationId);
    @DefaultMessage("Payment application requires either an invoiceId, a billingAccountId, a taxAuthGeoId or a glAccountId")
    String accountingPaymentApplicationParameterMissing();
    @DefaultMessage("AccountingPaymentCancelled")
    String accountingPaymentCancelled(String paymentId);
    @DefaultMessage("Sorry, no payments were selected.")
    String accountingPaymentCheckMessage1();
    @DefaultMessage("AccountingPaymentConfirmed")
    String accountingPaymentConfirmed(String paymentId);
    @DefaultMessage("Payment Date")
    String accountingPaymentDate();
    @DefaultMessage("Approve")
    String accountingPaymentGatewayApprove();
    @DefaultMessage("Payment Gateway Config")
    String accountingPaymentGatewayConfig();
    @DefaultMessage("Payment Gateway Config Description")
    String accountingPaymentGatewayConfigDescription();
    @DefaultMessage("Payment Gateway Config Id")
    String accountingPaymentGatewayConfigId();
    @DefaultMessage("Payment Gateway Config Type Description")
    String accountingPaymentGatewayConfigTypeDescription();
    @DefaultMessage("Payment Gateway Config Type Id")
    String accountingPaymentGatewayConfigTypeId();
    @DefaultMessage("Payment Gateway Config Types")
    String accountingPaymentGatewayConfigTypes();
    @DefaultMessage("Decline")
    String accountingPaymentGatewayDecline();
    @DefaultMessage("Production")
    String accountingPaymentGatewayProduction();
    @DefaultMessage("Random")
    String accountingPaymentGatewayRandom();
    @DefaultMessage("Accounting Payment Gateway Response Id")
    String accountingPaymentGatewayResponseId();
    @DefaultMessage("Payment Group")
    String accountingPaymentGroup();
    @DefaultMessage("Payment Group Id")
    String accountingPaymentGroupId();
    @DefaultMessage("Payment Group Members")
    String accountingPaymentGroupMembers();
    @DefaultMessage("Payment Group Name")
    String accountingPaymentGroupName();
    @DefaultMessage("Payment Group Overview")
    String accountingPaymentGroupOverview();
    @DefaultMessage("Payment Group Overview For")
    String accountingPaymentGroupOverviewFor();
    @DefaultMessage("Payment Header")
    String accountingPaymentHeader();
    @DefaultMessage("PaymentID")
    String accountingPaymentID();
    @DefaultMessage("PaymentId blank or not supplied.... .....")
    String accountingPaymentIdBlankNotSupplied();
    @DefaultMessage("PaymentID to apply")
    String accountingPaymentIdTo();
    @DefaultMessage("Payment Information")
    String accountingPaymentInformation();
    @DefaultMessage("AccountingPaymentLessRequested")
    String accountingPaymentLessRequested(String paymentId, String isoCode, String isoCode1);
    @DefaultMessage("Payment Method")
    String accountingPaymentMethod();
    @DefaultMessage("Payment Method Assign Account Type")
    String accountingPaymentMethodAssignAccountType();
    @DefaultMessage("Payment Method Id")
    String accountingPaymentMethodId();
    @DefaultMessage("Payment Method ID is missing")
    String accountingPaymentMethodIdMissing();
    @DefaultMessage("No values are passed for paymentMethodId or paymentMethodTypeId. At least pass paymentMethodId.")
    String accountingPaymentMethodIdPaymentMethodTypeIdNullError();
    @DefaultMessage("AccountingPaymentMethodId........")
    String accountingPaymentMethodId________();
    @DefaultMessage("Payment Method Information")
    String accountingPaymentMethodInformation();
    @DefaultMessage("Payment method not handled paymentMethodTypeId :")
    String accountingPaymentMethodTypeNotHandled();
    @DefaultMessage("AccountingPaymentNotEnough")
    String accountingPaymentNotEnough(String paymentId, String isoCode, String isoCode1);
    @DefaultMessage("Original Amt.")
    String accountingPaymentOriginalAmount();
    @DefaultMessage("Payment Preference Id")
    String accountingPaymentPreferenceId();
    @DefaultMessage("Payment Properties")
    String accountingPaymentProperties();
    @DefaultMessage("Payment receive via PayPal")
    String accountingPaymentReceiveViaPayPal();
    @DefaultMessage("Payment receive via WorldPay")
    String accountingPaymentReceiveViaWorldPay();
    @DefaultMessage("AccountingPaymentRecordNotFound")
    String accountingPaymentRecordNotFound(String paymentId);
    @DefaultMessage("sent from")
    String accountingPaymentSentForm();
    @DefaultMessage("Payment Status")
    String accountingPaymentStatus();
    @DefaultMessage("Payment status must be received or sent")
    String accountingPaymentStatusIsNotReceivedOrSentError();
    @DefaultMessage("Status to \"Not Paid\"")
    String accountingPaymentStatusToNotPaid();
    @DefaultMessage("Applications")
    String accountingPaymentTabApplications();
    @DefaultMessage("Header")
    String accountingPaymentTabHeader();
    @DefaultMessage("Overview")
    String accountingPaymentTabOverview();
    @DefaultMessage("Status to ''Cancelled''")
    String accountingPaymentTabStatusToCancelled();
    @DefaultMessage("Status to ''Confirmed''")
    String accountingPaymentTabStatusToConfirmed();
    @DefaultMessage("Status to ''Received''")
    String accountingPaymentTabStatusToReceived();
    @DefaultMessage("Status to ''Sent''")
    String accountingPaymentTabStatusToSent();
    @DefaultMessage("Status to ''Void''")
    String accountingPaymentTabStatusToVoid();
    @DefaultMessage("Payment Type")
    String accountingPaymentType();
    @DefaultMessage("Payment Type Assign Account Type")
    String accountingPaymentTypeAssignAccountType();
    @DefaultMessage("Payment Via")
    String accountingPaymentVia();
    @DefaultMessage("Payments Applied")
    String accountingPaymentsApplied();
    @DefaultMessage("AccountingPaymentsAreAlreadyBatchedError")
    String accountingPaymentsAreAlreadyBatchedError(String batchPaymentIds);
    @DefaultMessage("Associated Payments with FinAccountTrans has invalid status")
    String accountingPaymentsAssociateWithFinAccountHasInvalidStatusError();
    @DefaultMessage("Payment(s) Found")
    String accountingPaymentsFound();
    @DefaultMessage("Payments")
    String accountingPaymentsMenu();
    @DefaultMessage("Payments Received")
    String accountingPaymentsReceived();
    @DefaultMessage("Payments send")
    String accountingPaymentsSend();
    @DefaultMessage("Payments Sent")
    String accountingPaymentsSent();
    @DefaultMessage("Period 1 Credit(Disbursement)")
    String accountingPeriod1Credit_Disbursement();
    @DefaultMessage("Period 1 Debit(Receipts)")
    String accountingPeriod1Debit_Receipts();
    @DefaultMessage("Period1 Net Income")
    String accountingPeriod1NetIncome();
    @DefaultMessage("Period1 Total Amount")
    String accountingPeriod1TotalAmount();
    @DefaultMessage("Period 2 Credit(Disbursement)")
    String accountingPeriod2Credit_Disbursement();
    @DefaultMessage("Period 2 Debit(Receipts)")
    String accountingPeriod2Debit_Receipts();
    @DefaultMessage("Period2 Net Income")
    String accountingPeriod2NetIncome();
    @DefaultMessage("Period2 Total Amount")
    String accountingPeriod2TotalAmount();
    @DefaultMessage("Period Cash Balance")
    String accountingPeriodCashBalance();
    @DefaultMessage("Period Name")
    String accountingPeriodName();
    @DefaultMessage("Period Number")
    String accountingPeriodNumber();
    @DefaultMessage("Period Type")
    String accountingPeriodType();
    @DefaultMessage("You do not have permission for this function.")
    String accountingPermissionError();
    @DefaultMessage("You do not have permission to use this page (PERIOD_MAINT needed)")
    String accountingPermissionPeriod();
    @DefaultMessage("Physical Card")
    String accountingPhysicalCard();
    @DefaultMessage("Pin Number")
    String accountingPinNumber();
    @DefaultMessage("Please Send Payment To")
    String accountingPleaseSendPaymentTo();
    @DefaultMessage("Post Transaction")
    String accountingPostTransaction();
    @DefaultMessage("Posted And Unposted Totals")
    String accountingPostedAndUnpostedTransactionTotals();
    @DefaultMessage("Posted Totals")
    String accountingPostedTransactionTotals();
    @DefaultMessage("Accounting Preferences")
    String accountingPreference();
    @DefaultMessage("Prefix Card")
    String accountingPrefixCard();
    @DefaultMessage("Previous Bank Reconciliation")
    String accountingPreviousBankReconciliation();
    @DefaultMessage("Print As Check")
    String accountingPrintAsCheck();
    @DefaultMessage("Checks to Print")
    String accountingPrintChecks();
    @DefaultMessage("Security Error: to print checks, you must have the ACCOUNTING_PRINT_CHECKS permission")
    String accountingPrintChecksPermissionError();
    @DefaultMessage("Print Deposit Slip")
    String accountingPrintDepositSlip();
    @DefaultMessage("Print Invoices")
    String accountingPrintInvoices();
    @DefaultMessage("AccountingProblemChangingInvoiceStatusTo")
    String accountingProblemChangingInvoiceStatusTo(String newStatus);
    @DefaultMessage("Problem getting issued items from shipments")
    String accountingProblemGettingItemsFromShipments();
    @DefaultMessage("AccountingProblemGettingOrderItemOrderItemBilling")
    String accountingProblemGettingOrderItemOrderItemBilling(String lookup);
    @DefaultMessage("Problem getting OrderPaymentPreference records")
    String accountingProblemGettingOrderPaymentPreferences();
    @DefaultMessage("AccountingProblemGettingPaymentApplication")
    String accountingProblemGettingPaymentApplication(String invoiceId);
    @DefaultMessage("Problem getting ShipmentItemBilling records")
    String accountingProblemGettingShipmentItemBilling();
    @DefaultMessage("AccountingProblemLookingUpOrderItemBilling")
    String accountingProblemLookingUpOrderItemBilling(String billFields);
    @DefaultMessage("AccountingProblemStoringOrderAdjustments")
    String accountingProblemStoringOrderAdjustments(String orderAdjustments);
    @DefaultMessage("Product")
    String accountingProduct();
    @DefaultMessage("Product Category Gl Account")
    String accountingProductCategoryGlAccount();
    @DefaultMessage("Product GL Accounts")
    String accountingProductGlAccount();
    @DefaultMessage("Product Id")
    String accountingProductId();
    @DefaultMessage("Product Rates")
    String accountingProductRates();
    @DefaultMessage("Purchase Invoice type to Revenue GL Account Number assignment list")
    String accountingPurchaseInvoiceToRevenue();
    @DefaultMessage("Purchase Invoices")
    String accountingPurchaseInvoices();
    @DefaultMessage("Quantity")
    String accountingQuantity();
    @DefaultMessage("Quick Search")
    String accountingQuickSearch();
    @DefaultMessage("Rate Amounts")
    String accountingRateAmounts();
    @DefaultMessage("Rates")
    String accountingRates();
    @DefaultMessage("Receive Payment")
    String accountingReceivePayment();
    @DefaultMessage("Reconcile")
    String accountingReconcile();
    @DefaultMessage("AccountingReconcileFinAccountTransFor")
    String accountingReconcileFinAccountTransFor(String finAccount_finAccountName, String finAccountId);
    @DefaultMessage("Reconciliation")
    String accountingReconciliation();
    @DefaultMessage("Reconciliation Date")
    String accountingReconciliationDate();
    @DefaultMessage("AccountingReconciliationError")
    String accountingReconciliationError(String finAccountTrans_finAccountTransId);
    @DefaultMessage("Reference Number")
    String accountingReferenceNumber();
    @DefaultMessage("Remove From GlReconciliation")
    String accountingRemoveFromGlReconciliation();
    @DefaultMessage("Reports")
    String accountingReports();
    @DefaultMessage("Revert Accounting Transaction")
    String accountingRevertAccountingTransaction();
    @DefaultMessage("Role Type")
    String accountingRoleType();
    @DefaultMessage("Role Type Id From")
    String accountingRoleTypeIdFrom();
    @DefaultMessage("Role Type Id To")
    String accountingRoleTypeIdTo();
    @DefaultMessage("Routing Number")
    String accountingRoutingNumber();
    @DefaultMessage("Routing Number is missing")
    String accountingRoutingNumberMissing();
    @DefaultMessage("Running Total")
    String accountingRunningTotal();
    @DefaultMessage("Running Total (Outstanding)")
    String accountingRunningTotalOutstanding();
    @DefaultMessage("Authentication Type")
    String accountingSagePayAuthenticationTransType();
    @DefaultMessage("Authentication Url")
    String accountingSagePayAuthenticationUrl();
    @DefaultMessage("Authorisation Type")
    String accountingSagePayAuthorisationTransType();
    @DefaultMessage("Authorisation Url")
    String accountingSagePayAuthorisationUrl();
    @DefaultMessage("Mode")
    String accountingSagePayMode();
    @DefaultMessage("Production")
    String accountingSagePayProduction();
    @DefaultMessage("Production Host")
    String accountingSagePayProductionHost();
    @DefaultMessage("Protocol Version")
    String accountingSagePayProtocolVersion();
    @DefaultMessage("Refund Url")
    String accountingSagePayRefundUrl();
    @DefaultMessage("Release Type")
    String accountingSagePayReleaseTransType();
    @DefaultMessage("Release Url")
    String accountingSagePayReleaseUrl();
    @DefaultMessage("Test")
    String accountingSagePayTest();
    @DefaultMessage("Testing Host")
    String accountingSagePayTestingHost();
    @DefaultMessage("Vendor Name")
    String accountingSagePayVendor();
    @DefaultMessage("Void Url")
    String accountingSagePayVoidUrl();
    @DefaultMessage("Sales Agents")
    String accountingSalesAgents();
    @DefaultMessage("Sales Invoice type to Revenue GL Account Number assignment list")
    String accountingSalesInvoiceToRevenue();
    @DefaultMessage("Sales Invoices")
    String accountingSalesInvoices();
    @DefaultMessage("Card Security Code")
    String accountingSecurityCodeCard();
    @DefaultMessage("Select Action")
    String accountingSelectAction();
    @DefaultMessage("Select The Parties For Commission Invoice")
    String accountingSelectPartiesForCommissionInvoice();
    @DefaultMessage("Mark Checks Sent")
    String accountingSendChecks();
    @DefaultMessage("Service Credit")
    String accountingServiceCredit();
    @DefaultMessage("Service Credits")
    String accountingServiceCredits();
    @DefaultMessage("Service/other problem creating InvoiceItem from order header adjustment")
    String accountingServiceErrorCreatingInvoiceItemFromOrder();
    @DefaultMessage("Service/other problem creating InvoiceTerm from order")
    String accountingServiceErrorCreatingInvoiceTermFromOrder();
    @DefaultMessage("AccountingServiceOtherProblemCreatingInvoiceFromOrderItems")
    String accountingServiceOtherProblemCreatingInvoiceFromOrderItems(String reason);
    @DefaultMessage("Setup")
    String accountingSetup();
    @DefaultMessage("Shipment not found.")
    String accountingShipmentNotFound();
    @DefaultMessage("Shipment is not of type SALES_RETURN.")
    String accountingShipmentNotSalesReturn();
    @DefaultMessage("Shipment is not of type SALES_RETURN or PURCHASE_RETURN.")
    String accountingShipmentNotSalesReturnAndPurchaseReturn();
    @DefaultMessage("AccountingShipmentsOfDifferentTypes")
    String accountingShipmentsOfDifferentTypes(String tmpShipmentId, String shipmentTypeId);
    @DefaultMessage("Show All Fixed Assets")
    String accountingShowAllFixedAssets();
    @DefaultMessage("Show All Invoices")
    String accountingShowAllInvoices();
    @DefaultMessage("Show All Payments")
    String accountingShowAllPayments();
    @DefaultMessage("Show Invoices")
    String accountingShowInvoices();
    @DefaultMessage("Show Lookup Fields")
    String accountingShowLookupFields();
    @DefaultMessage("Show Only Periods with Organization Party ID")
    String accountingShowOnlyPeriodsWithOrganization();
    @DefaultMessage("Show Payments")
    String accountingShowPayments();
    @DefaultMessage("Single Use Credit Card")
    String accountingSingleUseCreditCard();
    @DefaultMessage("Single Use EFT Account")
    String accountingSingleUseEFTAccount();
    @DefaultMessage("Single Use Gift Card")
    String accountingSingleUseGiftCard();
    @DefaultMessage("Specify either Invoice or toPayment or billing account or taxGeoId....")
    String accountingSpecifyInvoiceToPaymentBillingAccountTaxGeoId();
    @DefaultMessage("Split Payment")
    String accountingSplitPayment();
    @DefaultMessage("Accounting Status")
    String accountingStatus();
    @DefaultMessage("Subsidiary Ledger")
    String accountingSubsidiaryLedger();
    @DefaultMessage("successfull")
    String accountingSuccessFull();
    @DefaultMessage("Suffix on Card")
    String accountingSuffixCard();
    @DefaultMessage("Tax Authorities")
    String accountingTaxAuthorities();
    @DefaultMessage("Tax Authority")
    String accountingTaxAuthority();
    @DefaultMessage("Tax Authority Geo")
    String accountingTaxAuthorityGeo();
    @DefaultMessage("TaxAuthority GL Accounts")
    String accountingTaxAuthorityGlAccounts();
    @DefaultMessage("Tax Authority Party")
    String accountingTaxAuthorityParty();
    @DefaultMessage("Use the Categories tab to add other category options")
    String accountingTaxAuthorityRateProductUseCategoryTab();
    @DefaultMessage("At least one Product Rate uses this Category")
    String accountingTaxAuthorityRateProductUseThisProductCategory();
    @DefaultMessage("Tax Summary Report")
    String accountingTaxSummary();
    @DefaultMessage("Term Amount")
    String accountingTermAmount();
    @DefaultMessage("Term Type Id")
    String accountingTermTypeId();
    @DefaultMessage("Text Data")
    String accountingTextData();
    @DefaultMessage("The balance of last year")
    String accountingTheBalanceOfLastYear();
    @DefaultMessage("Thru Date")
    String accountingThruDate();
    @DefaultMessage("Time Period")
    String accountingTimePeriod();
    @DefaultMessage("Title Transfer")
    String accountingTitleTransfer();
    @DefaultMessage("To Party")
    String accountingToParty();
    @DefaultMessage("To Party Id")
    String accountingToPartyId();
    @DefaultMessage("Total amountPercentage is not equal 100.")
    String accountingTotalAmountPercentageIsNotEqualOneHundred();
    @DefaultMessage("TOTAL")
    String accountingTotalCapital();
    @DefaultMessage("Total Cash Balance")
    String accountingTotalCashBalance();
    @DefaultMessage("Total Closing Cash Balance")
    String accountingTotalClosingCashBalance();
    @DefaultMessage("Total Commission Amount")
    String accountingTotalCommissionAmount();
    @DefaultMessage("Cost center amount percentage saved successfully")
    String accountingTotalCostCenterAmount();
    @DefaultMessage("Total Credit(Disbursement)")
    String accountingTotalCredit_Disbursement();
    @DefaultMessage("Total Current Asset Balance")
    String accountingTotalCurrentAssetBalance();
    @DefaultMessage("Total Debit(Receipts)")
    String accountingTotalDebit_Receipts();
    @DefaultMessage("Total Ending Cash Balance")
    String accountingTotalEndingCashBalance();
    @DefaultMessage("Total excl. tax")
    String accountingTotalExclTax();
    @DefaultMessage("Total Net Sales")
    String accountingTotalNetSales();
    @DefaultMessage("Total Number of Orders")
    String accountingTotalNumberOfOrders();
    @DefaultMessage("Total of the current month")
    String accountingTotalOfTheCurrentMonth();
    @DefaultMessage("Total of Year To Date")
    String accountingTotalOfYearToDate();
    @DefaultMessage("Total Opening Cash Balance")
    String accountingTotalOpeningCashBalance();
    @DefaultMessage("Total Operational Cash Balance")
    String accountingTotalOperationalCashBalance();
    @DefaultMessage("Total Period Cash Balance")
    String accountingTotalPeriodCashBalance();
    @DefaultMessage("Total Quantity On Hand")
    String accountingTotalQuantityOnHand();
    @DefaultMessage("Transaction has been already posted")
    String accountingTransactionHasBeenAlreadyPosted();
    @DefaultMessage("Transaction Is already Reconciled")
    String accountingTransactionIsAlreadyReconciled();
    @DefaultMessage("Transaction Totals")
    String accountingTransactionTotals();
    @DefaultMessage("Transaction Totals Report")
    String accountingTransactionTotalsReport();
    @DefaultMessage("Transaction Type")
    String accountingTransactionType();
    @DefaultMessage("This transaction type is not yet supported")
    String accountingTransactionTypeNotYetSupported();
    @DefaultMessage("Transactions")
    String accountingTransactions();
    @DefaultMessage("Trial Balance")
    String accountingTrialBalance();
    @DefaultMessage("Trouble calling authOrderPaymentPreference service")
    String accountingTroubleCallingAuthOrderPaymentPreferenceService();
    @DefaultMessage("Trouble calling calcTaxService")
    String accountingTroubleCallingCalcTaxService();
    @DefaultMessage("Accounting trouble calling calculateInvoicedAdjustmentTotal service")
    String accountingTroubleCallingCalculateInvoicedAdjustmentTotalService();
    @DefaultMessage("Trouble calling createInvoiceForOrder service; invoice not created for shipment")
    String accountingTroubleCallingCreateInvoiceForOrderService();
    @DefaultMessage("AccountingTroubleCallingCreateInvoicesFromShipmentService")
    String accountingTroubleCallingCreateInvoicesFromShipmentService(String shipmentId);
    @DefaultMessage("Trouble calling createInvoicesFromShipments service")
    String accountingTroubleCallingCreateInvoicesFromShipmentsService();
    @DefaultMessage("Trouble calling createOrderAdjustment service")
    String accountingTroubleCallingCreateOrderAdjustmentService();
    @DefaultMessage("Trouble calling createOrderPaymentPreference service")
    String accountingTroubleCallingCreateOrderPaymentPreferenceService();
    @DefaultMessage("Trouble calling releaseOrderPaymentPreference service")
    String accountingTroubleCallingReleaseOrderPaymentPreferenceService();
    @DefaultMessage("Trouble Create Invoices From Shipments Service")
    String accountingTroubleCreateInvoicesFromShipmentsService();
    @DefaultMessage("AccountingTroubleGettingShipmentEntity")
    String accountingTroubleGettingShipmentEntity(String tmpShipmentId);
    @DefaultMessage("Type")
    String accountingType();
    @DefaultMessage("Type of the Currency")
    String accountingTypeOfTheCurrency();
    @DefaultMessage("UnPosted Totals")
    String accountingUnPostedTransactionTotals();
    @DefaultMessage("AccountingUnableToAuthAdditionalShipCharges")
    String accountingUnableToAuthAdditionalShipCharges(String shipmentId, String paymentMethodId, String orderPaymentPreferenceId);
    @DefaultMessage("Unit Price")
    String accountingUnitPrice();
    @DefaultMessage("Update the availability")
    String accountingUpdateAvailability();
    @DefaultMessage("Update Billing Account")
    String accountingUpdateBillingAccount();
    @DefaultMessage("Update Foreign Exchange Rates")
    String accountingUpdateFX();
    @DefaultMessage("Security Error : To Update a Payment you must either be the to or from party or have the PAY_INFO_UPDATE or PAY_INFO_ADMIN permissions.")
    String accountingUpdatePaymentPermissionError();
    @DefaultMessage("Update Rate amount")
    String accountingUpdateRateAmount();
    @DefaultMessage("Use Account")
    String accountingUseAccount();
    @DefaultMessage("Use Gift Card Not On File")
    String accountingUseGiftCardNotOnFile();
    @DefaultMessage("Use regular expression validation pattern")
    String accountingValidationPattern();
    @DefaultMessage("Variance Reason Gl Accounts")
    String accountingVarianceReasonGlAccounts();
    @DefaultMessage("Vendor Party")
    String accountingVendorParty();
    @DefaultMessage("Vendor Payment Method")
    String accountingVendorPaymentMethod();
    @DefaultMessage("Verify Transaction")
    String accountingVerifyTransaction();
    @DefaultMessage("You do not have permission to view this page. (\"ACCOUNTING_VIEW\" or \"ACCOUNTING_ADMIN\" needed)")
    String accountingViewPermissionError();
    @DefaultMessage("Virtual Card")
    String accountingVirtualCard();
    @DefaultMessage("Credit Card: Visa/Mastercard/Amex/Discover")
    String accountingVisaMastercardAmexDiscover();
    @DefaultMessage("AccountingWithdrawalPaymentInFinAccount")
    String accountingWithdrawalPaymentInFinAccount(String finAccount_finAccountName);
    @DefaultMessage("Approve")
    String accountingWorldPayApprove();
    @DefaultMessage("Authorization Mode")
    String accountingWorldPayAuthMode();
    @DefaultMessage("Cancelled")
    String accountingWorldPayCancelled();
    @DefaultMessage("Contact details non-editable")
    String accountingWorldPayFixContact();
    @DefaultMessage("Full-authorize")
    String accountingWorldPayFullAuth();
    @DefaultMessage("Contact details to be hidden")
    String accountingWorldPayHideContact();
    @DefaultMessage("Currency drop-down to be hidden")
    String accountingWorldPayHideCurrency();
    @DefaultMessage("WorldPay instance Id")
    String accountingWorldPayInstId();
    @DefaultMessage("Shopper language Id")
    String accountingWorldPayLangId();
    @DefaultMessage("Live")
    String accountingWorldPayLive();
    @DefaultMessage("Suppress Language Menu")
    String accountingWorldPayNoLanguageMenu();
    @DefaultMessage("Pre-Auth")
    String accountingWorldPayPreAuth();
    @DefaultMessage("Test Mode")
    String accountingWorldPayTestMode();
    @DefaultMessage("Delivery Address Editable")
    String accountingWorldPayWithDelivery();
    @DefaultMessage("Assign GL Account")
    String acctgAssignGlAccount();
    @DefaultMessage("Chart of Accounts")
    String acctgChartOfAcctsTabMenu();
    @DefaultMessage("Journal Entry")
    String acctgEditGlJournalEntry();
    @DefaultMessage("Find Journal Entry")
    String acctgFindGlJournalEntry();
    @DefaultMessage("GL Account :")
    String acctgGlAcctLabel();
    @DefaultMessage("Fiscal Type :")
    String acctgGlFiscalTypeLable();
    @DefaultMessage("GL Journal")
    String acctgGlJournalEntry();
    @DefaultMessage("Description :")
    String acctgGlJrnlDescLabel();
    @DefaultMessage("GL Journal ID :")
    String acctgGlJrnlIdLabel();
    @DefaultMessage("Non-editable System ID")
    String acctgGlJrnlIdToolTip();
    @DefaultMessage("GL Party :")
    String acctgGlPartyLabel();
    @DefaultMessage("List GL Organization")
    String acctgListGlAcctOrg();
    @DefaultMessage("Navigate Accounts")
    String acctgNavigateAccts();
    @DefaultMessage("New Journal Entry")
    String acctgNewGlJournalEntry();
    @DefaultMessage("Summary")
    String acctgPartyGlJournalSummary();
    @DefaultMessage("Last Assigned To")
    String activitiesLastAssignedTo();
    @DefaultMessage("Lead Activities Breakdown")
    String activitiesLeadBreakdown();
    @DefaultMessage("No Activity")
    String activitiesNoActivity();
    @DefaultMessage("# Activities")
    String activitiesNumberOfActivities();
    @DefaultMessage("Older")
    String activitiesOlder();
    @DefaultMessage("Recent")
    String activitiesRecent();
    @DefaultMessage("Sales Rep Activities Breakdown")
    String activitiesSalesRepBreakdown();
    @DefaultMessage("Address")
    String address();
    @DefaultMessage("Address (2)")
    String address2();
    @DefaultMessage("Timing of Commissions")
    String agreementItemType_description_COMM_TIMING();
    @DefaultMessage("Commission")
    String agreementType_description_COMMISSION_AGREEMENT();
    @DefaultMessage("Employment")
    String agreementType_description_EMPLOYMENT_AGREEMENT();
    @DefaultMessage("Other")
    String agreementType_description_OTHER_AGREEMENT();
    @DefaultMessage("Partner")
    String agreementType_description_PARTNER_AGREEMENT();
    @DefaultMessage("Partner Sales")
    String agreementType_description_PARTNER_SALES_AGR();
    @DefaultMessage("Product")
    String agreementType_description_PRODUCT_AGREEMENT();
    @DefaultMessage("Purchase")
    String agreementType_description_PURCHASE_AGREEMENT();
    @DefaultMessage("Customer")
    String agreementType_description_SALES_AGREEMENT();
    @DefaultMessage("Arabic")
    String ar();
    @DefaultMessage("As Of")
    String asOf();
    @DefaultMessage("As of")
    String asOfDate();
    @DefaultMessage("Asset Maint")
    String assetMaint();
    @DefaultMessage("At least one field is required to search")
    String atLeastOnFieldRequiredToSearch();
    @DefaultMessage("Attention Name")
    String attnName();
    @DefaultMessage("Bulgarian")
    String bu();
    @DefaultMessage("Business Intelligence")
    String business_Intelligence();
    @DefaultMessage("CMS Site")
    String cMS_Site();
    @DefaultMessage("callInDisplayMessage")
    String callInDisplayMessage(String icon, String link);
    @DefaultMessage("Choose Variation Before Adding to Cart")
    String cart_addToCart_chooseVariationBeforeAddingToCart();
    @DefaultMessage("Configure Product Before Adding to Cart")
    String cart_addToCart_configureProductBeforeAddingToCart();
    @DefaultMessage("Error: a dependency to another feature has not been resolved.")
    String cart_addToCart_dependencyVariantFeature();
    @DefaultMessage("Enter Amount Before Adding to Cart")
    String cart_addToCart_enterAmountBeforeAddingToCart();
    @DefaultMessage("Enter Booking Information Before Adding to Cart")
    String cart_addToCart_enterBookingInforamtionBeforeAddingToCart();
    @DefaultMessage("Sorry, selected options are incompatible.")
    String cart_addToCart_incompatibilityVariantFeature();
    @DefaultMessage("No product information passed, not adding anything to cart.")
    String cart_addToCart_noProductInfoPassed();
    @DefaultMessage("Configuration Is Not Valid")
    String cart_addToCart_productConfigurationIsNotValid();
    @DefaultMessage("Problems parsing Reservation end string.")
    String cart_addToCart_rental_endDate();
    @DefaultMessage("Problems parsing Reservation start string.")
    String cart_addToCart_rental_startDate();
    @DefaultMessage("cart.add_category_defaults")
    String cart_add_category_defaults(String totalQuantity);
    @DefaultMessage("No agreement specified to add from.")
    String cart_agreement_not_specified_to_add_from();
    @DefaultMessage("Amount must be a positive number")
    String cart_amount_not_positive_number();
    @DefaultMessage("Cart is in read only mode")
    String cart_cart_is_in_read_only_mode();
    @DefaultMessage("No category specified to add from.")
    String cart_category_not_specified_to_add_from();
    @DefaultMessage("cart.could_not_add_product_to_cart")
    String cart_could_not_add_product_to_cart(String productId);
    @DefaultMessage("cart.could_not_get_agreement")
    String cart_could_not_get_agreement(String agreementId, String message);
    @DefaultMessage("cart.could_not_get_products_in_category")
    String cart_could_not_get_products_in_category(String categorieId);
    @DefaultMessage("cart.could_not_get_products_in_category_cart")
    String cart_could_not_get_products_in_category_cart(String categorieId, String message);
    @DefaultMessage("No order specified to add from")
    String cart_order_not_specified_to_add_from();
    @DefaultMessage("Price must be a positive number")
    String cart_price_not_positive_number();
    @DefaultMessage("This product cannot be purchased from the chosen supplier for the given quantity and currency.")
    String cart_product_not_valid_for_supplier();
    @DefaultMessage("Quantity must be a positive number")
    String cart_quantity_not_positive_number();
    @DefaultMessage("Catalog")
    String catalog();
    @DefaultMessage("Web Analytics")
    String catalogWebAnalytics();
    @DefaultMessage("Web Analytics Configuration")
    String catalogWebAnalyticsConfigs();
    @DefaultMessage("Web Analytics Types")
    String catalogWebAnalyticsTypes();
    @DefaultMessage("Cannot cancel item at this time; please try again.")
    String checkevents_cannot_cancel_item();
    @DefaultMessage("Cart is empty.")
    String checkevents_cart_empty();
    @DefaultMessage("Insufficient credit available on accounts.")
    String checkevents_insufficient_credit_available_on_account();
    @DefaultMessage("checkevents.invalid_amount_set_for_billing_account")
    String checkevents_invalid_amount_set_for_billing_account(String billingAccountId);
    @DefaultMessage("Invalid amount set for Payment method.")
    String checkevents_invalid_amount_set_for_payment_method();
    @DefaultMessage("Not enough available on account #[billingAccountId].")
    String checkevents_not_enough_available_on_account();
    @DefaultMessage("Selected payment methods will not cover this order.")
    String checkevents_payment_not_cover_this_order();
    @DefaultMessage("The change returned cannot be greater than the cash given.")
    String checkhelper_change_returned_cannot_be_greater_than_cash();
    @DefaultMessage("checkhelper.could_not_create_order_invoking_service")
    String checkhelper_could_not_create_order_invoking_service(String service);
    @DefaultMessage("ERROR: Could not create order (problem parsing order totals).")
    String checkhelper_could_not_create_order_parsing_totals();
    @DefaultMessage("Database error.")
    String checkhelper_database_error();
    @DefaultMessage("Did not complete the order, the following occurred:")
    String checkhelper_did_not_complete_order_following_occurred();
    @DefaultMessage("Please enter the amount to place on your gift card.")
    String checkhelper_enter_amount_to_place_on_gift_card();
    @DefaultMessage("Please enter your gift card number.")
    String checkhelper_enter_gift_card_number();
    @DefaultMessage("Please enter your gift card pin number.")
    String checkhelper_enter_gift_card_pin_number();
    @DefaultMessage("Please enter a shipping address.")
    String checkhelper_enter_shipping_address();
    @DefaultMessage("This gift card does not exist.")
    String checkhelper_gift_card_does_not_exist();
    @DefaultMessage("This gift card no longer has any value.")
    String checkhelper_gift_card_has_no_value();
    @DefaultMessage("Insufficient credit available on account.")
    String checkhelper_insufficient_credit_available_on_account();
    @DefaultMessage("Invalid amount for gift card entered.")
    String checkhelper_invalid_amount_for_gift_card();
    @DefaultMessage("There are no items in the cart.")
    String checkhelper_no_items_in_cart();
    @DefaultMessage("Problem with gift card information.")
    String checkhelper_problem_with_gift_card_information();
    @DefaultMessage("Problems getting order header. Cannot check external gateways!")
    String checkhelper_problems_getting_order_header();
    @DefaultMessage("Problems getting payment preference. Cannot check external gateways!")
    String checkhelper_problems_getting_payment_preference();
    @DefaultMessage("Problems parsing amount.")
    String checkhelper_problems_parsing_amount();
    @DefaultMessage("Problems reading the database, please try again.")
    String checkhelper_problems_reading_database();
    @DefaultMessage("Error : sales order lines lookup failed")
    String checkhelper_sales_order_lines_lookup_failed();
    @DefaultMessage("Please select a method of payment.")
    String checkhelper_select_method_of_payment();
    @DefaultMessage("Please Select a Shipping Destination.")
    String checkhelper_select_shipping_destination();
    @DefaultMessage("Please Select a Shipping Method.")
    String checkhelper_select_shipping_method();
    @DefaultMessage("Please Select a Splitting Preference.")
    String checkhelper_select_splitting_preference();
    @DefaultMessage("Please Specify Whether or Not This Order is a Gift.")
    String checkhelper_specify_if_order_is_gift();
    @DefaultMessage("Please specify ship after date as a date.")
    String checkhelper_specify_if_shipAfterDate_is_date();
    @DefaultMessage("Please specify a ship before date as a date.")
    String checkhelper_specify_if_shipBeforeDate_is_date();
    @DefaultMessage("Totals do not match order total.")
    String checkhelpertotalsdonotmatchordertotal();
    @DefaultMessage("City")
    String city();
    @DefaultMessage("Classification")
    String classification();
    @DefaultMessage("Accepted")
    String commonAccepted();
    @DefaultMessage("Active and Inactive")
    String commonActiveInactive();
    @DefaultMessage("Active Only")
    String commonActiveOnly();
    @DefaultMessage("Actual Start Date")
    String commonActualStartDate();
    @DefaultMessage("Add")
    String commonAdd();
    @DefaultMessage("Add a")
    String commonAddA();
    @DefaultMessage("Add A Portlet...")
    String commonAddAPortlet();
    @DefaultMessage("Add Column")
    String commonAddColumn();
    @DefaultMessage("Add Default")
    String commonAddDefault();
    @DefaultMessage("Add ID")
    String commonAddId();
    @DefaultMessage("Add New")
    String commonAddNew();
    @DefaultMessage("Add a portlet to portal page")
    String commonAddPortletToPage();
    @DefaultMessage("Add Problem")
    String commonAddProblem();
    @DefaultMessage("Address 1")
    String commonAddress1();
    @DefaultMessage("Address 2")
    String commonAddress2();
    @DefaultMessage("Address Line")
    String commonAddressLine();
    @DefaultMessage("Addresses")
    String commonAddresses();
    @DefaultMessage("Advanced Features")
    String commonAdvancedFeatures();
    @DefaultMessage("Advanced Search")
    String commonAdvancedSearch();
    @DefaultMessage("All")
    String commonAll();
    @DefaultMessage("All Day")
    String commonAllDay();
    @DefaultMessage("All methods")
    String commonAllMethods();
    @DefaultMessage("All Week")
    String commonAllWeek();
    @DefaultMessage("Always Include")
    String commonAlwaysInclude();
    @DefaultMessage("Amount")
    String commonAmount();
    @DefaultMessage("And")
    String commonAnd();
    @DefaultMessage("Any")
    String commonAny();
    @DefaultMessage("Any return status")
    String commonAnyReturnStatus();
    @DefaultMessage("Any Role Type")
    String commonAnyRoleType();
    @DefaultMessage("Any Channel")
    String commonAnySalesChannel();
    @DefaultMessage("Any State/Province")
    String commonAnyStateProvince();
    @DefaultMessage("Any Store")
    String commonAnyStore();
    @DefaultMessage("Any Web Site")
    String commonAnyWebSite();
    @DefaultMessage("Applications")
    String commonApplications();
    @DefaultMessage("Apply")
    String commonApply();
    @DefaultMessage("Approved")
    String commonApproved();
    @DefaultMessage("April")
    String commonApril();
    @DefaultMessage("Area")
    String commonArea();
    @DefaultMessage("Area Code")
    String commonAreaCode();
    @DefaultMessage("Associate")
    String commonAssociate();
    @DefaultMessage("Associations")
    String commonAssocs();
    @DefaultMessage("At")
    String commonAt();
    @DefaultMessage("Attention Name")
    String commonAttentionName();
    @DefaultMessage("Attn")
    String commonAttn();
    @DefaultMessage("August")
    String commonAugust();
    @DefaultMessage("Unique ID - auto-assigned if blank")
    String commonAutoAssignedId();
    @DefaultMessage("Available")
    String commonAvailable();
    @DefaultMessage("Available Portlets")
    String commonAvailablePortlets();
    @DefaultMessage("Average")
    String commonAverage();
    @DefaultMessage("Back")
    String commonBack();
    @DefaultMessage("Back to")
    String commonBackTo();
    @DefaultMessage("Back To List")
    String commonBackToList();
    @DefaultMessage("Back to Options")
    String commonBackToOptions();
    @DefaultMessage("AccntNr")
    String commonBankAccntNrAbbr();
    @DefaultMessage("Login")
    String commonBeLogged();
    @DefaultMessage("Benefit")
    String commonBenefit();
    @DefaultMessage("but")
    String commonBut();
    @DefaultMessage("By")
    String commonBy();
    @DefaultMessage("Cancel")
    String commonCancel();
    @DefaultMessage("Cancel All")
    String commonCancelAll();
    @DefaultMessage("Cancel/Done")
    String commonCancelDone();
    @DefaultMessage("Cancelled")
    String commonCancelled();
    @DefaultMessage("Could not be found")
    String commonCannotBeFound();
    @DefaultMessage("Change")
    String commonChange();
    @DefaultMessage("Charts")
    String commonChart();
    @DefaultMessage("Checked")
    String commonChecked();
    @DefaultMessage("Checking")
    String commonChecking();
    @DefaultMessage("Checkout Without Login")
    String commonCheckoutAnonymous();
    @DefaultMessage("You may checkout without creating an account")
    String commonCheckoutAnonymousMsg();
    @DefaultMessage("Choose Language")
    String commonChooseLanguage();
    @DefaultMessage("City")
    String commonCity();
    @DefaultMessage("Clear")
    String commonClear();
    @DefaultMessage("Clear All")
    String commonClearAll();
    @DefaultMessage("Clear Current")
    String commonClearCurrent();
    @DefaultMessage("Click Here")
    String commonClickHere();
    @DefaultMessage("Click here For Field Lookup")
    String commonClickHereForFieldLookup();
    @DefaultMessage("Close")
    String commonClose();
    @DefaultMessage("-")
    String commonCloseTab();
    @DefaultMessage("Collapse")
    String commonCollapse();
    @DefaultMessage("Collapse all")
    String commonCollapseAll();
    @DefaultMessage("Coming Soon!")
    String commonComingSoon();
    @DefaultMessage("Comment")
    String commonComment();
    @DefaultMessage("Comments")
    String commonComments();
    @DefaultMessage("Completed")
    String commonCompleted();
    @DefaultMessage("Configuration")
    String commonConfiguration();
    @DefaultMessage("Configure:")
    String commonConfigure();
    @DefaultMessage("Do you confirm ?")
    String commonConfirm();
    @DefaultMessage("Do you confirm the addition?")
    String commonConfirmAdd();
    @DefaultMessage("Do you confirm the suppression?")
    String commonConfirmDelete();
    @DefaultMessage("ContactMechId")
    String commonContactMechID();
    @DefaultMessage("Contact Purpose")
    String commonContactPurpose();
    @DefaultMessage("Contact Us")
    String commonContactUs();
    @DefaultMessage("Contacts")
    String commonContacts();
    @DefaultMessage("Content")
    String commonContent();
    @DefaultMessage("Continue")
    String commonContinue();
    @DefaultMessage("Copy")
    String commonCopy();
    @DefaultMessage("Copyright")
    String commonCopyright();
    @DefaultMessage("Could be Used as")
    String commonCouldBeUsedAs();
    @DefaultMessage("Could be used for")
    String commonCouldBeUsedFor();
    @DefaultMessage("Country")
    String commonCountry();
    @DefaultMessage("County")
    String commonCounty();
    @DefaultMessage("County-City")
    String commonCountyCity();
    @DefaultMessage("Create")
    String commonCreate();
    @DefaultMessage("Create New")
    String commonCreateNew();
    @DefaultMessage("Created")
    String commonCreated();
    @DefaultMessage("Created By")
    String commonCreatedBy();
    @DefaultMessage("Credit")
    String commonCredit();
    @DefaultMessage("Currency")
    String commonCurrency();
    @DefaultMessage("Current")
    String commonCurrent();
    @DefaultMessage("Current Password")
    String commonCurrentPassword();
    @DefaultMessage("Daily")
    String commonDaily();
    @DefaultMessage("Dashboard")
    String commonDashboard();
    @DefaultMessage("Database Problem")
    String commonDatabaseProblem();
    @DefaultMessage("Date")
    String commonDate();
    @DefaultMessage("Date Filter")
    String commonDateFilter();
    @DefaultMessage("Dates")
    String commonDates();
    @DefaultMessage("Day")
    String commonDay();
    @DefaultMessage("Days")
    String commonDays();
    @DefaultMessage("Debit")
    String commonDebit();
    @DefaultMessage("December")
    String commonDecember();
    @DefaultMessage("Default Organization")
    String commonDefaultOrganizationPartyId();
    @DefaultMessage("Delete")
    String commonDelete();
    @DefaultMessage("Delete All")
    String commonDeleteAll();
    @DefaultMessage("Depth")
    String commonDepth();
    @DefaultMessage("Description")
    String commonDescription();
    @DefaultMessage("Detail")
    String commonDetail();
    @DefaultMessage("Details")
    String commonDetails();
    @DefaultMessage("Dimension")
    String commonDimension();
    @DefaultMessage("Disabled")
    String commonDisabled();
    @DefaultMessage("CommonDisplaying")
    String commonDisplaying(String lowCount, String highCount, String total);
    @DefaultMessage("Distance")
    String commonDistance();
    @DefaultMessage("Done")
    String commonDone();
    @DefaultMessage("Duplicate")
    String commonDuplicate();
    @DefaultMessage("Edit")
    String commonEdit();
    @DefaultMessage("Edit Attributes for Portlet")
    String commonEditPortletAttributes();
    @DefaultMessage("Elements Found")
    String commonElementsFound();
    @DefaultMessage("Elevation:")
    String commonElevation();
    @DefaultMessage("Email")
    String commonEmail();
    @DefaultMessage("Email Password")
    String commonEmailPassword();
    @DefaultMessage("Email To")
    String commonEmailTo();
    @DefaultMessage("Email Type")
    String commonEmailType();
    @DefaultMessage("Emails")
    String commonEmails();
    @DefaultMessage("")
    String commonEmptyHeader();
    @DefaultMessage("Enabled")
    String commonEnabled();
    @DefaultMessage("End date")
    String commonEndDate();
    @DefaultMessage("End Date/Time")
    String commonEndDateTime();
    @DefaultMessage("Children")
    String commonEntityChildren();
    @DefaultMessage("Entries")
    String commonEntries();
    @DefaultMessage("Entry")
    String commonEntry();
    @DefaultMessage("The following required fields where found empty")
    String commonErrorMessage1();
    @DefaultMessage("The following errors occurred")
    String commonErrorMessage2();
    @DefaultMessage("The following occurred")
    String commonErrorMessage3();
    @DefaultMessage("CommonErrorNoStatusValidChange")
    String commonErrorNoStatusValidChange(String lookedUpValue_statusId, String parameters_statusId);
    @DefaultMessage("CommonErrorStatusNotValid")
    String commonErrorStatusNotValid(String entity, String lookedUpValue_statusId, String goodStatusId);
    @DefaultMessage("EventDate")
    String commonEventDate();
    @DefaultMessage("Exclude")
    String commonExclude();
    @DefaultMessage("Expand")
    String commonExpand();
    @DefaultMessage("Expand all")
    String commonExpandAll();
    @DefaultMessage("Expectation")
    String commonExpectation();
    @DefaultMessage("Expire")
    String commonExpire();
    @DefaultMessage("Expire All")
    String commonExpireAll();
    @DefaultMessage("Expire Date")
    String commonExpireDate();
    @DefaultMessage("Expires")
    String commonExpires();
    @DefaultMessage("Export")
    String commonExport();
    @DefaultMessage("ext")
    String commonExt();
    @DefaultMessage("Definition, what is it?")
    String commonExtHelpDefinition();
    @DefaultMessage("What''s on the screen?")
    String commonExtHelpOnScreen();
    @DefaultMessage("Help screen.")
    String commonExtHelpTitle();
    @DefaultMessage("What is it used for?")
    String commonExtHelpUsedFor();
    @DefaultMessage("Index")
    String commonExtIndex();
    @DefaultMessage("False")
    String commonFalse();
    @DefaultMessage("February")
    String commonFebruary();
    @DefaultMessage("Female")
    String commonFemale();
    @DefaultMessage("Field Lookup")
    String commonFieldLookup();
    @DefaultMessage("Fields marked with (*) are required.")
    String commonFieldsMarkedAreRequired();
    @DefaultMessage("Filter")
    String commonFilter();
    @DefaultMessage("Fin Accts")
    String commonFinAccounts();
    @DefaultMessage("Bank")
    String commonFinBankName();
    @DefaultMessage("Find")
    String commonFind();
    @DefaultMessage("Find All")
    String commonFindAll();
    @DefaultMessage("Finish Date/Time")
    String commonFinishDate();
    @DefaultMessage("First")
    String commonFirst();
    @DefaultMessage("The Following Errors Occurred")
    String commonFollowingErrorsOccurred();
    @DefaultMessage("The following occurred")
    String commonFollowingOccurred();
    @DefaultMessage("For")
    String commonFor();
    @DefaultMessage("Forgot Your Password")
    String commonForgotYourPassword();
    @DefaultMessage("Format: yyyy-MM-dd")
    String commonFormatDate();
    @DefaultMessage("One of the date fields is incorrect, format must be yyyy-MM-dd HH:mm:ss.SSS")
    String commonFormatDateFieldNotCorrect();
    @DefaultMessage("Format: yyyy-MM-dd HH:mm:ss.SSS")
    String commonFormatDateTime();
    @DefaultMessage("CommonFormatLocalizedDateTime")
    String commonFormatLocalizedDateTime(String localizedFormat);
    @DefaultMessage("Format: HH:mm:ss.SSS")
    String commonFormatTime();
    @DefaultMessage("Found")
    String commonFound();
    @DefaultMessage("Frame Alert")
    String commonFrameAlert1();
    @DefaultMessage("This document is designed to be viewed using the frames feature. If you see this message, you are using a non-frame-capable web client.")
    String commonFrameAlert2();
    @DefaultMessage("Friday")
    String commonFriday();
    @DefaultMessage("From")
    String commonFrom();
    @DefaultMessage("From Address")
    String commonFromAddress();
    @DefaultMessage("From Date")
    String commonFromDate();
    @DefaultMessage("From Date is missing")
    String commonFromDateMissing();
    @DefaultMessage("From Date is not a valid Date-Time.")
    String commonFromDateNotValidDateTime();
    @DefaultMessage("From Date / Thru Date")
    String commonFromDateThruDate();
    @DefaultMessage("From Date  Time")
    String commonFromDateTime();
    @DefaultMessage("CommonGenericPermissionError")
    String commonGenericPermissionError(String resourceDescription, String primaryPermission, String mainAction, String altPermissionList);
    @DefaultMessage("Geo")
    String commonGeo();
    @DefaultMessage("Geo Location")
    String commonGeoLocation();
    @DefaultMessage("Geos")
    String commonGeos();
    @DefaultMessage("Get Password Hint")
    String commonGetPasswordHint();
    @DefaultMessage("Global")
    String commonGlobal();
    @DefaultMessage("Go!")
    String commonGo();
    @DefaultMessage("Go Back")
    String commonGoBack();
    @DefaultMessage("Go to Page")
    String commonGotoPage();
    @DefaultMessage("Go To Parent")
    String commonGotoParent();
    @DefaultMessage("Group")
    String commonGroup();
    @DefaultMessage("Height")
    String commonHeight();
    @DefaultMessage("Held")
    String commonHeld();
    @DefaultMessage("Help")
    String commonHelp();
    @DefaultMessage("Help file or URL not found")
    String commonHelpNotFound();
    @DefaultMessage("Hide Fields")
    String commonHideFields();
    @DefaultMessage("High")
    String commonHigh();
    @DefaultMessage("Home")
    String commonHome();
    @DefaultMessage("Hour")
    String commonHour();
    @DefaultMessage("Hourly")
    String commonHourly();
    @DefaultMessage("ID")
    String commonId();
    @DefaultMessage("Id Already Exist")
    String commonIdAlreadyExist();
    @DefaultMessage("ID Code")
    String commonIdCode();
    @DefaultMessage("Identifier")
    String commonIdentifier();
    @DefaultMessage("IDs")
    String commonIds();
    @DefaultMessage("In")
    String commonIn();
    @DefaultMessage("In The")
    String commonInThe();
    @DefaultMessage("Include")
    String commonInclude();
    @DefaultMessage("Information")
    String commonInformation();
    @DefaultMessage("Input")
    String commonInput();
    @DefaultMessage("Insert")
    String commonInsert();
    @DefaultMessage("Internal Comment")
    String commonInternalComment();
    @DefaultMessage("Into")
    String commonInto();
    @DefaultMessage("Introduction Date")
    String commonIntroductionDate();
    @DefaultMessage("Inventory")
    String commonInventory();
    @DefaultMessage("is a")
    String commonIsA();
    @DefaultMessage("Is Anonymous")
    String commonIsAnonymous();
    @DefaultMessage("Item")
    String commonItem();
    @DefaultMessage("Items")
    String commonItems();
    @DefaultMessage("Items per page")
    String commonItemsPerPage();
    @DefaultMessage("January")
    String commonJanuary();
    @DefaultMessage("July")
    String commonJuly();
    @DefaultMessage("June")
    String commonJune();
    @DefaultMessage("Language")
    String commonLanguageTitle();
    @DefaultMessage("Large")
    String commonLarge();
    @DefaultMessage("Last")
    String commonLast();
    @DefaultMessage("Last system notes")
    String commonLastSytemNotes();
    @DefaultMessage("Last Updated")
    String commonLastUpdated();
    @DefaultMessage("Latitude:")
    String commonLatitude();
    @DefaultMessage("Length")
    String commonLength();
    @DefaultMessage("less than")
    String commonLessThan();
    @DefaultMessage("Line")
    String commonLine();
    @DefaultMessage("Link")
    String commonLink();
    @DefaultMessage("List")
    String commonList();
    @DefaultMessage("List All")
    String commonListAll();
    @DefaultMessage("Loading...")
    String commonLoading();
    @DefaultMessage("Localisation")
    String commonLocalisation();
    @DefaultMessage("Login")
    String commonLogin();
    @DefaultMessage("log in here")
    String commonLoginHere();
    @DefaultMessage("Logout")
    String commonLogout();
    @DefaultMessage("Longitude:")
    String commonLongitude();
    @DefaultMessage("Lookup")
    String commonLookup();
    @DefaultMessage("lookup:anywho.com")
    String commonLookupAnywho();
    @DefaultMessage("CommonLookupAnywhoLink")
    String commonLookupAnywhoLink(String telecomNumber_areaCode, String telecomNumber_contactNumber);
    @DefaultMessage("Look up White pages")
    String commonLookupWhitepages();
    @DefaultMessage("CommonLookupWhitepagesAddressLink")
    String commonLookupWhitepagesAddressLink(String addressNum, String addressOther, String postalAddress_city, String postalAddress_stateProvinceGeoId);
    @DefaultMessage("CommonLookupWhitepagesTelNumberLink")
    String commonLookupWhitepagesTelNumberLink(String telecomNumber_areaCode, String telecomNumber_contactNumber);
    @DefaultMessage("Low")
    String commonLow();
    @DefaultMessage("Main")
    String commonMain();
    @DefaultMessage("Male")
    String commonMale();
    @DefaultMessage("Manage Portal Pages...")
    String commonManagePortalPages();
    @DefaultMessage("Manager")
    String commonManager();
    @DefaultMessage("Many")
    String commonMany();
    @DefaultMessage("March")
    String commonMarch();
    @DefaultMessage("Matched")
    String commonMatched();
    @DefaultMessage("250 Chars Maximum")
    String commonMax250Chars();
    @DefaultMessage("May")
    String commonMay();
    @DefaultMessage("Create")
    String commonMayCreate();
    @DefaultMessage("You may create a new account here")
    String commonMayCreateNewAccountHere();
    @DefaultMessage("Measures")
    String commonMeasures();
    @DefaultMessage("Medium")
    String commonMedium();
    @DefaultMessage("Message")
    String commonMessage();
    @DefaultMessage("Messages")
    String commonMessages();
    @DefaultMessage("Method")
    String commonMethod();
    @DefaultMessage("Millisecond")
    String commonMilliSecond();
    @DefaultMessage("Minute")
    String commonMinute();
    @DefaultMessage("Minutely")
    String commonMinutely();
    @DefaultMessage("Miscellaneous")
    String commonMiscellaneous();
    @DefaultMessage("Modify")
    String commonModify();
    @DefaultMessage("Monday")
    String commonMonday();
    @DefaultMessage("Month")
    String commonMonth();
    @DefaultMessage("Monthly")
    String commonMonthly();
    @DefaultMessage("Months")
    String commonMonths();
    @DefaultMessage("More")
    String commonMore();
    @DefaultMessage("more than")
    String commonMoreThan();
    @DefaultMessage("Move Portlet at the Bottom")
    String commonMovePortletBottom();
    @DefaultMessage("Move Portlet Down")
    String commonMovePortletDown();
    @DefaultMessage("Move Portlet Left")
    String commonMovePortletLeft();
    @DefaultMessage("Move Portlet Right")
    String commonMovePortletRight();
    @DefaultMessage("Move Portlet at the Top")
    String commonMovePortletTop();
    @DefaultMessage("Move Portlet Up")
    String commonMovePortletUp();
    @DefaultMessage("Move to Portal Page...")
    String commonMoveToPortalPage();
    @DefaultMessage("My Personal Page")
    String commonMyPersonalPage();
    @DefaultMessage("Mon statut")
    String commonMyStatus();
    @DefaultMessage("N")
    String commonN();
    @DefaultMessage("N/A")
    String commonNA();
    @DefaultMessage("Name")
    String commonName();
    @DefaultMessage("Nbr")
    String commonNbr();
    @DefaultMessage("New")
    String commonNew();
    @DefaultMessage("New Password")
    String commonNewPassword();
    @DefaultMessage("New Password Verify")
    String commonNewPasswordVerify();
    @DefaultMessage("New Selection")
    String commonNewSelection();
    @DefaultMessage("New User")
    String commonNewUser();
    @DefaultMessage("Next")
    String commonNext();
    @DefaultMessage("No")
    String commonNo();
    @DefaultMessage("No Access to this function, contact your system administrator if you feel this is an error")
    String commonNoAccess();
    @DefaultMessage("No Address")
    String commonNoAddress();
    @DefaultMessage("No contact information on file")
    String commonNoContactInformationOnFile();
    @DefaultMessage("No Contains")
    String commonNoContains();
    @DefaultMessage("Custom method name for UoM conversion not found")
    String commonNoCustomMethodName();
    @DefaultMessage("No detail image available to display.")
    String commonNoDetailImageAvailableToDisplay();
    @DefaultMessage("No element found")
    String commonNoElementFound();
    @DefaultMessage("No Geolocation Available (for a demo you may try using DemoCustomer party profile)")
    String commonNoGeolocationAvailable();
    @DefaultMessage("No Parent")
    String commonNoParent();
    @DefaultMessage("No portal page data found. You may not have the necessary seed or other data for it.")
    String commonNoPortalPageDataFound();
    @DefaultMessage("Please, choose new category again, No portlet in this category.")
    String commonNoPortletsInCategory();
    @DefaultMessage("No Postal Address")
    String commonNoPostalAddress();
    @DefaultMessage("No Record Found.")
    String commonNoRecordFound();
    @DefaultMessage("No tasks currently require your attention.")
    String commonNoTaskAssigned();
    @DefaultMessage("UOM Conversion Relationship Not Found")
    String commonNoUomConversionFound();
    @DefaultMessage("None")
    String commonNone();
    @DefaultMessage("Normal")
    String commonNormal();
    @DefaultMessage("Not")
    String commonNot();
    @DefaultMessage("Not Assigned")
    String commonNotAssigned();
    @DefaultMessage("cannot change without re-creating")
    String commonNotModifRecreat();
    @DefaultMessage("Not Set")
    String commonNotSet();
    @DefaultMessage("Not Shown")
    String commonNotShown();
    @DefaultMessage("Not yet implemented")
    String commonNotYetImplemented();
    @DefaultMessage("Not You")
    String commonNotYou();
    @DefaultMessage("Note")
    String commonNote();
    @DefaultMessage("Notes")
    String commonNotes();
    @DefaultMessage("November")
    String commonNovember();
    @DefaultMessage("Now")
    String commonNow();
    @DefaultMessage("Number")
    String commonNumber();
    @DefaultMessage("October")
    String commonOctober();
    @DefaultMessage("of")
    String commonOf();
    @DefaultMessage("On")
    String commonOn();
    @DefaultMessage("Only")
    String commonOnly();
    @DefaultMessage("Open")
    String commonOpen();
    @DefaultMessage("Open in New Window")
    String commonOpenNewWindow();
    @DefaultMessage("open page in new window")
    String commonOpenPageNewWindow();
    @DefaultMessage("+")
    String commonOpenTab();
    @DefaultMessage("Options")
    String commonOptions();
    @DefaultMessage("OR")
    String commonOr();
    @DefaultMessage("Order")
    String commonOrder();
    @DefaultMessage("Order By")
    String commonOrderBy();
    @DefaultMessage("Orders")
    String commonOrders();
    @DefaultMessage("Other")
    String commonOther();
    @DefaultMessage("(overrides either of the above selections.)")
    String commonOverridesSelection();
    @DefaultMessage("Overview")
    String commonOverview();
    @DefaultMessage("Page")
    String commonPage();
    @DefaultMessage("Paging Off")
    String commonPagingOff();
    @DefaultMessage("Paging On")
    String commonPagingOn();
    @DefaultMessage("Parent")
    String commonParent();
    @DefaultMessage("Party Id")
    String commonPartyID();
    @DefaultMessage("Party Skills")
    String commonPartySkills();
    @DefaultMessage("Password")
    String commonPassword();
    @DefaultMessage("Please Change Your Password")
    String commonPasswordChange();
    @DefaultMessage("Payment Method Type")
    String commonPaymentMethodType();
    @DefaultMessage("Payments")
    String commonPayments();
    @DefaultMessage("Pdf")
    String commonPdf();
    @DefaultMessage("Perform")
    String commonPerform();
    @DefaultMessage("Permission Error")
    String commonPermissionError();
    @DefaultMessage("CommonPermissionErrorMessage")
    String commonPermissionErrorMessage(String resourceDescription, String mainAction);
    @DefaultMessage("Permission main-action parameter missing!")
    String commonPermissionMainActionAttributeMissing();
    @DefaultMessage("Permission primaryPermission parameter missing!")
    String commonPermissionPrimaryPermissionMissing();
    @DefaultMessage("this operation")
    String commonPermissionThisOperation();
    @DefaultMessage("Person")
    String commonPerson();
    @DefaultMessage("Please enter a valid number in this field.")
    String commonPleaseEnterValidNumberInThisField();
    @DefaultMessage("Category of portlet pages for application")
    String commonPortalCategoryPage();
    @DefaultMessage("Edit portal page")
    String commonPortalEditPage();
    @DefaultMessage("Add a new portal Page")
    String commonPortalNewPage();
    @DefaultMessage("Portal pages for application")
    String commonPortalPagesForApplication();
    @DefaultMessage("Posted By")
    String commonPostedBy();
    @DefaultMessage("Posted Date")
    String commonPostedDate();
    @DefaultMessage("Powered by")
    String commonPoweredBy();
    @DefaultMessage("Preferences")
    String commonPreferences();
    @DefaultMessage("Prepared")
    String commonPrepared();
    @DefaultMessage("Previous")
    String commonPrevious();
    @DefaultMessage("Primary Apps")
    String commonPrimaryApps();
    @DefaultMessage("Print")
    String commonPrint();
    @DefaultMessage("Printer Friendly")
    String commonPrinterFriendly();
    @DefaultMessage("Priority")
    String commonPriority();
    @DefaultMessage("Processing")
    String commonProcessing();
    @DefaultMessage("Profile")
    String commonProfile();
    @DefaultMessage("Picking in progress")
    String commonProsPrep();
    @DefaultMessage("Receipt in progress")
    String commonProsReci();
    @DefaultMessage("Province")
    String commonProvince();
    @DefaultMessage("Publish")
    String commonPublish();
    @DefaultMessage("Purpose")
    String commonPurpose();
    @DefaultMessage("Qty")
    String commonQty();
    @DefaultMessage("Qualifier")
    String commonQualifier();
    @DefaultMessage("Quantity")
    String commonQuantity();
    @DefaultMessage("Quarter")
    String commonQuarter();
    @DefaultMessage("Query")
    String commonQuery();
    @DefaultMessage("Quick Add")
    String commonQuickAdd();
    @DefaultMessage("Quick Add To Shopping List")
    String commonQuickAddList();
    @DefaultMessage("Rate")
    String commonRate();
    @DefaultMessage("Rates")
    String commonRates();
    @DefaultMessage("Ready")
    String commonReady();
    @DefaultMessage("Reason")
    String commonReason();
    @DefaultMessage("Receive")
    String commonReceive();
    @DefaultMessage("Received")
    String commonReceived();
    @DefaultMessage("Red")
    String commonRed();
    @DefaultMessage("Refine")
    String commonRefine();
    @DefaultMessage("Refine Search")
    String commonRefineSearch();
    @DefaultMessage("Refresh")
    String commonRefresh();
    @DefaultMessage("Registered User")
    String commonRegistered();
    @DefaultMessage("Rejected")
    String commonRejected();
    @DefaultMessage("Related Information")
    String commonRelatedInformation();
    @DefaultMessage("Release Date")
    String commonReleaseDate();
    @DefaultMessage("Release Version")
    String commonReleaseVersion();
    @DefaultMessage("Remove")
    String commonRemove();
    @DefaultMessage("Remove Expired")
    String commonRemoveExpired();
    @DefaultMessage("Remove Portlet")
    String commonRemovePortlet();
    @DefaultMessage("Report")
    String commonReport();
    @DefaultMessage("Reports")
    String commonReports();
    @DefaultMessage("Required")
    String commonRequired();
    @DefaultMessage("The Following Required Fields Where Found Empty")
    String commonRequiredFieldsFoundEmpty();
    @DefaultMessage("Reset")
    String commonReset();
    @DefaultMessage("Result of lookup")
    String commonResultLookup();
    @DefaultMessage("Return")
    String commonReturn();
    @DefaultMessage("Return Status")
    String commonReturnStatus();
    @DefaultMessage("revert to original")
    String commonRevertPortalPage();
    @DefaultMessage("Review")
    String commonReview();
    @DefaultMessage("Routing")
    String commonRouting();
    @DefaultMessage("rows")
    String commonRows();
    @DefaultMessage("Run")
    String commonRun();
    @DefaultMessage("Saturday")
    String commonSaturday();
    @DefaultMessage("Save")
    String commonSave();
    @DefaultMessage("Savings")
    String commonSavings();
    @DefaultMessage("Search")
    String commonSearch();
    @DefaultMessage("Search Options")
    String commonSearchOptions();
    @DefaultMessage("Search Results for")
    String commonSearchResultfor();
    @DefaultMessage("Search Results")
    String commonSearchResults();
    @DefaultMessage("Second")
    String commonSecond();
    @DefaultMessage("Secondary Apps")
    String commonSecondaryApps();
    @DefaultMessage("Secondly")
    String commonSecondly();
    @DefaultMessage("Security")
    String commonSecurity();
    @DefaultMessage("Security Groups")
    String commonSecurityGroups();
    @DefaultMessage("Abbreviation")
    String commonSegmentGroupGeoAbbr();
    @DefaultMessage("Code")
    String commonSegmentGroupGeoCode();
    @DefaultMessage("Geo ID")
    String commonSegmentGroupGeoId();
    @DefaultMessage("Name")
    String commonSegmentGroupGeoName();
    @DefaultMessage("Secondary Code")
    String commonSegmentGroupGeoSecCode();
    @DefaultMessage("Geo Type ID")
    String commonSegmentGroupGeoTypeId();
    @DefaultMessage("Select")
    String commonSelect();
    @DefaultMessage("Select All")
    String commonSelectAll();
    @DefaultMessage("Any")
    String commonSelectAny();
    @DefaultMessage("Select One")
    String commonSelectOne();
    @DefaultMessage("Select Portal Page...")
    String commonSelectPortalPage();
    @DefaultMessage("selected")
    String commonSelected();
    @DefaultMessage("Selection")
    String commonSelection();
    @DefaultMessage("Send")
    String commonSend();
    @DefaultMessage("Send Date")
    String commonSendDate();
    @DefaultMessage("send email")
    String commonSendEmail();
    @DefaultMessage("Send per Email")
    String commonSendPerEmail();
    @DefaultMessage("Send Report By Mail")
    String commonSendReportByMail();
    @DefaultMessage("Sent")
    String commonSent();
    @DefaultMessage("September")
    String commonSeptember();
    @DefaultMessage("Sequence")
    String commonSequence();
    @DefaultMessage("Sequence Num")
    String commonSequenceNum();
    @DefaultMessage("Set")
    String commonSet();
    @DefaultMessage("Set As Current")
    String commonSetAsCurrent();
    @DefaultMessage("Set Column Width...")
    String commonSetColumnWidth();
    @DefaultMessage("(Will be set to now if empty)")
    String commonSetNowEmpty();
    @DefaultMessage("Shipping")
    String commonShipping();
    @DefaultMessage("ShoppingCart")
    String commonShoppingCart();
    @DefaultMessage("Show")
    String commonShow();
    @DefaultMessage("Show All")
    String commonShowAll();
    @DefaultMessage("Show all records")
    String commonShowAllRecords();
    @DefaultMessage("Show Lookup Fields")
    String commonShowLookupFields();
    @DefaultMessage("Since")
    String commonSince();
    @DefaultMessage("Skip navigation")
    String commonSkipNavigation();
    @DefaultMessage("Small")
    String commonSmall();
    @DefaultMessage("Sorry, you cannot send this page to a friend.  Select rather from a category or an item")
    String commonSorryYouCannotSend();
    @DefaultMessage("Sort Order")
    String commonSortOrder();
    @DefaultMessage("Sorted By")
    String commonSortedBy();
    @DefaultMessage("Specified")
    String commonSpecified();
    @DefaultMessage("Start Date")
    String commonStartDate();
    @DefaultMessage("Start Date/Time")
    String commonStartDateTime();
    @DefaultMessage("State")
    String commonState();
    @DefaultMessage("State/Province")
    String commonStateProvince();
    @DefaultMessage("Stats")
    String commonStats();
    @DefaultMessage("Status")
    String commonStatus();
    @DefaultMessage("Status History")
    String commonStatusHistory();
    @DefaultMessage("Status to ''complete''")
    String commonStatustoComplete();
    @DefaultMessage("Sub Title")
    String commonSubTitle();
    @DefaultMessage("Sub Total")
    String commonSubTotal();
    @DefaultMessage("Submit")
    String commonSubmit();
    @DefaultMessage("Submitted")
    String commonSubmitted();
    @DefaultMessage("Subtotal")
    String commonSubtotal();
    @DefaultMessage("Summary")
    String commonSummary();
    @DefaultMessage("Sunday")
    String commonSunday();
    @DefaultMessage("Surveys")
    String commonSurveys();
    @DefaultMessage("Simple view")
    String commonSwitchAllTableViewOff();
    @DefaultMessage("Large view")
    String commonSwitchAllTableViewOn();
    @DefaultMessage("Tally")
    String commonTally();
    @DefaultMessage("Tax")
    String commonTax();
    @DefaultMessage("Tel")
    String commonTelephoneAbbr();
    @DefaultMessage("Tell-A-Friend")
    String commonTellAFriend();
    @DefaultMessage("Tenant ID")
    String commonTenantId();
    @DefaultMessage("Test")
    String commonTest();
    @DefaultMessage("Text")
    String commonText();
    @DefaultMessage("The")
    String commonThe();
    @DefaultMessage("The Following Required Fields Where Found Empty")
    String commonTheFollowingRequiredFieldsWhereFoundEmpty();
    @DefaultMessage("The Open For Business Project")
    String commonTheOpenForBusinessProject();
    @DefaultMessage("This")
    String commonThis();
    @DefaultMessage("Thru")
    String commonThru();
    @DefaultMessage("Thru Date")
    String commonThruDate();
    @DefaultMessage("Thru Date  Time")
    String commonThruDateTime();
    @DefaultMessage("Thursday")
    String commonThursday();
    @DefaultMessage("Time")
    String commonTime();
    @DefaultMessage("Time Zone")
    String commonTimeZone();
    @DefaultMessage("Title")
    String commonTitle();
    @DefaultMessage("Dr.")
    String commonTitleDr();
    @DefaultMessage("Mr.")
    String commonTitleMr();
    @DefaultMessage("Mrs.")
    String commonTitleMrs();
    @DefaultMessage("Ms.")
    String commonTitleMs();
    @DefaultMessage("To")
    String commonTo();
    @DefaultMessage("To Name")
    String commonToName();
    @DefaultMessage("Today")
    String commonToday();
    @DefaultMessage("Toggle")
    String commonToggle();
    @DefaultMessage("Total")
    String commonTotal();
    @DefaultMessage("Total Amount")
    String commonTotalAmount();
    @DefaultMessage("Total Cost")
    String commonTotalCost();
    @DefaultMessage("Total Cost Mult")
    String commonTotalCostMult();
    @DefaultMessage("Cost To Price Mult")
    String commonTotalCostToPriceMult();
    @DefaultMessage("Total Perc Profit")
    String commonTotalPercProfit();
    @DefaultMessage("Total Price")
    String commonTotalPrice();
    @DefaultMessage("Total Profit")
    String commonTotalProfit();
    @DefaultMessage("Total Value")
    String commonTotalValue();
    @DefaultMessage("True")
    String commonTrue();
    @DefaultMessage("Tuesday")
    String commonTuesday();
    @DefaultMessage("Type")
    String commonType();
    @DefaultMessage("Unit Price")
    String commonUnitPrice();
    @DefaultMessage("Until")
    String commonUntil();
    @DefaultMessage("UOM")
    String commonUom();
    @DefaultMessage("Abbreviation")
    String commonUomAbbreviation();
    @DefaultMessage("UOM ID")
    String commonUomUomId();
    @DefaultMessage("Update")
    String commonUpdate();
    @DefaultMessage("Update link")
    String commonUpdateLink();
    @DefaultMessage("Updated")
    String commonUpdated();
    @DefaultMessage("Updated Effective Thru")
    String commonUpdatedEffectiveThru();
    @DefaultMessage("Upload")
    String commonUpload();
    @DefaultMessage("Used")
    String commonUsed();
    @DefaultMessage("Used as")
    String commonUsedAs();
    @DefaultMessage("User/Auto Entered")
    String commonUserAutoEntered();
    @DefaultMessage("User Entered Only")
    String commonUserEnteredOnly();
    @DefaultMessage("Username")
    String commonUsername();
    @DefaultMessage("Valid From Date")
    String commonValidFromDate();
    @DefaultMessage("Valid Thru Date")
    String commonValidThruDate();
    @DefaultMessage("Validate")
    String commonValidate();
    @DefaultMessage("Validity problem")
    String commonValidityProblem();
    @DefaultMessage("Value")
    String commonValue();
    @DefaultMessage("View")
    String commonView();
    @DefaultMessage("Access to this view has been blocked.")
    String commonViewBlocked();
    @DefaultMessage("View Calendar")
    String commonViewCalendar();
    @DefaultMessage("View Request")
    String commonViewRequest();
    @DefaultMessage("Visitors")
    String commonVisitors();
    @DefaultMessage("Visual Theme")
    String commonVisualTheme();
    @DefaultMessage("Visual Theme ID not found.")
    String commonVisualThemeIdNotFound();
    @DefaultMessage("CommonVisualThemeInvalidRecord")
    String commonVisualThemeInvalidRecord(String visualThemeId, String resourceTypeEnumId);
    @DefaultMessage("No Screenshots")
    String commonVisualThemeNoScreenshots();
    @DefaultMessage("Visual Theme resources not found.")
    String commonVisualThemeResourcesNotFound();
    @DefaultMessage("Selected Visual Theme")
    String commonVisualThemeSelected();
    @DefaultMessage("Visual Themes")
    String commonVisualThemes();
    @DefaultMessage("Volum")
    String commonVolume();
    @DefaultMessage("Website")
    String commonWebsite();
    @DefaultMessage("Wednesday")
    String commonWednesday();
    @DefaultMessage("Week")
    String commonWeek();
    @DefaultMessage("Weekly")
    String commonWeekly();
    @DefaultMessage("Weight")
    String commonWeight();
    @DefaultMessage("Welcome")
    String commonWelcome();
    @DefaultMessage("Welcome to the OFBiz dashboard")
    String commonWelcomeToTheOFBizDashboard();
    @DefaultMessage("Where")
    String commonWhere();
    @DefaultMessage("Width")
    String commonWidth();
    @DefaultMessage("Workflow Activities Assigned to User")
    String commonWorkflowActivityUser();
    @DefaultMessage("Workflow Activities Assigned to User Role")
    String commonWorkflowActivityUserRole();
    @DefaultMessage("Y")
    String commonY();
    @DefaultMessage("Year")
    String commonYear();
    @DefaultMessage("Yearly")
    String commonYearly();
    @DefaultMessage("Yes")
    String commonYes();
    @DefaultMessage("Your email")
    String commonYouremail();
    @DefaultMessage("Zip/Postal Code")
    String commonZipPostalCode();
    @DefaultMessage("Company Name")
    String companyName();
    @DefaultMessage("Contact Id")
    String contactId();
    @DefaultMessage("Contact List")
    String contactList();
    @DefaultMessage("Content")
    String content();
    @DefaultMessage("Actual Labor Cost")
    String costComponentType_description_ACTUAL_LABOR_COST();
    @DefaultMessage("Actual Materials Cost")
    String costComponentType_description_ACTUAL_MAT_COST();
    @DefaultMessage("Actual Other Cost")
    String costComponentType_description_ACTUAL_OTHER_COST();
    @DefaultMessage("Actual Route (fixed asset usage) Cost")
    String costComponentType_description_ACTUAL_ROUTE_COST();
    @DefaultMessage("Estimated Labor Cost")
    String costComponentType_description_ESTIMATED_LABOR_COST();
    @DefaultMessage("Estimated Materials")
    String costComponentType_description_ESTIMATED_MATERIALS_();
    @DefaultMessage("Estimated Other Cost")
    String costComponentType_description_ESTIMATED_OTHER_COST();
    @DefaultMessage("Estimated Standard Labor Cost")
    String costComponentType_description_EST_STD_LABOR_COST();
    @DefaultMessage("Estimated Standard Materials Cost")
    String costComponentType_description_EST_STD_MAT_COST();
    @DefaultMessage("Estimated Standard Other Cost")
    String costComponentType_description_EST_STD_OTHER_COST();
    @DefaultMessage("Estimated Standard Route (fixed asset usage) Cost")
    String costComponentType_description_EST_STD_ROUTE_COST();
    @DefaultMessage("Labor Cost")
    String costComponentType_description_LABOR_COST();
    @DefaultMessage("Materials Cost")
    String costComponentType_description_MAT_COST();
    @DefaultMessage("Other Cost")
    String costComponentType_description_OTHER_COST();
    @DefaultMessage("Route (fixed asset usage) Cost")
    String costComponentType_description_ROUTE_COST();
    @DefaultMessage("Country")
    String country();
    @DefaultMessage("Create Account")
    String createAccount();
    @DefaultMessage("Create Contact")
    String createContact();
    @DefaultMessage("Create Lead")
    String createLead();
    @DefaultMessage("Account")
    String crmAccount();
    @DefaultMessage("This account was deactivated as of")
    String crmAccountDeactivated();
    @DefaultMessage("Account ID")
    String crmAccountId();
    @DefaultMessage("Account Name")
    String crmAccountName();
    @DefaultMessage("Account or Lead Name")
    String crmAccountOrLead();
    @DefaultMessage("Account Or Lead")
    String crmAccountOrLeadParty();
    @DefaultMessage("Account Shortcuts")
    String crmAccountShortcuts();
    @DefaultMessage("Accounts")
    String crmAccounts();
    @DefaultMessage("Duplicates found")
    String crmAccountsWithDuplicateName();
    @DefaultMessage("Activities")
    String crmActivities();
    @DefaultMessage("All Assigned to Me")
    String crmActivitiesAllAssigned();
    @DefaultMessage("Activities by Team Member")
    String crmActivitiesByTeamMember();
    @DefaultMessage("Owned by Me Only")
    String crmActivitiesOwnedByMe();
    @DefaultMessage("Pending Emails")
    String crmActivitiesPendingEmails();
    @DefaultMessage("Pending Inbound Emails")
    String crmActivitiesPendingInboundEmails();
    @DefaultMessage("Pending Outbound Emails")
    String crmActivitiesPendingOutboundEmails();
    @DefaultMessage("Activity")
    String crmActivity();
    @DefaultMessage("Completion Date")
    String crmActivityActualCompletionDate();
    @DefaultMessage("Started Date")
    String crmActivityActualStartDate();
    @DefaultMessage("Cancelled")
    String crmActivityCancelled();
    @DefaultMessage("Completed")
    String crmActivityCompleted();
    @DefaultMessage("Due Date")
    String crmActivityDueDate();
    @DefaultMessage("Activity Links")
    String crmActivityLinks();
    @DefaultMessage("Activity Name")
    String crmActivityName();
    @DefaultMessage("On Hold")
    String crmActivityOnHold();
    @DefaultMessage("Participants")
    String crmActivityParticipants();
    @DefaultMessage("Scheduled")
    String crmActivityScheduled();
    @DefaultMessage("Scheduled Date")
    String crmActivityScheduledDate();
    @DefaultMessage("Security")
    String crmActivitySecurityScope();
    @DefaultMessage("Start Date")
    String crmActivityStartDate();
    @DefaultMessage("Started")
    String crmActivityStarted();
    @DefaultMessage("Add List")
    String crmAddContactList();
    @DefaultMessage("Add List Members")
    String crmAddContactListParties();
    @DefaultMessage("Add Item")
    String crmAddItem();
    @DefaultMessage("Add Items")
    String crmAddItems();
    @DefaultMessage("Add Option")
    String crmAddOption();
    @DefaultMessage("Add Quote")
    String crmAddQuote();
    @DefaultMessage("Add Quote Option")
    String crmAddQuoteItemOption();
    @DefaultMessage("Add Selected")
    String crmAddSelected();
    @DefaultMessage("Bookmark URL")
    String crmAddUrl();
    @DefaultMessage("Address")
    String crmAddress();
    @DefaultMessage("Address Not Known Yet")
    String crmAddressUnknown();
    @DefaultMessage("Amount already credited")
    String crmAmountAlreadyCredited();
    @DefaultMessage("Amount already refunded")
    String crmAmountAlreadyRefunded();
    @DefaultMessage("Annual Revenue")
    String crmAnnualRevenue();
    @DefaultMessage("Approved orders only")
    String crmApprovedOrdersOnly();
    @DefaultMessage("Assign")
    String crmAssign();
    @DefaultMessage("Assign Account")
    String crmAssignAccount();
    @DefaultMessage("Assign Contact")
    String crmAssignContact();
    @DefaultMessage("Assign Team")
    String crmAssignTeam();
    @DefaultMessage("Availability")
    String crmAvailability();
    @DefaultMessage("Available to Add")
    String crmAvailableToAdd();
    @DefaultMessage("Billable Lifetime")
    String crmBillableLifetime();
    @DefaultMessage("Used to set the lifetime of a cookie by the ecommerce application, in seconds")
    String crmBillableLifetimeTip();
    @DefaultMessage("Calculate 3605-R Postage")
    String crmCalculate3605Postage();
    @DefaultMessage("Cancel Order")
    String crmCancelOrder();
    @DefaultMessage("Case")
    String crmCase();
    @DefaultMessage("Case Closed")
    String crmCaseClosed();
    @DefaultMessage("Case History")
    String crmCaseHistory();
    @DefaultMessage("Case Id")
    String crmCaseId();
    @DefaultMessage("Cases")
    String crmCases();
    @DefaultMessage("Add all Domestic Catalog Requests")
    String crmCatalogRequestAddDomestic();
    @DefaultMessage("Add all Foreign Catalog Requests")
    String crmCatalogRequestAddForeign();
    @DefaultMessage("Catalog Requests")
    String crmCatalogRequests();
    @DefaultMessage("Change Availability")
    String crmChangeAvailability();
    @DefaultMessage("Change Note")
    String crmChangeNote();
    @DefaultMessage("Change Password")
    String crmChangePassword();
    @DefaultMessage("Choose a Variant")
    String crmChooseVariantProduct();
    @DefaultMessage("Clear Items")
    String crmClearItems();
    @DefaultMessage("Clients")
    String crmClients();
    @DefaultMessage("Close Case")
    String crmCloseCase();
    @DefaultMessage("Commission Rep")
    String crmCommissionRep();
    @DefaultMessage("Company Name")
    String crmCompanyName();
    @DefaultMessage("Activities History")
    String crmCompletedActivities();
    @DefaultMessage("Completed Activities")
    String crmCompletedActivitiesList();
    @DefaultMessage("Configure Product")
    String crmConfigureProduct();
    @DefaultMessage("Confirm Merge")
    String crmConfirmMerge();
    @DefaultMessage("Confirm Merge Accounts")
    String crmConfirmMergeAccounts();
    @DefaultMessage("Confirm Merge Contacts")
    String crmConfirmMergeContacts();
    @DefaultMessage("Confirm Merge Leads")
    String crmConfirmMergeLeads();
    @DefaultMessage("Contact")
    String crmContact();
    @DefaultMessage("This contact was deactivated as of")
    String crmContactDeactivated();
    @DefaultMessage("Contact Form")
    String crmContactForm();
    @DefaultMessage("Contact Forms")
    String crmContactForms();
    @DefaultMessage("Contact ID")
    String crmContactId();
    @DefaultMessage("Contact List")
    String crmContactList();
    @DefaultMessage("List Members")
    String crmContactListParties();
    @DefaultMessage("Contact Lists")
    String crmContactLists();
    @DefaultMessage("Contact Name")
    String crmContactName();
    @DefaultMessage("Contact Shortcuts")
    String crmContactShortcuts();
    @DefaultMessage("Contact Type")
    String crmContactType();
    @DefaultMessage("Contacts")
    String crmContacts();
    @DefaultMessage("Contains product ID")
    String crmContainsProductId();
    @DefaultMessage("Bookmarks and Files")
    String crmContentList();
    @DefaultMessage("Convert Lead")
    String crmConvertLead();
    @DefaultMessage("Create Account")
    String crmCreateAccount();
    @DefaultMessage("CrmCreateAccountDuplicateCheckFail")
    String crmCreateAccountDuplicateCheckFail(String partyId);
    @DefaultMessage("Create Account Ignoring Duplicates")
    String crmCreateAccountIgnoreDuplicate();
    @DefaultMessage("Create Address")
    String crmCreateAddress();
    @DefaultMessage("Create Case")
    String crmCreateCase();
    @DefaultMessage("Request Catalog")
    String crmCreateCatalogRequest();
    @DefaultMessage("Create Contact")
    String crmCreateContact();
    @DefaultMessage("Create Contact List")
    String crmCreateContactList();
    @DefaultMessage("Create Customer for Order")
    String crmCreateCustomerForOrder();
    @DefaultMessage("Create Email")
    String crmCreateEmail();
    @DefaultMessage("Create Event")
    String crmCreateEvent();
    @DefaultMessage("Create Forecast")
    String crmCreateForecast();
    @DefaultMessage("Create Lead")
    String crmCreateLead();
    @DefaultMessage("Create Campaign")
    String crmCreateMarketingCampaign();
    @DefaultMessage("Create New")
    String crmCreateNew();
    @DefaultMessage("Create New Customer")
    String crmCreateNewCustomer();
    @DefaultMessage("New Event")
    String crmCreateNewEvent();
    @DefaultMessage("New Task")
    String crmCreateNewTask();
    @DefaultMessage("New Template")
    String crmCreateNewTemplate();
    @DefaultMessage("New Category")
    String crmCreateNewTemplateCategory();
    @DefaultMessage("Create Note")
    String crmCreateNote();
    @DefaultMessage("Create Opportunity")
    String crmCreateOpportunity();
    @DefaultMessage("Create Order")
    String crmCreateOrder();
    @DefaultMessage("Create Order for New Customer")
    String crmCreateOrderForNewCustomer();
    @DefaultMessage("Resume Order")
    String crmCreateOrderResume();
    @DefaultMessage("Create Phone Number")
    String crmCreatePhoneNumber();
    @DefaultMessage("Create Quote")
    String crmCreateQuote();
    @DefaultMessage("Create Return")
    String crmCreateReturn();
    @DefaultMessage("Create Task")
    String crmCreateTask();
    @DefaultMessage("Create Team")
    String crmCreateTeam();
    @DefaultMessage("Create Tracking Code")
    String crmCreateTrackingCode();
    @DefaultMessage("Create Web URL")
    String crmCreateWebUrl();
    @DefaultMessage("Field")
    String crmCustomFieldName();
    @DefaultMessage("Value")
    String crmCustomFieldValue();
    @DefaultMessage("Custom Fields")
    String crmCustomFields();
    @DefaultMessage("Customer")
    String crmCustomer();
    @DefaultMessage("Customer Details")
    String crmCustomerDetails();
    @DefaultMessage("Dashboard")
    String crmDashboard();
    @DefaultMessage("Source")
    String crmDataSource();
    @DefaultMessage("Sources")
    String crmDataSources();
    @DefaultMessage("After")
    String crmDateAfter();
    @DefaultMessage("Before")
    String crmDateBefore();
    @DefaultMessage("Deactivate Account")
    String crmDeactivateAccount();
    @DefaultMessage("Deactivate Contact")
    String crmDeactivateContact();
    @DefaultMessage("Deactivate Team")
    String crmDeactivateTeam();
    @DefaultMessage("Delete Email")
    String crmDeleteEmail();
    @DefaultMessage("Department")
    String crmDepartment();
    @DefaultMessage("Destination")
    String crmDestination();
    @DefaultMessage("Drop-Shipped From")
    String crmDropShippedFrom();
    @DefaultMessage("Duplicate Lead")
    String crmDuplicateLead();
    @DefaultMessage("Duration")
    String crmDuration();
    @DefaultMessage("CrmEditContactMechWithPurpose")
    String crmEditContactMechWithPurpose(String contactMechPurposeTypeDescription);
    @DefaultMessage("Edit Order")
    String crmEditOrder();
    @DefaultMessage("Edit Selected Address")
    String crmEditSelectedAddress();
    @DefaultMessage("Add Another Attachment")
    String crmEmailAttachmentAdd();
    @DefaultMessage("Remove Attachment")
    String crmEmailAttachmentRemove();
    @DefaultMessage("Attachments")
    String crmEmailAttachments();
    @DefaultMessage("BCC")
    String crmEmailBCC();
    @DefaultMessage("CC")
    String crmEmailCC();
    @DefaultMessage("This email has been deleted")
    String crmEmailDeleted();
    @DefaultMessage("Fwd:")
    String crmEmailFwd();
    @DefaultMessage("Email for")
    String crmEmailParty();
    @DefaultMessage("CrmEmailQuotedHeader")
    String crmEmailQuotedHeader(String lineSeparator, String fromEmail, String wroteLabel);
    @DefaultMessage("&gt;&nbsp;")
    String crmEmailQuotedLinePrefix();
    @DefaultMessage("Re:")
    String crmEmailRe();
    @DefaultMessage("End Date and Time")
    String crmEndDateAndTime();
    @DefaultMessage("Error")
    String crmError();
    @DefaultMessage("CrmErrorActivityNotFound")
    String crmErrorActivityNotFound(String workEffortId);
    @DefaultMessage("An activity must have either an estimated completion date or duration")
    String crmErrorActivityRequiresEstCompletionOrDuration();
    @DefaultMessage("Could not add contact to opportunity:")
    String crmErrorAddContactToOpportunity();
    @DefaultMessage("Failed to add marketing campaign:")
    String crmErrorAddMarketingCampaign();
    @DefaultMessage("Failed to add catalog requests to contact list:")
    String crmErrorAddNewCatalogRequests();
    @DefaultMessage("Failed to add quote:")
    String crmErrorAddQuoteFail();
    @DefaultMessage("That person is already a member of the team.")
    String crmErrorAlreadyMember();
    @DefaultMessage("Failed to assign contact to account:")
    String crmErrorAssignContactToAccountFail();
    @DefaultMessage("Failed to assign relationship:")
    String crmErrorAssignFail();
    @DefaultMessage("Failed automatic merge of party merge candidates:")
    String crmErrorAutoMergePartiesFail();
    @DefaultMessage("Cannot process request.  Auto Request Taker party not defined.")
    String crmErrorAutoReqTakerMissing();
    @DefaultMessage("CrmErrorCaseNotFound")
    String crmErrorCaseNotFound(String custRequestId);
    @DefaultMessage("Error completing catalog mailing")
    String crmErrorCompleteCatalogMailing();
    @DefaultMessage("Failed to compute forecast:")
    String crmErrorComputeForecastFail();
    @DefaultMessage("This contact is already associated with the account")
    String crmErrorContactAlreadyAssociatedToAccount();
    @DefaultMessage("CrmErrorContactListAlreadyAssociatedToMarketingCampaign")
    String crmErrorContactListAlreadyAssociatedToMarketingCampaign(String contactListId);
    @DefaultMessage("CrmErrorContactListNotAddress")
    String crmErrorContactListNotAddress(String contactListName, String contactListId);
    @DefaultMessage("CrmErrorContactListNotFound")
    String crmErrorContactListNotFound(String contactListId);
    @DefaultMessage("CrmErrorContactListNotMarketing")
    String crmErrorContactListNotMarketing(String contactListName, String contactListId);
    @DefaultMessage("CrmErrorContentNotFound")
    String crmErrorContentNotFound(String contentId);
    @DefaultMessage("Failed to convert lead:")
    String crmErrorConvertLeadFail();
    @DefaultMessage("Failed to create account:")
    String crmErrorCreateAccountFail();
    @DefaultMessage("Failed to create activity:")
    String crmErrorCreateActivityFail();
    @DefaultMessage("Unable to create basic contact info:")
    String crmErrorCreateBasicContactInfoFail();
    @DefaultMessage("Failed to create case:")
    String crmErrorCreateCaseFail();
    @DefaultMessage("Must specify an account or contact for the case.")
    String crmErrorCreateCaseFailNoAcctCont();
    @DefaultMessage("Failed to create contact:")
    String crmErrorCreateContactFail();
    @DefaultMessage("Failed to create content:")
    String crmErrorCreateContentFail();
    @DefaultMessage("Failed to create lead:")
    String crmErrorCreateLeadFail();
    @DefaultMessage("Failed to create request:")
    String crmErrorCreateLeadSurveyResponseFail();
    @DefaultMessage("Failed to create opportunity:")
    String crmErrorCreateOpportunityFail();
    @DefaultMessage("Failed to create customer:  Please enter the customer name or company name.")
    String crmErrorCreateOrderPartyRequiredFields();
    @DefaultMessage("Failed to delete lead:")
    String crmErrorDeleteLeadFail();
    @DefaultMessage("Please enter a product ID")
    String crmErrorEnterProductId();
    @DefaultMessage("Failed to find activities:")
    String crmErrorFindActivitiesFail();
    @DefaultMessage("Failed to find party merge candidates:")
    String crmErrorFindPartiesForMergeFail();
    @DefaultMessage("There was an internal error while processing your request.  Please contact a System Administrator for assistance.")
    String crmErrorInternal();
    @DefaultMessage("CrmErrorInvalidForecast")
    String crmErrorInvalidForecast(String salesForecastId);
    @DefaultMessage("CrmErrorLeadNotFound")
    String crmErrorLeadNotFound(String leadPartyId);
    @DefaultMessage("CrmErrorLeadNotQualified")
    String crmErrorLeadNotQualified(String leadPartyId);
    @DefaultMessage("Failed to log task:")
    String crmErrorLogTaskFail();
    @DefaultMessage("CrmErrorMarketingCampaignContactListNotFound")
    String crmErrorMarketingCampaignContactListNotFound(String campaignListId);
    @DefaultMessage("CrmErrorMarketingCampaignNotFound")
    String crmErrorMarketingCampaignNotFound(String marketingCampaignId);
    @DefaultMessage("CrmErrorModifyCart")
    String crmErrorModifyCart(String productId, String message);
    @DefaultMessage("New Password is required")
    String crmErrorNewPasswordRequired();
    @DefaultMessage("No parameters for finding activities specified")
    String crmErrorNoParameterForFindActivities();
    @DefaultMessage("CrmErrorOrderNotFound")
    String crmErrorOrderNotFound(String orderId);
    @DefaultMessage("This customer is currently not allowed to place additional orders in this store.")
    String crmErrorPartyCannotOrder();
    @DefaultMessage("CrmErrorPartyNotAccountOrTeam")
    String crmErrorPartyNotAccountOrTeam(String partyId);
    @DefaultMessage("CrmErrorPartyNotCrmUser")
    String crmErrorPartyNotCrmUser(String partyId);
    @DefaultMessage("CrmErrorPartyNotFound")
    String crmErrorPartyNotFound(String partyId);
    @DefaultMessage("This Party doesn''t exist or is not an Account.")
    String crmErrorPartyNotFoundOrNotAccount();
    @DefaultMessage("You do not have permission to update the password for this user login")
    String crmErrorPasswordUpdatePermission();
    @DefaultMessage("CrmErrorPermissionActivitySecurityScopeChangeDenied")
    String crmErrorPermissionActivitySecurityScopeChangeDenied(String workEffortId, String scopeEnumId);
    @DefaultMessage("Sorry, you do not have permission to perform this action.")
    String crmErrorPermissionDenied();
    @DefaultMessage("CrmErrorPermissionNotAllowedToAddPartyToActivity")
    String crmErrorPermissionNotAllowedToAddPartyToActivity(String partyId, String workEffortId);
    @DefaultMessage("CrmErrorPermissionNotAllowedToRemovePartyFromActivity")
    String crmErrorPermissionNotAllowedToRemovePartyFromActivity(String partyId, String workEffortId);
    @DefaultMessage("CrmErrorPermissionNotAllowedToUpdatePartyAssignedToActivity")
    String crmErrorPermissionNotAllowedToUpdatePartyAssignedToActivity(String partyId, String workEffortId);
    @DefaultMessage("Sorry, you do not have permission to get invoice PDF.")
    String crmErrorPermissionPrintInvoice();
    @DefaultMessage("CrmErrorPermissionToCreateActivityWithThisSecurityScopeDenied")
    String crmErrorPermissionToCreateActivityWithThisSecurityScopeDenied(String scopeEnumId);
    @DefaultMessage("Failed to process incoming email:")
    String crmErrorProcessIncomingEmailFail();
    @DefaultMessage("Failed to process incoming email: No valid FROM/TO/CC email addresses found")
    String crmErrorProcessIncomingEmailFailNoAddresses();
    @DefaultMessage("CrmErrorProductNotFound")
    String crmErrorProductNotFound(String productId);
    @DefaultMessage("CrmErrorPropertyNotConfigured")
    String crmErrorPropertyNotConfigured(String propertyName, String fileName);
    @DefaultMessage("CrmErrorQuickCreateOrderIllegalAccount")
    String crmErrorQuickCreateOrderIllegalAccount(String accountPartyId);
    @DefaultMessage("CrmErrorQuickCreateOrderIllegalDate")
    String crmErrorQuickCreateOrderIllegalDate(String shipBeforeDate);
    @DefaultMessage("Order Name is required.")
    String crmErrorQuickCreateOrderMissingName();
    @DefaultMessage("CrmErrorQuoteNotFound")
    String crmErrorQuoteNotFound(String quoteId);
    @DefaultMessage("Failed to reassign relationship:")
    String crmErrorReassignFail();
    @DefaultMessage("Could not remove contact from opportunity:")
    String crmErrorRemoveContactFromOpportunity();
    @DefaultMessage("Failed to remove marketing campaign:")
    String crmErrorRemoveMarketingCampaign();
    @DefaultMessage("Failed to remove quote:")
    String crmErrorRemoveQuoteFail();
    @DefaultMessage("Failed to save email:")
    String crmErrorSaveEmailFail();
    @DefaultMessage("Service crmsfa.sendCrmNotificationEmails failed")
    String crmErrorSendCrmNotificationEmailsFail();
    @DefaultMessage("Failed to save or send email due to missing attachment contentType or fileName")
    String crmErrorSendEmailMissingFileUploadData();
    @DefaultMessage("Failed to send email:")
    String crmErrorSendEmailToFail();
    @DefaultMessage("Failed to send email to marketing campaign:")
    String crmErrorSendEmailToMarketingCampaignFail();
    @DefaultMessage("CrmErrorSendEmailUnableToGetDataResource")
    String crmErrorSendEmailUnableToGetDataResource(String dataResourceId);
    @DefaultMessage("CrmErrorTrackingCodeAlreadyUsed")
    String crmErrorTrackingCodeAlreadyUsed(String trackingCode);
    @DefaultMessage("CrmErrorUSPSNotEnoughMembers")
    String crmErrorUSPSNotEnoughMembers(String contactListName, String contactListId);
    @DefaultMessage("Failed to update account:")
    String crmErrorUpdateAccountFail();
    @DefaultMessage("Failed to update Communication Event of this Activity")
    String crmErrorUpdateActivityCommEventFail();
    @DefaultMessage("Failed to update activity:")
    String crmErrorUpdateActivityFail();
    @DefaultMessage("Failed to update contact:")
    String crmErrorUpdateContactFail();
    @DefaultMessage("Failed to update content:")
    String crmErrorUpdateContentFail();
    @DefaultMessage("Failed to update lead:")
    String crmErrorUpdateLeadFail();
    @DefaultMessage("Failed to update opportunity:")
    String crmErrorUpdateOpportunityFail();
    @DefaultMessage("CrmErrorVoIPErrorDNISFromFacetPhone")
    String crmErrorVoIPErrorDNISFromFacetPhone(String latestCallData);
    @DefaultMessage("Error retrieving latest call data from FacetPhone server in retrieveLatestCallFromFacetPhoneServer service")
    String crmErrorVoIPErrorLatestCallFromFacetPhone();
    @DefaultMessage("CrmErrorVoIPErrorNoCurrentCall")
    String crmErrorVoIPErrorNoCurrentCall(String userLoginId);
    @DefaultMessage("CrmErrorVoIPErrorNoDNISMatchTrackingCode")
    String crmErrorVoIPErrorNoDNISMatchTrackingCode(String dnis, String latestCallData);
    @DefaultMessage("CrmErrorVoIPErrorNoNumberForCurrentCall")
    String crmErrorVoIPErrorNoNumberForCurrentCall(String userLoginId);
    @DefaultMessage("CrmErrorVoIPErrorNumberFromFacetPhone")
    String crmErrorVoIPErrorNumberFromFacetPhone(String latestCallData);
    @DefaultMessage("Error retrieving response from FacetPhone server in retrieveLatestCallFromFacetPhoneServer service")
    String crmErrorVoIPErrorResponseFromFacetPhone();
    @DefaultMessage("Unable to connect to FacetPhone server")
    String crmErrorVoIPUnableToConnectToFacetPhone();
    @DefaultMessage("Unable to find Order while sending confirmation email")
    String crmError_ConfirmationEmailWithoutOrder();
    @DefaultMessage("Unable to find productStore for Order while sending confirmation email")
    String crmError_ConfirmationOrderWithoutProductStore();
    @DefaultMessage("CrmError_ExistingSameCustomFieldAlready")
    String crmError_ExistingSameCustomFieldAlready(String attrName, String partyId);
    @DefaultMessage("CVV must be 3 or 4 digits.")
    String crmError_InvalidCVV();
    @DefaultMessage("CrmError_InvalidPartyRoleOnCustomFields")
    String crmError_InvalidPartyRoleOnCustomFields(String partyId);
    @DefaultMessage("Please enter information in all the required address fields")
    String crmError_MissingAddressFields();
    @DefaultMessage("Billing address line 1 is required.")
    String crmError_MissingBillingAddress1();
    @DefaultMessage("Billing address city is required.")
    String crmError_MissingBillingCity();
    @DefaultMessage("Billing address country is required.")
    String crmError_MissingBillingCountry();
    @DefaultMessage("Billing address zip code is required.")
    String crmError_MissingBillingPostalCode();
    @DefaultMessage("Billing address state is required.")
    String crmError_MissingBillingState();
    @DefaultMessage("Billing address To Name is required.")
    String crmError_MissingBillingToName();
    @DefaultMessage("First name required for new Credit Card.")
    String crmError_MissingCCFirstName();
    @DefaultMessage("Last name required for new Credit Card.")
    String crmError_MissingCCLastName();
    @DefaultMessage("Card type is required.")
    String crmError_MissingCardType();
    @DefaultMessage("CrmError_MissingClientRole")
    String crmError_MissingClientRole(String partyId);
    @DefaultMessage("Credit card expiration month is required.")
    String crmError_MissingExpMonth();
    @DefaultMessage("Crdit card expiration year is required.")
    String crmError_MissingExpYear();
    @DefaultMessage("First name is required.")
    String crmError_MissingFirstName();
    @DefaultMessage("Last name is required.")
    String crmError_MissingLastName();
    @DefaultMessage("Either a company name or a first and last name are required.")
    String crmError_MissingNames();
    @DefaultMessage("CrmError_MissingOrderPaymentPreference")
    String crmError_MissingOrderPaymentPreference(String orderId);
    @DefaultMessage("Shipping address line 1 is required.")
    String crmError_MissingShippingAddress1();
    @DefaultMessage("Shipping address city is required.")
    String crmError_MissingShippingCity();
    @DefaultMessage("Shipping address country is required.")
    String crmError_MissingShippingCountry();
    @DefaultMessage("Shipping address zip code is required.")
    String crmError_MissingShippingPostalCode();
    @DefaultMessage("Shipping address state is required.")
    String crmError_MissingShippingState();
    @DefaultMessage("Shipping address To Name is required.")
    String crmError_MissingShippingToName();
    @DefaultMessage("CrmError_NoRoleForCreateParty")
    String crmError_NoRoleForCreateParty(String userPartyName, String requiredRoleTypes);
    @DefaultMessage("CrmError_NotExistingTheCustomField")
    String crmError_NotExistingTheCustomField(String attrName, String partyId);
    @DefaultMessage("CrmError_OrderHasNoValue")
    String crmError_OrderHasNoValue(String orderId);
    @DefaultMessage("CrmError_OrderItemRequiresSurveyInBulkAdd")
    String crmError_OrderItemRequiresSurveyInBulkAdd(String productId);
    @DefaultMessage("Est Closed")
    String crmEstClosed();
    @DefaultMessage("Esitmated Amount")
    String crmEstimatedAmount();
    @DefaultMessage("Estimated Close Date")
    String crmEstimatedCloseDate();
    @DefaultMessage("Estimated Probability")
    String crmEstimatedProbability();
    @DefaultMessage("Event")
    String crmEvent();
    @DefaultMessage("Exempt")
    String crmExempt();
    @DefaultMessage("External Party")
    String crmExternalParty();
    @DefaultMessage("Finalize Order")
    String crmFinalizeOrder();
    @DefaultMessage("Find Accounts")
    String crmFindAccounts();
    @DefaultMessage("Find Activities")
    String crmFindActivities();
    @DefaultMessage("Find Cases")
    String crmFindCases();
    @DefaultMessage("Find Clients")
    String crmFindClients();
    @DefaultMessage("Find List Members")
    String crmFindContactListParties();
    @DefaultMessage("Find Contact Lists")
    String crmFindContactLists();
    @DefaultMessage("Find Contacts")
    String crmFindContacts();
    @DefaultMessage("Find Forecasts")
    String crmFindForecasts();
    @DefaultMessage("Find Internal Parties")
    String crmFindInternalParties();
    @DefaultMessage("Find Leads")
    String crmFindLeads();
    @DefaultMessage("Find Campaigns")
    String crmFindMarketingCampaigns();
    @DefaultMessage("Find Opportunities")
    String crmFindOpportunities();
    @DefaultMessage("Find Orders")
    String crmFindOrders();
    @DefaultMessage("Find Available")
    String crmFindPartyContactInfo();
    @DefaultMessage("Find Product")
    String crmFindProduct();
    @DefaultMessage("Find Quotes")
    String crmFindQuotes();
    @DefaultMessage("Find Returns")
    String crmFindReturns();
    @DefaultMessage("Find Shopping List")
    String crmFindShoppingList();
    @DefaultMessage("Find Team Members")
    String crmFindTeamMembers();
    @DefaultMessage("Find Teams")
    String crmFindTeams();
    @DefaultMessage("Finish")
    String crmFinish();
    @DefaultMessage("Finish Time")
    String crmFinishTime();
    @DefaultMessage("First Name (Local)")
    String crmFirstNameLocal();
    @DefaultMessage("Ignore Scheduling Conflicts")
    String crmForceIfConflicts();
    @DefaultMessage("Forecast")
    String crmForecast();
    @DefaultMessage("Best Case Amount")
    String crmForecastBestCaseAmount();
    @DefaultMessage("Forecast Change History")
    String crmForecastChangeHistory();
    @DefaultMessage("Automatically changed with change to opportunity")
    String crmForecastChangeNotePrefix();
    @DefaultMessage("Forecast Time Period is now Past or Closed")
    String crmForecastClosed();
    @DefaultMessage("Closed Amount")
    String crmForecastClosedAmount();
    @DefaultMessage("Enter Quotas")
    String crmForecastEnterQuotas();
    @DefaultMessage("Enter Quotas For")
    String crmForecastEnterQuotasFor();
    @DefaultMessage("Forecast Amount")
    String crmForecastForecastAmount();
    @DefaultMessage("% Quota Closed")
    String crmForecastPercentOfQuotaClosed();
    @DefaultMessage("% Quota Forecast")
    String crmForecastPercentOfQuotaForecast();
    @DefaultMessage("My Forecasts by Quarter")
    String crmForecastQuarters();
    @DefaultMessage("Quota Amount")
    String crmForecastQuotaAmount();
    @DefaultMessage("Sub-Periods")
    String crmForecastSubPeriods();
    @DefaultMessage("Forecast Totals")
    String crmForecastTotals();
    @DefaultMessage("Update Quota")
    String crmForecastUpdateQuota();
    @DefaultMessage("Forecasts")
    String crmForecasts();
    @DefaultMessage("Form Letter Template")
    String crmFormLetterTemplate();
    @DefaultMessage("Form Letter Template Category")
    String crmFormLetterTemplateCategorie();
    @DefaultMessage("Form Letter Template Categories")
    String crmFormLetterTemplateCategories();
    @DefaultMessage("Private Form")
    String crmFormLetterTemplatePrivate();
    @DefaultMessage("Form Letter Templates")
    String crmFormLetterTemplates();
    @DefaultMessage("Form Letters")
    String crmFormLetters();
    @DefaultMessage("Primary Address Attention Name")
    String crmFormTagAttnTo();
    @DefaultMessage("Primary Address City")
    String crmFormTagCity();
    @DefaultMessage("Primary Address Country")
    String crmFormTagCountry();
    @DefaultMessage("Current Date (mm/dd/yyyy)")
    String crmFormTagDate1();
    @DefaultMessage("Current Date (mm-dd-yyyy)")
    String crmFormTagDate2();
    @DefaultMessage("Current Date (yyyy/mm/dd)")
    String crmFormTagDate3();
    @DefaultMessage("Current Date (yyyy-mm-dd)")
    String crmFormTagDate4();
    @DefaultMessage("Current day (Number)")
    String crmFormTagDayNum();
    @DefaultMessage("External Order ID")
    String crmFormTagExternalOrderId();
    @DefaultMessage("Primary Address Line 1")
    String crmFormTagLine1();
    @DefaultMessage("Primary Address Line 2")
    String crmFormTagLine2();
    @DefaultMessage("Current Month (Name)")
    String crmFormTagMonthName();
    @DefaultMessage("Current Month (Number)")
    String crmFormTagMonthNum();
    @DefaultMessage("Order Billing First Name")
    String crmFormTagOrderBillFirstName();
    @DefaultMessage("Order Billing Full Name")
    String crmFormTagOrderBillFullName();
    @DefaultMessage("Order Billing Last Name")
    String crmFormTagOrderBillLastName();
    @DefaultMessage("Order Date")
    String crmFormTagOrderDate();
    @DefaultMessage("Order Grand Total")
    String crmFormTagOrderGrandTotal();
    @DefaultMessage("Order ID")
    String crmFormTagOrderId();
    @DefaultMessage("Order Item: Internal Name")
    String crmFormTagOrderItemIntName();
    @DefaultMessage("Order Item: Name")
    String crmFormTagOrderItemName();
    @DefaultMessage("Order Item: Product ID")
    String crmFormTagOrderItemProdId();
    @DefaultMessage("Order Item: Quantity")
    String crmFormTagOrderItemQty();
    @DefaultMessage("Order Items List")
    String crmFormTagOrderItemsList();
    @DefaultMessage("Order Party ID")
    String crmFormTagOrderPartyId();
    @DefaultMessage("Order Payment Total")
    String crmFormTagOrderPaymentTotal();
    @DefaultMessage("Order Shipping Address Line 1")
    String crmFormTagOrderShipAddress1();
    @DefaultMessage("Order Shipping Address Line 2")
    String crmFormTagOrderShipAddress2();
    @DefaultMessage("Order Shipping City")
    String crmFormTagOrderShipCity();
    @DefaultMessage("Order Shiping Company Name")
    String crmFormTagOrderShipCompanyName();
    @DefaultMessage("Order Shipping Country")
    String crmFormTagOrderShipCountry();
    @DefaultMessage("Order Shipping First Name")
    String crmFormTagOrderShipFirstName();
    @DefaultMessage("Order Shipping Full Name")
    String crmFormTagOrderShipFullName();
    @DefaultMessage("Order Shipping Last Name")
    String crmFormTagOrderShipLastName();
    @DefaultMessage("Order Shipping Phone")
    String crmFormTagOrderShipPhone();
    @DefaultMessage("Order Shipping Postal Code")
    String crmFormTagOrderShipPostalCode();
    @DefaultMessage("Order Shipping State/Province")
    String crmFormTagOrderShipStateProv();
    @DefaultMessage("Order Shipping Total")
    String crmFormTagOrderShipTotal();
    @DefaultMessage("Order Subtotal")
    String crmFormTagOrderSubtotal();
    @DefaultMessage("Order Tax Total")
    String crmFormTagOrderTaxTotal();
    @DefaultMessage("Primary Address Postal Code")
    String crmFormTagPostalCode();
    @DefaultMessage("Shipment Status")
    String crmFormTagShipmentStatus();
    @DefaultMessage("Primary Address State")
    String crmFormTagState();
    @DefaultMessage("Primary Address To Name")
    String crmFormTagTo();
    @DefaultMessage("Current Year (Number)")
    String crmFormTagYearNum();
    @DefaultMessage("From Account")
    String crmFromAccount();
    @DefaultMessage("From Contact")
    String crmFromContact();
    @DefaultMessage("From Lead")
    String crmFromLead();
    @DefaultMessage("Fulfilled")
    String crmFulfilled();
    @DefaultMessage("HTML")
    String crmHTML();
    @DefaultMessage("Important Note")
    String crmImportantNote();
    @DefaultMessage("Inbound")
    String crmInbound();
    @DefaultMessage("Inbound/Outbound")
    String crmInboundOutbound();
    @DefaultMessage("Industry")
    String crmIndustry();
    @DefaultMessage("Initial Account")
    String crmInitialAccount();
    @DefaultMessage("Initial Contact")
    String crmInitialContact();
    @DefaultMessage("Initial Lead")
    String crmInitialLead();
    @DefaultMessage("Initial Stage")
    String crmInitialStage();
    @DefaultMessage("Initial Team")
    String crmInitialTeam();
    @DefaultMessage("Internal Note")
    String crmInternalNote();
    @DefaultMessage("Internal Parties")
    String crmInternalParties();
    @DefaultMessage("Internal Party")
    String crmInternalParty();
    @DefaultMessage("Last Name (Local)")
    String crmLastNameLocal();
    @DefaultMessage("Lead")
    String crmLead();
    @DefaultMessage("Assign Lead")
    String crmLeadAssign();
    @DefaultMessage("Created Lead")
    String crmLeadCreated();
    @DefaultMessage("Lead Has Been Converted")
    String crmLeadHasBeenConverted();
    @DefaultMessage("Lead ID")
    String crmLeadId();
    @DefaultMessage("Leave above blank to create new account")
    String crmLeadLeaveBlankToCreateNewAccount();
    @DefaultMessage("Lead Name")
    String crmLeadName();
    @DefaultMessage("Lead Pipeline")
    String crmLeadPipeline();
    @DefaultMessage("Qualified Lead")
    String crmLeadQualified();
    @DefaultMessage("Leads")
    String crmLeads();
    @DefaultMessage("Local Name")
    String crmLocalName();
    @DefaultMessage("Location")
    String crmLocation();
    @DefaultMessage("Log Call")
    String crmLogCall();
    @DefaultMessage("Log Email")
    String crmLogEmail();
    @DefaultMessage("Log Task")
    String crmLogTask();
    @DefaultMessage("Lookup Cases")
    String crmLookupCases();
    @DefaultMessage("Lookup Accounts, Contacts or Leads")
    String crmLookupInternalParties();
    @DefaultMessage("Lookup Opportunities")
    String crmLookupOpportunities();
    @DefaultMessage("Map It")
    String crmMapIt();
    @DefaultMessage("Mark As Performed")
    String crmMarkAsPerformed();
    @DefaultMessage("Mark Available")
    String crmMarkAvailable();
    @DefaultMessage("Mark Mailing Sent")
    String crmMarkMailingSent();
    @DefaultMessage("Mark Unavailable")
    String crmMarkUnavailable();
    @DefaultMessage("Marketing")
    String crmMarketing();
    @DefaultMessage("Actual Cost")
    String crmMarketingActualCost();
    @DefaultMessage("Budgeted Cost")
    String crmMarketingBudgetedCost();
    @DefaultMessage("Marketing Campaign")
    String crmMarketingCampaign();
    @DefaultMessage("Marketing Campaign Report")
    String crmMarketingCampaignReport();
    @DefaultMessage("Marketing Campaigns")
    String crmMarketingCampaigns();
    @DefaultMessage("Estimated Cost")
    String crmMarketingEstimatedCost();
    @DefaultMessage("New Survey")
    String crmMarketingNewSurvey();
    @DefaultMessage("Marketing Reports")
    String crmMarketingReports();
    @DefaultMessage("Survey Results")
    String crmMarketingSurveyResults();
    @DefaultMessage("View Responses")
    String crmMarketingSurveyViewResponses();
    @DefaultMessage("Surveys")
    String crmMarketingSurveys();
    @DefaultMessage("Merge Accounts")
    String crmMergeAccounts();
    @DefaultMessage("Merge Contacts")
    String crmMergeContacts();
    @DefaultMessage("Merge Leads")
    String crmMergeLeads();
    @DefaultMessage("Modified By")
    String crmModifiedBy();
    @DefaultMessage("My Accounts")
    String crmMyAccounts();
    @DefaultMessage("My Calendar")
    String crmMyCalendar();
    @DefaultMessage("My Cases")
    String crmMyCases();
    @DefaultMessage("My Contacts")
    String crmMyContacts();
    @DefaultMessage("My Home")
    String crmMyHome();
    @DefaultMessage("My Leads")
    String crmMyLeads();
    @DefaultMessage("My Opportunities")
    String crmMyOpportunities();
    @DefaultMessage("My Orders")
    String crmMyOrders();
    @DefaultMessage("My Quotes")
    String crmMyQuotes();
    @DefaultMessage("CrmNavHistoryOrder")
    String crmNavHistoryOrder(String orderId);
    @DefaultMessage("CrmNavHistoryReturn")
    String crmNavHistoryReturn(String returnId);
    @DefaultMessage("New Account")
    String crmNewAccount();
    @DefaultMessage("New Attendee")
    String crmNewAttendee();
    @DefaultMessage("CrmNewBillingAccountDescription")
    String crmNewBillingAccountDescription(String returnId);
    @DefaultMessage("New Case")
    String crmNewCase();
    @DefaultMessage("New Contact")
    String crmNewContact();
    @DefaultMessage("CrmNewContactMechWithPurpose")
    String crmNewContactMechWithPurpose(String contactMechPurposeTypeDescription);
    @DefaultMessage("New Credit Card")
    String crmNewCreditCard();
    @DefaultMessage("New Data Source")
    String crmNewDataSource();
    @DefaultMessage("New Forecast")
    String crmNewForecast();
    @DefaultMessage("New Lead")
    String crmNewLead();
    @DefaultMessage("New Marketing Campaign")
    String crmNewMarketingCampaign();
    @DefaultMessage("New Opportunity")
    String crmNewOpportunity();
    @DefaultMessage("New Team")
    String crmNewTeam();
    @DefaultMessage("New Team Member")
    String crmNewTeamMember();
    @DefaultMessage("Next Step")
    String crmNextStep();
    @DefaultMessage("No notes for this quote")
    String crmNoQuoteNotes();
    @DefaultMessage("No templates found")
    String crmNoTemplates();
    @DefaultMessage("Not Exempt")
    String crmNotExempt();
    @DefaultMessage("Notes")
    String crmNotes();
    @DefaultMessage("was added to account")
    String crmNotificationEmail_Account_AddedTo();
    @DefaultMessage("was removed from account")
    String crmNotificationEmail_Account_RemovedFrom();
    @DefaultMessage("is now responsible for account")
    String crmNotificationEmail_Account_ResponsibleFor();
    @DefaultMessage("was added to event")
    String crmNotificationEmail_Event_AddedTo();
    @DefaultMessage("was removed from event")
    String crmNotificationEmail_Event_RemovedFrom();
    @DefaultMessage("is now responsible for lead")
    String crmNotificationEmail_Lead_ResponsibleFor();
    @DefaultMessage("was added to task")
    String crmNotificationEmail_Task_AddedTo();
    @DefaultMessage("was removed from task")
    String crmNotificationEmail_Task_RemovedFrom();
    @DefaultMessage("Number Of Employees")
    String crmNumberOfEmployees();
    @DefaultMessage("Number Of Members")
    String crmNumberOfMembers();
    @DefaultMessage("Number Sorted")
    String crmNumberSorted();
    @DefaultMessage("Open Cases")
    String crmOpenCases();
    @DefaultMessage("Open Orders")
    String crmOpenOrders();
    @DefaultMessage("Opportunities")
    String crmOpportunities();
    @DefaultMessage("Opportunities Proposal")
    String crmOpportunitiesProposal();
    @DefaultMessage("Opportunities Prospect")
    String crmOpportunitiesProspect();
    @DefaultMessage("Opportunities Quoted")
    String crmOpportunitiesQuoted();
    @DefaultMessage("CrmOpportunitiesbyStage")
    String crmOpportunitiesbyStage(String currency);
    @DefaultMessage("Opportunity")
    String crmOpportunity();
    @DefaultMessage("Opportunity Amount")
    String crmOpportunityAmount();
    @DefaultMessage("Opportunity For")
    String crmOpportunityFor();
    @DefaultMessage("Opportunity History")
    String crmOpportunityHistory();
    @DefaultMessage("Opportunity Id")
    String crmOpportunityId();
    @DefaultMessage("Opportunity Name")
    String crmOpportunityName();
    @DefaultMessage("Back-Ordered")
    String crmOrderBackOrdered();
    @DefaultMessage("Some ship groups do not have a shipping address yet and cannot be shipped.")
    String crmOrderCannotShipUntilShippingAddressSet();
    @DefaultMessage("Carrier")
    String crmOrderCarrier();
    @DefaultMessage("Carrier/Shipment Method")
    String crmOrderCarrierAndShipmentMethod();
    @DefaultMessage("Change Catalog")
    String crmOrderChangeCatalog();
    @DefaultMessage("Are you sure?  Customer information will not be saved.")
    String crmOrderConfirmCustomerNotSaved();
    @DefaultMessage("Related Emails")
    String crmOrderEmails();
    @DefaultMessage("Date Entered")
    String crmOrderEnteredDate();
    @DefaultMessage("Estimated Ship Date")
    String crmOrderEstimatedShipDate();
    @DefaultMessage("Est. Ship Date")
    String crmOrderEstimatedShipDateAbbr();
    @DefaultMessage("Gift")
    String crmOrderIsGift();
    @DefaultMessage("Order Item")
    String crmOrderItem();
    @DefaultMessage("Qty")
    String crmOrderItemQty();
    @DefaultMessage("Manual Refund")
    String crmOrderManualRefund();
    @DefaultMessage("May Split")
    String crmOrderMaySplit();
    @DefaultMessage("Order Name and ID")
    String crmOrderNameID();
    @DefaultMessage("Create New Ship Group")
    String crmOrderNewShipGroup();
    @DefaultMessage("CrmOrderNewShipGroupForOrder")
    String crmOrderNewShipGroupForOrder(String orderId, String shipGroupSeqId);
    @DefaultMessage("New Ship Group Quantity")
    String crmOrderNewShipGroupQuantity();
    @DefaultMessage("No related emails")
    String crmOrderNoEmails();
    @DefaultMessage("There are currently no order items.")
    String crmOrderNoItems();
    @DefaultMessage("No shipping account for the selected shipping method.")
    String crmOrderNoShippingAccountForSelectedMethod();
    @DefaultMessage("No Order was found for the given ID.")
    String crmOrderNotFound();
    @DefaultMessage("Order/ShipGroup")
    String crmOrderOrderShipGroup();
    @DefaultMessage("Other Payment Methods")
    String crmOrderOtherPaymentMethods();
    @DefaultMessage("Order Payment Reference Id")
    String crmOrderPaymentPreferenceId();
    @DefaultMessage("Select Payment Method")
    String crmOrderPaymentSettings();
    @DefaultMessage("Please set a customer")
    String crmOrderPleaseSetCustomer();
    @DefaultMessage("Order Promotions")
    String crmOrderPromotions();
    @DefaultMessage("Order Queue")
    String crmOrderQueue();
    @DefaultMessage("Manage Open Orders")
    String crmOrderQueueManageOrders();
    @DefaultMessage("Priority")
    String crmOrderQueuePriority();
    @DefaultMessage("Decrease Priority")
    String crmOrderQueuePriorityDecrease();
    @DefaultMessage("Increase Priority")
    String crmOrderQueuePriorityIncrease();
    @DefaultMessage("Save and Refresh")
    String crmOrderQueueSaveRefresh();
    @DefaultMessage("Remaining Total")
    String crmOrderRemainingTotal();
    @DefaultMessage("Review Order")
    String crmOrderReviewOrder();
    @DefaultMessage("Save Customer and Continue")
    String crmOrderSaveCustomerAndContinue();
    @DefaultMessage("Send New")
    String crmOrderSendNewEmail();
    @DefaultMessage("Set Shipping")
    String crmOrderSetShipping();
    @DefaultMessage("Order Settings")
    String crmOrderSettings();
    @DefaultMessage("Ship Before Date")
    String crmOrderShipBeforeDate();
    @DefaultMessage("Ship By Date")
    String crmOrderShipByDate();
    @DefaultMessage("CrmOrderShipGroupNumber")
    String crmOrderShipGroupNumber(String shipGroupNumber);
    @DefaultMessage("CrmOrderShipGroupQuantity")
    String crmOrderShipGroupQuantity(String shipGroupSeqId);
    @DefaultMessage("CrmOrderShipGroupTo")
    String crmOrderShipGroupTo(String shipGroupSeqId);
    @DefaultMessage("Select Shipping Addresses and Methods")
    String crmOrderShipToSettings();
    @DefaultMessage("Order Shipping Address")
    String crmOrderShippingAddress();
    @DefaultMessage("Shipping Address and Method")
    String crmOrderShippingAddressAndMethod();
    @DefaultMessage("Shipping Instructions")
    String crmOrderShippingInstructions();
    @DefaultMessage("Shipping Method")
    String crmOrderShippingMethod();
    @DefaultMessage("Split")
    String crmOrderSplit();
    @DefaultMessage("New Ship Group")
    String crmOrderSplitShipGroup();
    @DefaultMessage("Order Summary")
    String crmOrderSummary();
    @DefaultMessage("Billed To Account #")
    String crmOrderThirdPartyAccountNo();
    @DefaultMessage("Billed to Zip Code")
    String crmOrderThirdPartyAccountZip();
    @DefaultMessage("Country")
    String crmOrderThirdPartyCountryCode();
    @DefaultMessage("Postal Code")
    String crmOrderThirdPartyPostalCode();
    @DefaultMessage("Total Payments")
    String crmOrderTotalPayments();
    @DefaultMessage("Update Prices for New Customer?")
    String crmOrderUpdatePricesForNewCustomer();
    @DefaultMessage("Outbound")
    String crmOutbound();
    @DefaultMessage("Ownership")
    String crmOwnership();
    @DefaultMessage("Parent Account")
    String crmParentParty();
    @DefaultMessage("Partners")
    String crmPartners();
    @DefaultMessage("Classification")
    String crmPartyClassification();
    @DefaultMessage("ID")
    String crmPartyId();
    @DefaultMessage("CrmParyUserLoginNotFound")
    String crmParyUserLoginNotFound(String userLoginId, String partyId);
    @DefaultMessage("Password successfully updated")
    String crmPasswordChangeSuccess();
    @DefaultMessage("Passwords are encrypted and cannot be displayed")
    String crmPasswordEncryptedCannotDisplay();
    @DefaultMessage("Payment and Shipping Accounts")
    String crmPaymentAndShippingAccounts();
    @DefaultMessage("Payments received")
    String crmPaymentsReceivedYear();
    @DefaultMessage("Pending")
    String crmPending();
    @DefaultMessage("Pending Activities")
    String crmPendingActivities();
    @DefaultMessage("Pending Returns")
    String crmPendingReturns();
    @DefaultMessage("Period")
    String crmPeriod();
    @DefaultMessage("Person Responsible For")
    String crmPersonResponsibleFor();
    @DefaultMessage("Person to Ask For")
    String crmPhoneAskForName();
    @DefaultMessage("Pickup Phone Number")
    String crmPickupPhoneNumber();
    @DefaultMessage("Please set a shipping address")
    String crmPleaseSetShippingAddress();
    @DefaultMessage("Zip/Postal Code Extension")
    String crmPostalCodeExt();
    @DefaultMessage("Preferred Currency")
    String crmPreferredCurrency();
    @DefaultMessage("Primary Address")
    String crmPrimaryAddress();
    @DefaultMessage("Primary Email")
    String crmPrimaryEmail();
    @DefaultMessage("Primary Phone")
    String crmPrimaryPhone();
    @DefaultMessage("Print Labels")
    String crmPrintLabels();
    @DefaultMessage("Warning")
    String crmProductWarning();
    @DefaultMessage("WARNING!")
    String crmProductWarningConfirmMessage();
    @DefaultMessage("Purchased from Shopping List")
    String crmPurchasedFromShoppingList();
    @DefaultMessage("Purpose")
    String crmPurpose();
    @DefaultMessage("Qualify Lead")
    String crmQualifyLead();
    @DefaultMessage("Quota")
    String crmQuota();
    @DefaultMessage("Amount")
    String crmQuoteAmount();
    @DefaultMessage("Description")
    String crmQuoteDescription();
    @DefaultMessage("Finalize Quote")
    String crmQuoteFinalize();
    @DefaultMessage("Quote Option")
    String crmQuoteItemOption();
    @DefaultMessage("Quote Options")
    String crmQuoteItemOptions();
    @DefaultMessage("Quote Name and ID")
    String crmQuoteNameAndID();
    @DefaultMessage("Product")
    String crmQuoteProduct();
    @DefaultMessage("Qty")
    String crmQuoteQty();
    @DefaultMessage("Unit")
    String crmQuoteUnit();
    @DefaultMessage("Quotes")
    String crmQuotes();
    @DefaultMessage("Reason")
    String crmReason();
    @DefaultMessage("Reassign")
    String crmReassign();
    @DefaultMessage("Reassign To")
    String crmReassignTo();
    @DefaultMessage("Recalculate")
    String crmRecalculateOrder();
    @DefaultMessage("Recipient Party")
    String crmRecepientParty();
    @DefaultMessage("Related Party")
    String crmRelatedParty();
    @DefaultMessage("Remove Selected")
    String crmRemoveSelected();
    @DefaultMessage("Breakdown by BMC zone")
    String crmReportUSPSBMC();
    @DefaultMessage("USPS Business Mail Sorting Details")
    String crmReportUSPSHeader();
    @DefaultMessage("International Mail")
    String crmReportUSPSOther();
    @DefaultMessage("Bulk Mail Sorted by Destination")
    String crmReportUSPSSortResults();
    @DefaultMessage("Breakdown by 3-digit ZIP")
    String crmReportUSPSZip3();
    @DefaultMessage("Breakdown by 5-digit ZIP")
    String crmReportUSPSZip5();
    @DefaultMessage("reserved to")
    String crmReservedTo();
    @DefaultMessage("Carrier/Shipment Method")
    String crmReturnCarrierShipmentMethod();
    @DefaultMessage("Customer will Return Package")
    String crmReturnCustomerWillReturn();
    @DefaultMessage("Estimated Weight")
    String crmReturnEstimatedWeight();
    @DefaultMessage("Return From")
    String crmReturnFrom();
    @DefaultMessage("Return From Customer")
    String crmReturnFromCustomer();
    @DefaultMessage("Schedule Pickup")
    String crmReturnSchedulePickup();
    @DefaultMessage("Return Service")
    String crmReturnService();
    @DefaultMessage("Return Shipment")
    String crmReturnShipment();
    @DefaultMessage("Return Shipment Tracking Code")
    String crmReturnShipmentTrackingCode();
    @DefaultMessage("Return To")
    String crmReturnTo();
    @DefaultMessage("Returned From")
    String crmReturnedFrom();
    @DefaultMessage("Returned To")
    String crmReturnedTo();
    @DefaultMessage("Returns")
    String crmReturns();
    @DefaultMessage("SIC Code")
    String crmSICCode();
    @DefaultMessage("Sales")
    String crmSales();
    @DefaultMessage("Channel")
    String crmSalesChannel();
    @DefaultMessage("Total of Sales per Year")
    String crmSalesPerYear();
    @DefaultMessage("Sales Rep")
    String crmSalesRep();
    @DefaultMessage("Sales Representative")
    String crmSalesRepresentative();
    @DefaultMessage("Salutation")
    String crmSalutation();
    @DefaultMessage("Save as Quote")
    String crmSaveAsQuote();
    @DefaultMessage("Save For Later")
    String crmSaveForLater();
    @DefaultMessage("Scheduled Start")
    String crmScheduledDateAndTime();
    @DefaultMessage("Select Items to Return")
    String crmSelectItemsToReturn();
    @DefaultMessage("Select Quarter")
    String crmSelectQuarter();
    @DefaultMessage("Select shipping address")
    String crmSelectShippingAddress();
    @DefaultMessage("Send Email")
    String crmSendEmail();
    @DefaultMessage("Shipping Account")
    String crmShippingAccount();
    @DefaultMessage("Shopping List Details")
    String crmShoppingListDetails();
    @DefaultMessage("Shopping Lists of Client")
    String crmShoppingListOriginator();
    @DefaultMessage("Shopping Lists")
    String crmShoppingLists();
    @DefaultMessage("Shortcuts")
    String crmShortcuts();
    @DefaultMessage("Site Name")
    String crmSiteName();
    @DefaultMessage("Skype Contact")
    String crmSkypeContact();
    @DefaultMessage("Sort USPS Business Mail")
    String crmSortUSPSBusinessMail();
    @DefaultMessage("Stage")
    String crmStage();
    @DefaultMessage("Start")
    String crmStart();
    @DefaultMessage("Start Date and Time")
    String crmStartDateAndTime();
    @DefaultMessage("Start Time")
    String crmStartTime();
    @DefaultMessage("Statements")
    String crmStatements();
    @DefaultMessage("Store")
    String crmStore();
    @DefaultMessage("Store Credit Account")
    String crmStoreCreditAccount();
    @DefaultMessage("This survey does not exist or cannot be found.")
    String crmSurveyDoesNotExist();
    @DefaultMessage("This survey has no questions.")
    String crmSurveyHasNoQuestions();
    @DefaultMessage("Taken By")
    String crmTakenBy();
    @DefaultMessage("Task")
    String crmTask();
    @DefaultMessage("Team")
    String crmTeam();
    @DefaultMessage("My Teams'' Accounts")
    String crmTeamAccounts();
    @DefaultMessage("My Teams'' Calendar")
    String crmTeamCalendar();
    @DefaultMessage("My Teams'' Cases")
    String crmTeamCases();
    @DefaultMessage("My Teams'' Contacts")
    String crmTeamContacts();
    @DefaultMessage("Team Deactivated")
    String crmTeamDeactivated();
    @DefaultMessage("Forecasts for Team Members")
    String crmTeamForecastQuarters();
    @DefaultMessage("Team Member")
    String crmTeamMember();
    @DefaultMessage("Team Members")
    String crmTeamMembers();
    @DefaultMessage("Team Members Assigned To This Account")
    String crmTeamMembersAssignedToAccount();
    @DefaultMessage("My Teams'' Opportunities")
    String crmTeamOpportunities();
    @DefaultMessage("Teams")
    String crmTeams();
    @DefaultMessage("Template")
    String crmTemplate();
    @DefaultMessage("Text")
    String crmText();
    @DefaultMessage("Ticker Symbol")
    String crmTickerSymbol();
    @DefaultMessage("Title")
    String crmTitle();
    @DefaultMessage("To Account")
    String crmToAccount();
    @DefaultMessage("To Contact")
    String crmToContact();
    @DefaultMessage("To Lead")
    String crmToLead();
    @DefaultMessage("Trackable Lifetime")
    String crmTrackableLifetime();
    @DefaultMessage("Used to set the lifetime of a cookie by the ecommerce application, in seconds")
    String crmTrackableLifetimeTip();
    @DefaultMessage("Tracking Code")
    String crmTrackingCode();
    @DefaultMessage("Tracking Code Report")
    String crmTrackingCodeReport();
    @DefaultMessage("Tracking Codes")
    String crmTrackingCodes();
    @DefaultMessage("Transactions Shortcuts")
    String crmTransactionsShortcuts();
    @DefaultMessage("Edit Account")
    String crmUpdateAccount();
    @DefaultMessage("Edit Case")
    String crmUpdateCase();
    @DefaultMessage("Edit Contact")
    String crmUpdateContact();
    @DefaultMessage("Edit Contact List")
    String crmUpdateContactList();
    @DefaultMessage("Edit Content")
    String crmUpdateContent();
    @DefaultMessage("Edit Event")
    String crmUpdateEvent();
    @DefaultMessage("Edit Forecast")
    String crmUpdateForecast();
    @DefaultMessage("Edit Lead")
    String crmUpdateLead();
    @DefaultMessage("Edit Campaign")
    String crmUpdateMarketingCampaign();
    @DefaultMessage("Edit Opportunity")
    String crmUpdateOpportunity();
    @DefaultMessage("Edit Profile")
    String crmUpdateProfile();
    @DefaultMessage("Edit Task")
    String crmUpdateTask();
    @DefaultMessage("Edit Team")
    String crmUpdateTeam();
    @DefaultMessage("Upload File")
    String crmUploadFile();
    @DefaultMessage("Upload and Import")
    String crmUploadFileAndImport();
    @DefaultMessage("Upload Leads")
    String crmUploadLeads();
    @DefaultMessage("URL Address")
    String crmUrlAddress();
    @DefaultMessage("User Login")
    String crmUserLogin();
    @DefaultMessage("User Login Id")
    String crmUserLoginId();
    @DefaultMessage("User Login Information")
    String crmUserLoginInformation();
    @DefaultMessage("Account Details")
    String crmViewAccount();
    @DefaultMessage("Activity Details")
    String crmViewActivity();
    @DefaultMessage("View As Contact")
    String crmViewAsContact();
    @DefaultMessage("View Case")
    String crmViewCase();
    @DefaultMessage("View Contact")
    String crmViewContact();
    @DefaultMessage("View Contact List")
    String crmViewContactList();
    @DefaultMessage("Event Details")
    String crmViewEvent();
    @DefaultMessage("Forecast Details")
    String crmViewForecast();
    @DefaultMessage("View Forecasts")
    String crmViewForecasts();
    @DefaultMessage("View Lead")
    String crmViewLead();
    @DefaultMessage("View Campaign")
    String crmViewMarketingCampaign();
    @DefaultMessage("View Opportunity")
    String crmViewOpportunity();
    @DefaultMessage("View Order")
    String crmViewOrder();
    @DefaultMessage("Return Details")
    String crmViewReturn();
    @DefaultMessage("View Shopping List")
    String crmViewShoppingList();
    @DefaultMessage("Task Details")
    String crmViewTask();
    @DefaultMessage("View Team")
    String crmViewTeam();
    @DefaultMessage("Web Url")
    String crmWebUrl();
    @DefaultMessage("Weight per piece")
    String crmWeightPerPiece();
    @DefaultMessage("Write Email")
    String crmWriteEmail();
    @DefaultMessage("wrote")
    String crmWroteEmail();
    @DefaultMessage("Zip Code")
    String crmZipCode();
    @DefaultMessage("Opentaps CRMSFA Login")
    String crmsfaLoginGreeting();
    @DefaultMessage("crmsfa.autoAssignParty_CrmRoleExists")
    String crmsfa_autoAssignParty_CrmRoleExists(String partyId, String crmRoleTypeId);
    @DefaultMessage("crmsfa.autoMergePartiesError")
    String crmsfa_autoMergePartiesError(String partyIdFrom, String partyIdTo);
    @DefaultMessage("crmsfa.autoMergePartiesSuccess")
    String crmsfa_autoMergePartiesSuccess(String partyIdFrom, String partyIdTo);
    @DefaultMessage("crmsfa.findCrmPartiesForMerge_mergeRationaleEmail")
    String crmsfa_findCrmPartiesForMerge_mergeRationaleEmail(String toPartyName, String toContactMechString, String fromPartyName, String fromContactMechString);
    @DefaultMessage("crmsfa.findCrmPartiesForMerge_mergeRationalePostal")
    String crmsfa_findCrmPartiesForMerge_mergeRationalePostal(String toPartyName, String toContactMechString, String fromPartyName, String fromContactMechString);
    @DefaultMessage("crmsfa.findCrmPartiesForMerge_skipDueToName")
    String crmsfa_findCrmPartiesForMerge_skipDueToName(String toPartyName, String fromPartyName);
    @DefaultMessage("crmsfa.findCrmPartiesForMerge_skipDueToType")
    String crmsfa_findCrmPartiesForMerge_skipDueToType(String toPartyName, String fromPartyName);
    @DefaultMessage("crmsfa.sendCrmNotificationEmailsCatRqTurnedOff")
    String crmsfa_sendCrmNotificationEmailsCatRqTurnedOff(String custRequestId);
    @DefaultMessage("crmsfa.sendCrmNotificationEmailsError")
    String crmsfa_sendCrmNotificationEmailsError(String partyId, String subject);
    @DefaultMessage("crmsfa.sendCrmNotificationEmailsErrorNoAddress")
    String crmsfa_sendCrmNotificationEmailsErrorNoAddress(String partyId);
    @DefaultMessage("Czeck")
    String cz();
    @DefaultMessage("Danish")
    String da();
    @DefaultMessage("Copy Ledger Setup")
    String dataImportCopyLedgerSetup();
    @DefaultMessage("Customers Import Report")
    String dataImportCustomersImportReport();
    @DefaultMessage("Company Name")
    String dataImportCustomersImportReport_companyName();
    @DefaultMessage("First Name")
    String dataImportCustomersImportReport_firstName();
    @DefaultMessage("Customer Id")
    String dataImportCustomersImportReport_id();
    @DefaultMessage("Last Name")
    String dataImportCustomersImportReport_lastName();
    @DefaultMessage("File to Import")
    String dataImportFileToImport();
    @DefaultMessage("From Organization Template")
    String dataImportFromOrganizationTemplate();
    @DefaultMessage("GL Accounts")
    String dataImportGlAccounts();
    @DefaultMessage("GL Accounts Import Report")
    String dataImportGlAccountsImportReport();
    @DefaultMessage("GL Account Id")
    String dataImportGlAccountsImportReport_id();
    @DefaultMessage("GL Account Name")
    String dataImportGlAccountsImportReport_name();
    @DefaultMessage("Data Import")
    String dataImportHome();
    @DefaultMessage("Import")
    String dataImportImport();
    @DefaultMessage("Import Customers")
    String dataImportImportCustomers();
    @DefaultMessage("Import Error")
    String dataImportImportError();
    @DefaultMessage("Import From File")
    String dataImportImportFromFile();
    @DefaultMessage("Import General Ledger Accounts")
    String dataImportImportGlAccounts();
    @DefaultMessage("Import Inventory")
    String dataImportImportInventory();
    @DefaultMessage("Import Orders")
    String dataImportImportOrders();
    @DefaultMessage("Import Products")
    String dataImportImportProducts();
    @DefaultMessage("Import Status Id")
    String dataImportImportStatusId();
    @DefaultMessage("Import Suppliers")
    String dataImportImportSuppliers();
    @DefaultMessage("Importing")
    String dataImportImporting();
    @DefaultMessage("Inventory Import Report")
    String dataImportInventoryImportReport();
    @DefaultMessage("Facility Id")
    String dataImportInventoryImportReport_facilityId();
    @DefaultMessage("Inventory Id")
    String dataImportInventoryImportReport_id();
    @DefaultMessage("Product Id")
    String dataImportInventoryImportReport_productId();
    @DefaultMessage("Job Name")
    String dataImportJobName();
    @DefaultMessage("# Not Processed")
    String dataImportNumberNotProcessed();
    @DefaultMessage("# Processed")
    String dataImportNumberProcessed();
    @DefaultMessage("Order Header Lines Import Report")
    String dataImportOrderHeaderLinesImportReport();
    @DefaultMessage("Customer Party Id")
    String dataImportOrderHeaderLinesImportReport_customerPartyId();
    @DefaultMessage("Order Id")
    String dataImportOrderHeaderLinesImportReport_id();
    @DefaultMessage("Supplier Party Id")
    String dataImportOrderHeaderLinesImportReport_supplierPartyId();
    @DefaultMessage("Order Type Id")
    String dataImportOrderHeaderLinesImportReport_typeId();
    @DefaultMessage("Order Item Lines")
    String dataImportOrderItemLines();
    @DefaultMessage("Order Item Lines Import Report")
    String dataImportOrderItemLinesImportReport();
    @DefaultMessage("Order Id")
    String dataImportOrderItemLinesImportReport_id();
    @DefaultMessage("Price")
    String dataImportOrderItemLinesImportReport_price();
    @DefaultMessage("Product Id")
    String dataImportOrderItemLinesImportReport_productId();
    @DefaultMessage("Quantaty")
    String dataImportOrderItemLinesImportReport_quantaty();
    @DefaultMessage("Order Header Lines")
    String dataImportOrderLines();
    @DefaultMessage("Products Import Report")
    String dataImportProductsImportReport();
    @DefaultMessage("Product Id")
    String dataImportProductsImportReport_id();
    @DefaultMessage("Product Name")
    String dataImportProductsImportReport_name();
    @DefaultMessage("Report generated")
    String dataImportReportGenerated();
    @DefaultMessage("Run Import")
    String dataImportRunImport();
    @DefaultMessage("Start Date/Time")
    String dataImportServiceTime();
    @DefaultMessage("Suppliers Import Report")
    String dataImportSuppliersImportReport();
    @DefaultMessage("Supplier Id")
    String dataImportSuppliersImportReport_id();
    @DefaultMessage("Supplier Name")
    String dataImportSuppliersImportReport_name();
    @DefaultMessage("Synchronously")
    String dataImportSync();
    @DefaultMessage("To Organization")
    String dataImportToOrganization();
    @DefaultMessage("Upload")
    String dataImportUpload();
    @DefaultMessage("Upload a File")
    String dataImportUploadFile();
    @DefaultMessage("File Format")
    String dataImportUploadFileFormat();
    @DefaultMessage("Excel")
    String dataImportUploadFileFormatExcel();
    @DefaultMessage("DataImportUploadServiceProcessedProducts")
    String dataImportUploadServiceProcessedProducts(String processed);
    @DefaultMessage("DataImportUploadServiceProcessedSuppliers")
    String dataImportUploadServiceProcessedSuppliers(String processed);
    @DefaultMessage("Data Source")
    String dataSource();
    @DefaultMessage("Create Data Source")
    String dataSourceCreate();
    @DefaultMessage("Data Source Id")
    String dataSourceDataSourceId();
    @DefaultMessage("Data Source Type Id")
    String dataSourceDataSourceTypeId();
    @DefaultMessage("No Data Source Found with ID")
    String dataSourceNoDataSourceFoundWithId();
    @DefaultMessage("Data Source Type")
    String dataSourceType();
    @DefaultMessage("Create Data Source Type")
    String dataSourceTypeCreate();
    @DefaultMessage("Opentaps DataImport Login")
    String dataimportLoginGreeting();
    @DefaultMessage("German")
    String de();
    @DefaultMessage("eBay")
    String ebay();
    @DefaultMessage("a new")
    String ecommerceANew();
    @DefaultMessage("About Us")
    String ecommerceAboutUs();
    @DefaultMessage("Account Information")
    String ecommerceAccountInformation();
    @DefaultMessage("Your account login is:")
    String ecommerceAccountLogin();
    @DefaultMessage("Active")
    String ecommerceActive();
    @DefaultMessage("Add This List And Child List(s) To Cart")
    String ecommerceAddChildListsToCart();
    @DefaultMessage("Add List To Cart")
    String ecommerceAddListToCart();
    @DefaultMessage("Add New Address")
    String ecommerceAddNewAddress();
    @DefaultMessage("Add New Digital Product")
    String ecommerceAddNewDigitalProduct();
    @DefaultMessage("Add Response For")
    String ecommerceAddResponseFor();
    @DefaultMessage("Add Selected to List")
    String ecommerceAddSelectedtoList();
    @DefaultMessage("Additional Addresses")
    String ecommerceAdditionalAddresses();
    @DefaultMessage("Address Book")
    String ecommerceAddressBook();
    @DefaultMessage("Adjustment")
    String ecommerceAdjustment();
    @DefaultMessage("Adjustments")
    String ecommerceAdjustments();
    @DefaultMessage("Always View Cart After Adding An Item")
    String ecommerceAlwaysViewCartAfterAddingAnItem();
    @DefaultMessage("Article Information")
    String ecommerceArticleInformation();
    @DefaultMessage("Assign Items")
    String ecommerceAssignItems();
    @DefaultMessage("Be sure to include your order #")
    String ecommerceBeSureToIncludeYourOrderNb();
    @DefaultMessage("Add a response:")
    String ecommerceBlogAddResponse();
    @DefaultMessage("You must be logged in to add a response.")
    String ecommerceBlogAddResponseMessage();
    @DefaultMessage("Add a thread:")
    String ecommerceBlogAddThread();
    @DefaultMessage("Article")
    String ecommerceBlogArticle();
    @DefaultMessage("Unable to find Blog content!")
    String ecommerceBlogContentNotFound();
    @DefaultMessage("You must be logged in in order to edit comments.")
    String ecommerceBlogEditComments();
    @DefaultMessage("Blog entry Id")
    String ecommerceBlogEntryId();
    @DefaultMessage("Full message")
    String ecommerceBlogFullMessage();
    @DefaultMessage("Latest Responses")
    String ecommerceBlogLatestResponses();
    @DefaultMessage("Message tree")
    String ecommerceBlogMessageTree();
    @DefaultMessage("You must be logged in and viewing a published record in order to post comments.")
    String ecommerceBlogPostComments();
    @DefaultMessage("Posted on")
    String ecommerceBlogPostedOn();
    @DefaultMessage("Preview")
    String ecommerceBlogPreview();
    @DefaultMessage("Publish")
    String ecommerceBlogPublish();
    @DefaultMessage("Top Center")
    String ecommerceBlogTopCenter();
    @DefaultMessage("Top Left")
    String ecommerceBlogTopLeft();
    @DefaultMessage("View Blog Article")
    String ecommerceBlogViewArticle();
    @DefaultMessage("Bronze")
    String ecommerceBronze();
    @DefaultMessage("Cart has")
    String ecommerceCartHas();
    @DefaultMessage("Google Checkout")
    String ecommerceCartToGoogleCheckout();
    @DefaultMessage("Cart Total")
    String ecommerceCartTotal();
    @DefaultMessage("Change Payment Info")
    String ecommerceChangePaymentInfo();
    @DefaultMessage("Change Shipping Address")
    String ecommerceChangeShippingAddress();
    @DefaultMessage("Change Shipping Options")
    String ecommerceChangeShippingOptions();
    @DefaultMessage("Check Balance")
    String ecommerceCheckBalance();
    @DefaultMessage("Child List Total Price")
    String ecommerceChildListTotalPrice();
    @DefaultMessage("Child Shopping List")
    String ecommerceChildShoppingList();
    @DefaultMessage("Click here to edit")
    String ecommerceClickHereToEdit();
    @DefaultMessage("Completed")
    String ecommerceCompleted();
    @DefaultMessage("Content For")
    String ecommerceContentFor();
    @DefaultMessage("Content Information")
    String ecommerceContentInformation();
    @DefaultMessage("Content Name")
    String ecommerceContentName();
    @DefaultMessage("Continue Shopping")
    String ecommerceContinueShopping();
    @DefaultMessage("Continue to step")
    String ecommerceContinueToStep();
    @DefaultMessage("Data Resource Id")
    String ecommerceDataResourceId();
    @DefaultMessage("Default Addresses")
    String ecommerceDefaultAddresses();
    @DefaultMessage("Default Shipment Method")
    String ecommerceDefaultShipmentMethod();
    @DefaultMessage("Please select your default shipping address; then select a default shipping method.")
    String ecommerceDefaultShipmentMethodMsg();
    @DefaultMessage("Digital Add From My Files")
    String ecommerceDigitalAddFromMyFiles();
    @DefaultMessage("Digital New Product")
    String ecommerceDigitalNewProduct();
    @DefaultMessage("Digital Product Files")
    String ecommerceDigitalProductFiles();
    @DefaultMessage("Digital Product Purchase History Commission")
    String ecommerceDigitalProductPurchaseHistoryCommission();
    @DefaultMessage("Digital Product Upload")
    String ecommerceDigitalProductUpload();
    @DefaultMessage("Download Not Found")
    String ecommerceDownloadNotFound();
    @DefaultMessage("Downloads Available Title")
    String ecommerceDownloadsAvailableTitle();
    @DefaultMessage("Edit Profile")
    String ecommerceEditProfile();
    @DefaultMessage("Edit this comment")
    String ecommerceEditThisComment();
    @DefaultMessage("Empty Body")
    String ecommerceEmptyBody();
    @DefaultMessage("Empty Cart")
    String ecommerceEmptyCart();
    @DefaultMessage("Enter Promo Code")
    String ecommerceEnterPromoCode();
    @DefaultMessage("Enter Query Parameters")
    String ecommerceEnterQueryParameters();
    @DefaultMessage("Estimate Next Order Date")
    String ecommerceEstimateNextOrderDate();
    @DefaultMessage("Every 3rd")
    String ecommerceEvery3rd();
    @DefaultMessage("Every 6th")
    String ecommerceEvery6th();
    @DefaultMessage("Every 9th")
    String ecommerceEvery9th();
    @DefaultMessage("Every Day")
    String ecommerceEveryDay();
    @DefaultMessage("Every Other")
    String ecommerceEveryOther();
    @DefaultMessage("Exempt Amount")
    String ecommerceExemptAmount();
    @DefaultMessage("Did you know?")
    String ecommerceFactoids();
    @DefaultMessage("File Manager")
    String ecommerceFileManager();
    @DefaultMessage("has requested us to send you this link with the following message:")
    String ecommerceFollowingMessage();
    @DefaultMessage("From Parent Article")
    String ecommerceFromParentArticle();
    @DefaultMessage("From Site")
    String ecommerceFromSite();
    @DefaultMessage("Generated Description:")
    String ecommerceGeneratedDescription();
    @DefaultMessage("Gift Amount:")
    String ecommerceGiftAmount();
    @DefaultMessage("Gift Card From")
    String ecommerceGiftCardFrom();
    @DefaultMessage("Gift Card New Balance")
    String ecommerceGiftCardNewBalance();
    @DefaultMessage("Gift Card Refunded")
    String ecommerceGiftCardRefunded();
    @DefaultMessage("Gift Card Reload Failed")
    String ecommerceGiftCardReloadFailed();
    @DefaultMessage("Gift Card Reloaded")
    String ecommerceGiftCardReloaded();
    @DefaultMessage("Gift Wrap All Items")
    String ecommerceGiftWrapAllItems();
    @DefaultMessage("GoToList")
    String ecommerceGoToList();
    @DefaultMessage("Gold")
    String ecommerceGold();
    @DefaultMessage("High To Low")
    String ecommerceHighToLow();
    @DefaultMessage("Image")
    String ecommerceImage();
    @DefaultMessage("Image Centered Above")
    String ecommerceImageCenteredAbove();
    @DefaultMessage("Image Centered Above File")
    String ecommerceImageCenteredAboveFile();
    @DefaultMessage("Image File Name")
    String ecommerceImageFileName();
    @DefaultMessage("Image Information")
    String ecommerceImageInformation();
    @DefaultMessage("Image left, text flows around.")
    String ecommerceImageLeft();
    @DefaultMessage("In Response To")
    String ecommerceInResponseTo();
    @DefaultMessage("Is Default")
    String ecommerceIsDefault();
    @DefaultMessage("Item Total")
    String ecommerceItemTotal();
    @DefaultMessage("Items from Shoping List")
    String ecommerceItemsfromShopingList();
    @DefaultMessage("Last Categories")
    String ecommerceLastCategories();
    @DefaultMessage("Last Content")
    String ecommerceLastContent();
    @DefaultMessage("Last Products")
    String ecommerceLastProducts();
    @DefaultMessage("Last Viewed")
    String ecommerceLastViewed();
    @DefaultMessage("Length")
    String ecommerceLength();
    @DefaultMessage("Link Cards")
    String ecommerceLinkCards();
    @DefaultMessage("List Does Not Belong")
    String ecommerceListDoesNotBelong();
    @DefaultMessage("List Items")
    String ecommerceListItems();
    @DefaultMessage("List Items Total Price")
    String ecommerceListItemsTotalPrice();
    @DefaultMessage("List Name")
    String ecommerceListName();
    @DefaultMessage("NOTE: When you subscribe to an email contact list you will receive an email with an opt-in verification code and a link to verify your subscription. As an alternative to the link you can enter your opt-in verify code here.")
    String ecommerceListNote();
    @DefaultMessage("Location")
    String ecommerceLocation();
    @DefaultMessage("(You must be logged in to post)")
    String ecommerceLoggedToPost();
    @DefaultMessage("Long Subject")
    String ecommerceLongSubject();
    @DefaultMessage("If you ever lose your password, you can request a new one at any time.")
    String ecommerceLosePassword();
    @DefaultMessage("Low To High")
    String ecommerceLowToHigh();
    @DefaultMessage("Loyalty Points")
    String ecommerceLoyaltyPoints();
    @DefaultMessage("Manage Addresses")
    String ecommerceManageAddresses();
    @DefaultMessage("Sorry, it appears that the specified product ID")
    String ecommerceMessage1();
    @DefaultMessage("does not belong to you.")
    String ecommerceMessage2();
    @DefaultMessage("Select a New Billing Address:")
    String ecommerceMessage3();
    @DefaultMessage("Message List For Forum")
    String ecommerceMessageListForForum();
    @DefaultMessage("Please Select Payment Method")
    String ecommerceMessagePleaseSelectPaymentMethod();
    @DefaultMessage("Please Select Shipping Method")
    String ecommerceMessagePleaseSelectShippingMethod();
    @DefaultMessage("Months")
    String ecommerceMonths();
    @DefaultMessage("My Account")
    String ecommerceMyAccount();
    @DefaultMessage("Make this my default billing address")
    String ecommerceMyDefaultBillingAddress();
    @DefaultMessage("Make this my default shipping address")
    String ecommerceMyDefaultShippingAddress();
    @DefaultMessage("Nbr Of Days")
    String ecommerceNbrOfDays();
    @DefaultMessage("Nbr Of Persons")
    String ecommerceNbrOfPersons();
    @DefaultMessage("Nested Content")
    String ecommerceNestedContent();
    @DefaultMessage("New Credit Card")
    String ecommerceNewCreditCard();
    @DefaultMessage("New EFT Account")
    String ecommerceNewEFTAccount();
    @DefaultMessage("New List Subscription")
    String ecommerceNewListSubscription();
    @DefaultMessage("Your password is :-")
    String ecommerceNewPasswordMssgEncryptionOff();
    @DefaultMessage("Your new password is :-")
    String ecommerceNewPasswordMssgEncryptionOn();
    @DefaultMessage("No Digital Products Found")
    String ecommerceNoDigitalProductsFound();
    @DefaultMessage("No Files")
    String ecommerceNoFiles();
    @DefaultMessage("No Gift Wrap")
    String ecommerceNoGiftWrap();
    @DefaultMessage("No Messages")
    String ecommerceNoMessages();
    @DefaultMessage("No PROMOTION Category")
    String ecommerceNoPROMOTIONCategory();
    @DefaultMessage("No Parent")
    String ecommerceNoParent();
    @DefaultMessage("No Product Store")
    String ecommerceNoProductStore();
    @DefaultMessage("No Records Found")
    String ecommerceNoRecordsFound();
    @DefaultMessage("No shopping lists to select, create a new one")
    String ecommerceNoShoppingListsCreate();
    @DefaultMessage("No Subject")
    String ecommerceNoSubject();
    @DefaultMessage("Not Completed")
    String ecommerceNotCompleted();
    @DefaultMessage("Not Exists")
    String ecommerceNotExists();
    @DefaultMessage("Not Yet Known")
    String ecommerceNotYetKnown();
    @DefaultMessage("One Page Checkout")
    String ecommerceOnePageCheckout();
    @DefaultMessage("Order Confirmation")
    String ecommerceOrderConfirmation();
    @DefaultMessage("Order History")
    String ecommerceOrderHistory();
    @DefaultMessage("order(s) in the last")
    String ecommerceOrderInLast();
    @DefaultMessage("Order Not Active")
    String ecommerceOrderNotActive();
    @DefaultMessage("Owning Department")
    String ecommerceOwningDepartment();
    @DefaultMessage("Parent List")
    String ecommerceParentList();
    @DefaultMessage("With the password you set during registration.")
    String ecommercePassword();
    @DefaultMessage("password is")
    String ecommercePasswordIs();
    @DefaultMessage("password sent to you")
    String ecommercePasswordSentToYou();
    @DefaultMessage("Please wait")
    String ecommercePleaseWait();
    @DefaultMessage("Points From")
    String ecommercePointsFrom();
    @DefaultMessage("Post Anonymous")
    String ecommercePostAnonymous();
    @DefaultMessage("Price")
    String ecommercePrice();
    @DefaultMessage("Price Range")
    String ecommercePriceRange();
    @DefaultMessage("Primary Billing Address")
    String ecommercePrimaryBillingAddress();
    @DefaultMessage("Primary Shipping Address")
    String ecommercePrimaryShippingAddress();
    @DefaultMessage("Product not configured")
    String ecommerceProductNotConfigured();
    @DefaultMessage("Product Number")
    String ecommerceProductNumber();
    @DefaultMessage("Promotional Items")
    String ecommercePromotionalItems();
    @DefaultMessage("Public")
    String ecommercePublic();
    @DefaultMessage("Quote History")
    String ecommerceQuoteHistory();
    @DefaultMessage("Rate")
    String ecommerceRate();
    @DefaultMessage("Estimation")
    String ecommerceRating();
    @DefaultMessage("Read")
    String ecommerceRead();
    @DefaultMessage("Read Message")
    String ecommerceReadMessage();
    @DefaultMessage("Recalculate Cart")
    String ecommerceRecalculateCart();
    @DefaultMessage("Recurrence")
    String ecommerceRecurrence();
    @DefaultMessage("Register")
    String ecommerceRegister();
    @DefaultMessage("Remove Selected")
    String ecommerceRemoveSelected();
    @DefaultMessage("Replace With Variation")
    String ecommerceReplaceWithVariation();
    @DefaultMessage("Request History")
    String ecommerceRequestHistory();
    @DefaultMessage("Respond")
    String ecommerceRespond();
    @DefaultMessage("Responses")
    String ecommerceResponses();
    @DefaultMessage("Return Request")
    String ecommerceReturnRequest();
    @DefaultMessage("Return Request Accepted")
    String ecommerceReturnRequestAccepted();
    @DefaultMessage("Return Request Cancelled")
    String ecommerceReturnRequestCancelled();
    @DefaultMessage("Return Request Completed")
    String ecommerceReturnRequestCompleted();
    @DefaultMessage("Return Request Nb")
    String ecommerceReturnRequestNb();
    @DefaultMessage("Search Number")
    String ecommerceSearchNumber();
    @DefaultMessage("See Store Policies Here")
    String ecommerceSeeStorePoliciesHere();
    @DefaultMessage("Select Frequency")
    String ecommerceSelectFrequency();
    @DefaultMessage("Select Interval")
    String ecommerceSelectInterval();
    @DefaultMessage("Selected Gift Wrap")
    String ecommerceSelectedGiftWrap();
    @DefaultMessage("Sent Date")
    String ecommerceSentDate();
    @DefaultMessage("Set Default")
    String ecommerceSetDefault();
    @DefaultMessage("Shipment Items")
    String ecommerceShipmentItems();
    @DefaultMessage("Shopping List Detail")
    String ecommerceShoppingListDetail();
    @DefaultMessage("Shopping List Empty")
    String ecommerceShoppingListEmpty();
    @DefaultMessage("Shopping List Error")
    String ecommerceShoppingListError();
    @DefaultMessage("Shopping List Price Totals")
    String ecommerceShoppingListPriceTotals();
    @DefaultMessage("Shopping List Reorder")
    String ecommerceShoppingListReorder();
    @DefaultMessage("Shopping Lists")
    String ecommerceShoppingLists();
    @DefaultMessage("Short Name")
    String ecommerceShortName();
    @DefaultMessage("Short Subject")
    String ecommerceShortSubject();
    @DefaultMessage("Sign Up For Contact List")
    String ecommerceSignUpForContactList();
    @DefaultMessage("Sign Up For Contact List Comments")
    String ecommerceSignUpForContactListComments();
    @DefaultMessage("Sign Up For Contact List LogIn")
    String ecommerceSignUpForContactListLogIn();
    @DefaultMessage("Silver")
    String ecommerceSilver();
    @DefaultMessage("Sorry, digital product upload is not enabled.")
    String ecommerceSorryDigitalProductUploadNotEnabled();
    @DefaultMessage("Start")
    String ecommerceStartDate();
    @DefaultMessage("Start date")
    String ecommerceStartdate();
    @DefaultMessage("Step")
    String ecommerceStep();
    @DefaultMessage("Subject")
    String ecommerceSubject();
    @DefaultMessage("Subscribe")
    String ecommerceSubscribe();
    @DefaultMessage("Subscription Verify Email")
    String ecommerceSubscriptionVerifyEmail();
    @DefaultMessage("Summary")
    String ecommerceSummary();
    @DefaultMessage("Summary Information")
    String ecommerceSummaryInformation();
    @DefaultMessage("Surveys")
    String ecommerceSurveys();
    @DefaultMessage("Take Survey")
    String ecommerceTakeSurvey();
    @DefaultMessage("Tell A Friend")
    String ecommerceTellAFriend();
    @DefaultMessage("Tell A Friend Sorry")
    String ecommerceTellAFriendSorry();
    @DefaultMessage("Text Only")
    String ecommerceTextOnly();
    @DefaultMessage("Thank For Registering")
    String ecommerceThankForRegistering();
    @DefaultMessage("Thank You")
    String ecommerceThankYou();
    @DefaultMessage("This email is in response to your request to have")
    String ecommerceThisEmailIsInResponseToYourRequestToHave();
    @DefaultMessage("To Order Create CustRequest From Cart")
    String ecommerceToOrderCreateCustRequestFromCart();
    @DefaultMessage("Total Price")
    String ecommerceTotalPrice();
    @DefaultMessage("Unit Price")
    String ecommerceUnitPrice();
    @DefaultMessage("Unsubscribe")
    String ecommerceUnsubscribe();
    @DefaultMessage("Unsupported Question Type")
    String ecommerceUnsupportedQuestionType();
    @DefaultMessage("Update Digital Product")
    String ecommerceUpdateDigitalProduct();
    @DefaultMessage("Update Survey")
    String ecommerceUpdateSurvey();
    @DefaultMessage("Upload New File")
    String ecommerceUploadNewFile();
    @DefaultMessage("Use Email Address")
    String ecommerceUseEmailAddress();
    @DefaultMessage("Variation To Cart")
    String ecommerceVariationToCart();
    @DefaultMessage("Verify Subscription")
    String ecommerceVerifySubscription();
    @DefaultMessage("View All")
    String ecommerceViewAll();
    @DefaultMessage("View List")
    String ecommerceViewList();
    @DefaultMessage("View Received Only")
    String ecommerceViewReceivedOnly();
    @DefaultMessage("View Sent")
    String ecommerceViewSent();
    @DefaultMessage("You Have")
    String ecommerceYouHave();
    @DefaultMessage("You Have Been Sent")
    String ecommerceYouHaveBeenSent();
    @DefaultMessage("You Might Also Be Interested In")
    String ecommerceYouMightAlsoIntrested();
    @DefaultMessage("You Might Like")
    String ecommerceYouMightLike();
    @DefaultMessage("your")
    String ecommerceYour();
    @DefaultMessage("Your Card Number")
    String ecommerceYourCardNumber();
    @DefaultMessage("Your Gift Card")
    String ecommerceYourGiftCard();
    @DefaultMessage("Your Gift Card Reloaded Have")
    String ecommerceYourGiftCardReloaded();
    @DefaultMessage("Your Pin Number")
    String ecommerceYourPinNumber();
    @DefaultMessage("Your Shopping Cart Empty")
    String ecommerceYourShoppingCartEmpty();
    @DefaultMessage("Email Address")
    String emailAddress();
    @DefaultMessage("English")
    String en();
    @DefaultMessage("British English")
    String en_GB();
    @DefaultMessage("Commission Timing")
    String enumerationType_description_COMM_TIMING_TERM();
    @DefaultMessage("Data Transformation Type")
    String enumerationType_description_DATA_TRANSFORM();
    @DefaultMessage("Warranty Options")
    String enumerationType_description_WARRANTY();
    @DefaultMessage("When customer sales invoice is ready")
    String enumeration_description_COMM_AT_INVOICE();
    @DefaultMessage("When customer payment is confirmed")
    String enumeration_description_COMM_AT_PAYMENT();
    @DefaultMessage("Encumbrance and GL Account Trans Entry")
    String enumeration_description_ENCUMB_GL_ENTRY();
    @DefaultMessage("Full Warranty")
    String enumeration_description_WARRANTY_FULL();
    @DefaultMessage("Limited Warranty")
    String enumeration_description_WARRANTY_LIMITED();
    @DefaultMessage("Parts Only")
    String enumeration_description_WARRANTY_PARTS();
    @DefaultMessage("Private")
    String enumeration_description_WES_CONFIDENTIAL();
    @DefaultMessage("Public")
    String enumeration_description_WES_PUBLIC();
    @DefaultMessage("Spanish")
    String es();
    @DefaultMessage("Example")
    String example();
    @DefaultMessage("Example Ext")
    String exampleExt();
    @DefaultMessage("Export to Excel")
    String exportToExcel();
    @DefaultMessage("Facility")
    String facility();
    @DefaultMessage("Actual shipping charges")
    String facilityActualShippingCharges();
    @DefaultMessage("Billing address is the same as the shipping address")
    String facilityBillingAddressSameShipping();
    @DefaultMessage("OFBiz: Facility Manager")
    String facilityCompanyName();
    @DefaultMessage("Part of the Open For Business Family of Open Source Software")
    String facilityCompanySubtitle();
    @DefaultMessage("Estimated shipping charges")
    String facilityEstimatedShippingCharges();
    @DefaultMessage("Facility")
    String facilityFacility();
    @DefaultMessage("Group by number of order items")
    String facilityGroupByNoOfOrderItems();
    @DefaultMessage("Group by shipping method")
    String facilityGroupByShippingMethod();
    @DefaultMessage("Group by warehouse area")
    String facilityGroupByWarehouseArea();
    @DefaultMessage("Group Name")
    String facilityGroupName();
    @DefaultMessage("Management Structure")
    String facilityGroupType_description_MGMT_STRUCTURE();
    @DefaultMessage("Pricing Group")
    String facilityGroupType_description_PRICING_GROUP();
    @DefaultMessage("Hold Shipment")
    String facilityHoldShipment();
    @DefaultMessage("Inventory")
    String facilityInventory();
    @DefaultMessage("Inventory History Report")
    String facilityInventoryHistoryReport();
    @DefaultMessage("Multiple Locations")
    String facilityMultipleLocations();
    @DefaultMessage("No Facility")
    String facilityNoFacility();
    @DefaultMessage("No Grouping")
    String facilityNoGrouping();
    @DefaultMessage("Use Default: No other shipping methods available.")
    String facilityNoOtherShippingMethods();
    @DefaultMessage("Items less than 3")
    String facilityNumberOfItemsLessThanThree();
    @DefaultMessage("Items 3 or more")
    String facilityNumberOfItemsThreeOrMore();
    @DefaultMessage("Select Options To Group")
    String facilitySelectOptionsToGroupBy();
    @DefaultMessage("Facility Selection")
    String facilitySelection();
    @DefaultMessage("Ship")
    String facilityShip();
    @DefaultMessage("Please ship items I ordered as they become available (you may incur additional shipping charges).")
    String facilityShipAvailable();
    @DefaultMessage("Ship all at once, or ''as available''?")
    String facilityShipOnceOrAvailable();
    @DefaultMessage("Config Properties (deprecated use)")
    String facilityShipmentConfigProps();
    @DefaultMessage("FacilityShipmentCreatedAndMarkedAsPacked")
    String facilityShipmentCreatedAndMarkedAsPacked(String shipmentId);
    @DefaultMessage("Shipment Custom Method")
    String facilityShipmentCustomMethod();
    @DefaultMessage("Your DHL ShipIT Account Number")
    String facilityShipmentDhlAccessAccountNbr();
    @DefaultMessage("Your DHL ShipIT Access Password")
    String facilityShipmentDhlAccessPassword();
    @DefaultMessage("Your DHL ShipIT Shipping Key")
    String facilityShipmentDhlAccessShippingKey();
    @DefaultMessage("Your DHL ShipIT User Id")
    String facilityShipmentDhlAccessUserId();
    @DefaultMessage("Conntect Timeout")
    String facilityShipmentDhlConnectTimeout();
    @DefaultMessage("Conntect URL")
    String facilityShipmentDhlConnectUrl();
    @DefaultMessage("Head action attribute")
    String facilityShipmentDhlHeadAction();
    @DefaultMessage("Request")
    String facilityShipmentDhlHeadActionRequest();
    @DefaultMessage("Head version attribute")
    String facilityShipmentDhlHeadVersion();
    @DefaultMessage("Label Image Format")
    String facilityShipmentDhlLabelImageFormat();
    @DefaultMessage("PNG")
    String facilityShipmentDhlLabelImageFormatPng();
    @DefaultMessage("Rate Estimate API schema")
    String facilityShipmentDhlRateEstimate();
    @DefaultMessage("Access Account Number")
    String facilityShipmentFedexAccessAccountNumber();
    @DefaultMessage("Access Meter Number")
    String facilityShipmentFedexAccessMeterNumber();
    @DefaultMessage("Access User Key")
    String facilityShipmentFedexAccessUserKey();
    @DefaultMessage("Access User Password")
    String facilityShipmentFedexAccessUserPwd();
    @DefaultMessage("Conntect Soap URL")
    String facilityShipmentFedexConnectSoapUrl();
    @DefaultMessage("Conntect Timeout")
    String facilityShipmentFedexConnectTimeout();
    @DefaultMessage("Conntect URL")
    String facilityShipmentFedexConnectUrl();
    @DefaultMessage("Dropoff Type")
    String facilityShipmentFedexDropoffType();
    @DefaultMessage("Business Service Center")
    String facilityShipmentFedexDropoffTypeBusinessService();
    @DefaultMessage("Drop-Box")
    String facilityShipmentFedexDropoffTypeDropBox();
    @DefaultMessage("Regular Pickup")
    String facilityShipmentFedexDropoffTypeRegularPickup();
    @DefaultMessage("Request Courier")
    String facilityShipmentFedexDropoffTypeRequestCourier();
    @DefaultMessage("Station")
    String facilityShipmentFedexDropoffTypeStation();
    @DefaultMessage("Label Image Type")
    String facilityShipmentFedexLabelImageType();
    @DefaultMessage("PDF")
    String facilityShipmentFedexLabelImageTypePdf();
    @DefaultMessage("PNG")
    String facilityShipmentFedexLabelImageTypePng();
    @DefaultMessage("10KG Box")
    String facilityShipmentFedexPackingBox10Kg();
    @DefaultMessage("25KG Box")
    String facilityShipmentFedexPackingBox25Kg();
    @DefaultMessage("Box Large")
    String facilityShipmentFedexPackingBoxLarge();
    @DefaultMessage("Box Medium")
    String facilityShipmentFedexPackingBoxMedium();
    @DefaultMessage("Box Small")
    String facilityShipmentFedexPackingBoxSmall();
    @DefaultMessage("Enveloper")
    String facilityShipmentFedexPackingEnveloper();
    @DefaultMessage("Enveloper Legal")
    String facilityShipmentFedexPackingEnveloperLegal();
    @DefaultMessage("Pak Large")
    String facilityShipmentFedexPackingPakLarge();
    @DefaultMessage("Pak Small")
    String facilityShipmentFedexPackingPakSmall();
    @DefaultMessage("Tube")
    String facilityShipmentFedexPackingTube();
    @DefaultMessage("Packing Type")
    String facilityShipmentFedexPackingType();
    @DefaultMessage("Your Packaging")
    String facilityShipmentFedexPackingYour();
    @DefaultMessage("Rate Estimate Template Location")
    String facilityShipmentFedexRateEstimateTemplateLocation();
    @DefaultMessage("Shipment Template Location")
    String facilityShipmentFedexShipmentTemplateLocation();
    @DefaultMessage("Subscription Template Location")
    String facilityShipmentFedexSubscriptionTemplateLocation();
    @DefaultMessage("Shipment Gateway Config")
    String facilityShipmentGatewayConfig();
    @DefaultMessage("Shipment Gateway Config Description")
    String facilityShipmentGatewayConfigDescription();
    @DefaultMessage("Shipment Gateway Config Id")
    String facilityShipmentGatewayConfigId();
    @DefaultMessage("Shipment Gateway Config Type Description")
    String facilityShipmentGatewayConfigTypeDescription();
    @DefaultMessage("Shipment Gateway Config Type Id")
    String facilityShipmentGatewayConfigTypeId();
    @DefaultMessage("Shipment Gateway Config Types")
    String facilityShipmentGatewayConfigTypes();
    @DefaultMessage("FacilityShipmentIdCreated")
    String facilityShipmentIdCreated(String param_0, String param_1, String param_2);
    @DefaultMessage("No ProductStore associated with order; cannot use Quick Ship")
    String facilityShipmentMissingProductStore();
    @DefaultMessage("FacilityShipmentNoItemsAvailableToShip")
    String facilityShipmentNoItemsAvailableToShip(String param_0);
    @DefaultMessage("Warning: no shipments created; could not find anything ready and needing to be shipped.")
    String facilityShipmentNotCreated();
    @DefaultMessage("FacilityShipmentNotCreatedForExplodesOrderItems")
    String facilityShipmentNotCreatedForExplodesOrderItems(String param_0);
    @DefaultMessage("FacilityShipmentNotCreatedForNotReserveInventory")
    String facilityShipmentNotCreatedForNotReserveInventory(String param_0);
    @DefaultMessage("Shipment Service Name (deprecated use)")
    String facilityShipmentServiceName();
    @DefaultMessage("Access License Number")
    String facilityShipmentUpsAccessLicenseNumber();
    @DefaultMessage("Access Password")
    String facilityShipmentUpsAccessPassword();
    @DefaultMessage("Access User Id")
    String facilityShipmentUpsAccessUserId();
    @DefaultMessage("Allow Cash On Delivery")
    String facilityShipmentUpsAllowCod();
    @DefaultMessage("Bill Shipper Account Number")
    String facilityShipmentUpsBillShipperAccountNumber();
    @DefaultMessage("Conntect Timeout")
    String facilityShipmentUpsConnectTimeout();
    @DefaultMessage("Conntect URL")
    String facilityShipmentUpsConnectUrl();
    @DefaultMessage("Default Return Label Memo")
    String facilityShipmentUpsDefaultReturnLabelMemo();
    @DefaultMessage("Default Return Label Subject")
    String facilityShipmentUpsDefaultReturnLabelSubject();
    @DefaultMessage("Funds for Cash on Delivery")
    String facilityShipmentUpsFundsCode();
    @DefaultMessage("Max weight per package")
    String facilityShipmentUpsMaxEstimateWeight();
    @DefaultMessage("Minimum weight for a package")
    String facilityShipmentUpsMinEstimateWeight();
    @DefaultMessage("Air Service Center")
    String facilityShipmentUpsPickupAirServiceCenter();
    @DefaultMessage("Customer Counter")
    String facilityShipmentUpsPickupCustomerCounter();
    @DefaultMessage("Daily Pickup")
    String facilityShipmentUpsPickupDaily();
    @DefaultMessage("Letter Center")
    String facilityShipmentUpsPickupLetterCenter();
    @DefaultMessage("On Call Air Pickup")
    String facilityShipmentUpsPickupOnCallAir();
    @DefaultMessage("One Time Pickup")
    String facilityShipmentUpsPickupOneTime();
    @DefaultMessage("Suggested Retail Rates")
    String facilityShipmentUpsPickupSuggestedRetailRates();
    @DefaultMessage("Save Cert Info")
    String facilityShipmentUpsSaveCertInfo();
    @DefaultMessage("Save Cert Path")
    String facilityShipmentUpsSaveCertPath();
    @DefaultMessage("Secured Funds Only")
    String facilityShipmentUpsSecuredFundsOnly();
    @DefaultMessage("Shipper Number")
    String facilityShipmentUpsShipperNumber();
    @DefaultMessage("Shipper Pickup Type")
    String facilityShipmentUpsShipperPickupType();
    @DefaultMessage("Surcharge amount will be applied to each shipment package")
    String facilityShipmentUpsSurchargeAll();
    @DefaultMessage("Surcharge Amount for Cash On Delivery")
    String facilityShipmentUpsSurchargeAmount();
    @DefaultMessage("Surcharge Apply to Package")
    String facilityShipmentUpsSurchargeApplyToPackage();
    @DefaultMessage("Surcharge Currency")
    String facilityShipmentUpsSurchargeCurrencyUomId();
    @DefaultMessage("Surcharge amount will be applied to the first package in the shipment")
    String facilityShipmentUpsSurchargeFirst();
    @DefaultMessage("Surcharge will not be applied to any packages")
    String facilityShipmentUpsSurchargeNone();
    @DefaultMessage("Surcharge amount will be split between shipment packages")
    String facilityShipmentUpsSurchargeSplit();
    @DefaultMessage("Unsecured Funds Allowed")
    String facilityShipmentUpsUnsecuredFundsAllowed();
    @DefaultMessage("Access Password")
    String facilityShipmentUspsAccessPassword();
    @DefaultMessage("Access User Id")
    String facilityShipmentUspsAccessUserId();
    @DefaultMessage("Conntect Timeout")
    String facilityShipmentUspsConnectTimeout();
    @DefaultMessage("Conntect URL")
    String facilityShipmentUspsConnectUrl();
    @DefaultMessage("Estimate split into packages")
    String facilityShipmentUspsMaxEstimateWeight();
    @DefaultMessage("Shipments")
    String facilityShipments();
    @DefaultMessage("Shipping")
    String facilityShipping();
    @DefaultMessage("Shipping and Handling")
    String facilityShippingAndHandling();
    @DefaultMessage("Special Instructions")
    String facilitySpecialInstructions();
    @DefaultMessage("There is problem occured in payment capture, shipment is still in PICKED status")
    String facilityThereIsProblemOccuredInPaymentCapture();
    @DefaultMessage("Building")
    String facilityType_description_BUILDING();
    @DefaultMessage("Call Center")
    String facilityType_description_CALL_CENTER();
    @DefaultMessage("Floor")
    String facilityType_description_FLOOR();
    @DefaultMessage("Office")
    String facilityType_description_OFFICE();
    @DefaultMessage("Plant")
    String facilityType_description_PLANT();
    @DefaultMessage("Retail Store")
    String facilityType_description_RETAIL_STORE();
    @DefaultMessage("Room")
    String facilityType_description_ROOM();
    @DefaultMessage("Warehouse")
    String facilityType_description_WAREHOUSE();
    @DefaultMessage("Please wait until the entire order is ready before shipping.")
    String facilityWaitEntireOrderReady();
    @DefaultMessage("There is much difference in shipping charges")
    String facilityWarningMessageThereIsMuchDifferenceInShippingCharges();
    @DefaultMessage("This will be shown to your customers, so think of image when giving your catalog a name.")
    String fieldDescription_ProdCatalog_catalogName();
    @DefaultMessage("If specified will be prepended to image and other content paths. Should start with a slash but not end with one.")
    String fieldDescription_ProdCatalog_contentPathPrefix();
    @DefaultMessage("This will be seen by your customers. Maintain your image and message with the logo presented.")
    String fieldDescription_ProdCatalog_headerLogo();
    @DefaultMessage("This cannot be changed without re-creating the Product Catalog.")
    String fieldDescription_ProdCatalog_prodCatalogId();
    @DefaultMessage("If Y, administrators can only add products to ''Purchase Allow'' categories if they have the permission CATALOG_VIEW_ALLOW")
    String fieldDescription_ProdCatalog_purchaseAllowPermReqd();
    @DefaultMessage("The path to your distinctive style sheet which will govern the appearance of your catalog goes here.")
    String fieldDescription_ProdCatalog_styleSheet();
    @DefaultMessage("If specified will be prepended to template paths. Should start with a slash but not end with one.")
    String fieldDescription_ProdCatalog_templatePathPrefix();
    @DefaultMessage("Set this to Y if you want to give users the option to quick add products.")
    String fieldDescription_ProdCatalog_useQuickAdd();
    @DefaultMessage("If Y, administrators can only add products to ''View Allow'' categories if they have the permission CATALOG_VIEW_ALLOW")
    String fieldDescription_ProdCatalog_viewAllowPermReqd();
    @DefaultMessage("If Y then on add to cart remove all products in cart with a ProductAssoc record related to or from the product and with the PRODUCT_INCOMPATABLE type.")
    String fieldDescription_ProductStore_addToCartRemoveIncompat();
    @DefaultMessage("If Y then on add to cart remove all products in cart with a ProductAssoc record related from the product and with the PRODUCT_UPGRADE type.")
    String fieldDescription_ProductStore_addToCartReplaceUpsell();
    @DefaultMessage("If No, when a customer creates an account they will not be asked for a password and they have to wait for their account to be enabled and a password to be sent to them.")
    String fieldDescription_ProductStore_allowPassword();
    @DefaultMessage("Message shown when payment authorization is declined.")
    String fieldDescription_ProductStore_authDeclinedMessage();
    @DefaultMessage("Message sent when a processing error is encountered.")
    String fieldDescription_ProductStore_authErrorMessage();
    @DefaultMessage("Message sent when fraud is suspected.")
    String fieldDescription_ProductStore_authFraudMessage();
    @DefaultMessage("If Y or empty, sales invoices created from orders will be marked ready.")
    String fieldDescription_ProductStore_autoApproveInvoice();
    @DefaultMessage("If N, orders will not be automatically approved when payment is authorized.")
    String fieldDescription_ProductStore_autoApproveOrder();
    @DefaultMessage("If the site allows users to enter product reviews, this controls whether the reviews must be approved, or whether they are automatically shown on the site.")
    String fieldDescription_ProductStore_autoApproveReviews();
    @DefaultMessage("If Y, digital items will be immediately invoiced when the order is placed.")
    String fieldDescription_ProductStore_autoInvoiceDigitalItems();
    @DefaultMessage("For auto-orders try other Credit Card expiration dates (if date is wrong or general failure where type not known).")
    String fieldDescription_ProductStore_autoOrderCcTryExp();
    @DefaultMessage("For auto-orders if Credit Cards fails for NSF try again how many times.")
    String fieldDescription_ProductStore_autoOrderCcTryLaterMax();
    @DefaultMessage("For auto-orders if Credit Cards fails for NSF (Not Sufficient Funds) try again later.")
    String fieldDescription_ProductStore_autoOrderCcTryLaterNsf();
    @DefaultMessage("For auto-orders try other Credit Cards for the customer.")
    String fieldDescription_ProductStore_autoOrderCcTryOtherCards();
    @DefaultMessage("Drop-down Y/N box on the question of automatically saving the contents of the shopping cart.")
    String fieldDescription_ProductStore_autoSaveCart();
    @DefaultMessage("If set to Y, when a new sales order is created with backordered items, then reservations on the facility/product are reassigned according to the priority given by the shipBeforeDate field.")
    String fieldDescription_ProductStore_balanceResOnOrderCreation();
    @DefaultMessage("This determines whether the system checks inventory levels when processing an order.")
    String fieldDescription_ProductStore_checkInventory();
    @DefaultMessage("This is the name of the company that this catalog represents.")
    String fieldDescription_ProductStore_companyName();
    @DefaultMessage("Triggers cancellation of orders for non-payment after the number of days entered here.")
    String fieldDescription_ProductStore_daysToCancelNonPay();
    @DefaultMessage("Which national currency will be used if none is specified. Use webtools to find codes for non-US locations.")
    String fieldDescription_ProductStore_defaultCurrencyUomId();
    @DefaultMessage("Default locale, for language, number, and currency formats.")
    String fieldDescription_ProductStore_defaultLocaleString();
    @DefaultMessage("If you allow others access with a password, what is the default password that anyone could use if they knew it?")
    String fieldDescription_ProductStore_defaultPassword();
    @DefaultMessage("Unless the sales channel has been specified in the transaction, it will be assumed that the sale came in through the selected path.")
    String fieldDescription_ProductStore_defaultSalesChannelEnumId();
    @DefaultMessage("Which Category of Digital Products may be uploaded?")
    String fieldDescription_ProductStore_digProdUploadCategoryId();
    @DefaultMessage("What to set order items status to when Digital Item orders are approved, declined, or canceled. Based on the standard defined status codes in Open for Business.")
    String fieldDescription_ProductStore_digitalItemApprovedStatus();
    @DefaultMessage("The auto-suggestion list is a special ShoppingList that the addSuggestionsToShoppingList service will maintain for cross-sells of ordered items.")
    String fieldDescription_ProductStore_enableAutoSuggestionList();
    @DefaultMessage("Unless this is set to Yes, the sale of Digital Products from your Store will not be permitted.")
    String fieldDescription_ProductStore_enableDigProdUpload();
    @DefaultMessage("If set to Y then any shopping cart item with a quantity greater than one will be split into separate order items with a quantity of 1 each.")
    String fieldDescription_ProductStore_explodeOrderItems();
    @DefaultMessage("This is the message you want your customers to see when their order is approved.")
    String fieldDescription_ProductStore_headerApprovedStatus();
    @DefaultMessage("This is the message that you want the client to see when their order is cancelled.")
    String fieldDescription_ProductStore_headerCancelStatus();
    @DefaultMessage("This is the message you want your customers to see when their order is declined. Based on the standard defined status codes in Open for Business.")
    String fieldDescription_ProductStore_headerDeclinedStatus();
    @DefaultMessage("This is where the stock levels are drawn from.")
    String fieldDescription_ProductStore_inventoryFacilityId();
    @DefaultMessage("If Yes, any orders created will not be sent, credit card charges will not be made, etc.")
    String fieldDescription_ProductStore_isDemoStore();
    @DefaultMessage("If Yes, the order will be immediately fulfilled through system-generated processes in ofbiz (e.g. for POS sales).  If no, it will be held for manual review.")
    String fieldDescription_ProductStore_isImmediatelyFulfilled();
    @DefaultMessage("What to set order items status to when orders are approved, declined, or canceled. Based on the standard defined status codes in Open for Business.")
    String fieldDescription_ProductStore_itemApprovedStatus();
    @DefaultMessage("The message shown when an item they ordered is cancelled.")
    String fieldDescription_ProductStore_itemCancelStatus();
    @DefaultMessage("This is the message you want the customer to see when one of their items is declined for some reason.")
    String fieldDescription_ProductStore_itemDeclinedStatus();
    @DefaultMessage("Drop-down Y/N box on the question of whether a Manual Authorization is captured.")
    String fieldDescription_ProductStore_manualAuthIsCapture();
    @DefaultMessage("If this is a ''Single Inventory'' facility. With newer or less complex businesses, you will find the Single Inventory concept much easier to work with.")
    String fieldDescription_ProductStore_oneInventoryFacility();
    @DefaultMessage("All orders will be prefixed by this. For example, if you wished accounting to be able to quickly differentiate orders between stores.")
    String fieldDescription_ProductStore_orderNumberPrefix();
    @DefaultMessage("Note that this corresponds with the organizationPartyId that GL transactions will be posted to.")
    String fieldDescription_ProductStore_payToPartyId();
    @DefaultMessage("What group this store belongs to. Stores can be grouped together with a price for each store group. It can be left blank if there are no store groups set up.")
    String fieldDescription_ProductStore_primaryStoreGroupId();
    @DefaultMessage("If set to Y an additional constraint will of isVariant!=Y will be added to all product searches for the store.")
    String fieldDescription_ProductStore_prodSearchExcludeVariants();
    @DefaultMessage("The id for the product store..")
    String fieldDescription_ProductStore_productStoreId();
    @DefaultMessage("When some share of the cost of shipping is covered under an account other than the bill-to.")
    String fieldDescription_ProductStore_prorateShipping();
    @DefaultMessage("If set to Y return will automatically go to the Received status when Accepted instead of waiting for actual receipt of the return.")
    String fieldDescription_ProductStore_reqReturnInventoryReceive();
    @DefaultMessage("Require Shipping Address for Digital Items? Note this only has an effect if there are ONLY digital goods in the cart.")
    String fieldDescription_ProductStore_reqShipAddrForDigItems();
    @DefaultMessage("If set to Y then the customer must be associated with the store in the Customer role in order to be able to login (e.g. B2B)")
    String fieldDescription_ProductStore_requireCustomerRole();
    @DefaultMessage("If sufficient inventory not on hand, order will not be processed when this flag is set to Yes.")
    String fieldDescription_ProductStore_requireInventory();
    @DefaultMessage("Refers to warehouse stocking level triggers.")
    String fieldDescription_ProductStore_requirementMethodEnumId();
    @DefaultMessage("Causes inventory to be reserved for items ordered in the store. The inventory may still be on hand but will no longer be available for other orders.")
    String fieldDescription_ProductStore_reserveInventory();
    @DefaultMessage("Choose how inventory should be reserved.")
    String fieldDescription_ProductStore_reserveOrderEnumId();
    @DefaultMessage("How many times can an unsuccessful attempt to authorize an order be allowed?")
    String fieldDescription_ProductStore_retryFailedAuths();
    @DefaultMessage("If Yes, allows customer to pay for some order items with one payment type, others with another type.")
    String fieldDescription_ProductStore_selectPaymentTypePerItem();
    @DefaultMessage("If Y or empty, set the inventory item owner upon issuance.")
    String fieldDescription_ProductStore_setOwnerUponIssuance();
    @DefaultMessage("If N, the captureOrderPayments will cause a service error if credit card capture fails.")
    String fieldDescription_ProductStore_shipIfCaptureFails();
    @DefaultMessage("If set to N the options related to gifts (the ''is gift'' and ''gift message'' options) will not be shown during checkout.")
    String fieldDescription_ProductStore_showCheckoutGiftOptions();
    @DefaultMessage("If N then out of stock products will not be displayed on site")
    String fieldDescription_ProductStore_showOutOfStockProducts();
    @DefaultMessage("Should the displayed prices include (Y) or not include (N) the VAT Tax amount?")
    String fieldDescription_ProductStore_showPricesWithVatTax();
    @DefaultMessage("Will it be appropriate to indicate when an item is exempt from tax?")
    String fieldDescription_ProductStore_showTaxIsExempt();
    @DefaultMessage("If Y then before the order is stored the OrderPaymentPreference record will be split, one for each OrderItemShipGroup.")
    String fieldDescription_ProductStore_splitPayPrefPerShpGrp();
    @DefaultMessage("Specify the type (Billing Account or Financial Account) of Store Credit Account used for refund return.")
    String fieldDescription_ProductStore_storeCreditAccountEnumId();
    @DefaultMessage("How many days that store credit is valid for. Null value implies no expiration.")
    String fieldDescription_ProductStore_storeCreditValidDays();
    @DefaultMessage("This is the name of the store that this catalog represents.")
    String fieldDescription_ProductStore_storeName();
    @DefaultMessage("This value gets displayed in the header section of the ecommerce store.")
    String fieldDescription_ProductStore_subtitle();
    @DefaultMessage("This value gets displayed in the header section of the ecommerce store.")
    String fieldDescription_ProductStore_title();
    @DefaultMessage("If set to Y then in the create customer form no entry box will be presented for a username - the primary email address will be used for username.")
    String fieldDescription_ProductStore_usePrimaryEmailUsername();
    @DefaultMessage("What is the Geographical ID for the VAT taxing authority?")
    String fieldDescription_ProductStore_vatTaxAuthGeoId();
    @DefaultMessage("What is the Party ID of the Vat Taxing Authority?")
    String fieldDescription_ProductStore_vatTaxAuthPartyId();
    @DefaultMessage("Controls whether the user is taken to the shopping cart immediately after adding a product to his cart.")
    String fieldDescription_ProductStore_viewCartOnAdd();
    @DefaultMessage("For controlling the look and feel and a web-based store.")
    String fieldDescription_ProductStore_visualThemeId();
    @DefaultMessage("Payment Term")
    String financialPaymentTerm();
    @DefaultMessage("Select a Payment Method")
    String financialSelectPaymentMethod();
    @DefaultMessage("Financials")
    String financials();
    @DefaultMessage("Account Activities Detail")
    String financialsAccountActivitiesDetail();
    @DefaultMessage("Account Balance")
    String financialsAccountBalance();
    @DefaultMessage("Account Code/Name")
    String financialsAccountCodeName();
    @DefaultMessage("Account Total")
    String financialsAccountTotal();
    @DefaultMessage("Account Type Total")
    String financialsAccountTypeTotal();
    @DefaultMessage("Accounting Tags Usage")
    String financialsAccountingTagUsage();
    @DefaultMessage("Accounting Tags")
    String financialsAccountingTags();
    @DefaultMessage("Tags Must Balance")
    String financialsAccountingTagsMustBalance();
    @DefaultMessage("Accounting Tags Posting Checks")
    String financialsAccountingTagsPostingChecks();
    @DefaultMessage("Accounting Tags Report")
    String financialsAccountingTagsReport();
    @DefaultMessage("Acctg Trans Id")
    String financialsAcctgTransactionId();
    @DefaultMessage("Activities")
    String financialsActivities();
    @DefaultMessage("Activity Code")
    String financialsActivityCode();
    @DefaultMessage("Add Existing Account")
    String financialsAddExistingAccount();
    @DefaultMessage("Add Existing Account for")
    String financialsAddExistingAccountFor();
    @DefaultMessage("Add Account Type for")
    String financialsAddGlAccountType();
    @DefaultMessage("Create New Account for")
    String financialsAddNewAccountFor();
    @DefaultMessage("Add Payment Methods for")
    String financialsAddPaymentMethodsFor();
    @DefaultMessage("Add Sub Account")
    String financialsAddSubAccount();
    @DefaultMessage("Add Sub Account for")
    String financialsAddSubAccountFor();
    @DefaultMessage("Adjust Inventory Values")
    String financialsAdjustInventoryValues();
    @DefaultMessage("Adjust Values")
    String financialsAdjustValues();
    @DefaultMessage("Adjustment")
    String financialsAdjustment();
    @DefaultMessage("Adjustment Amount")
    String financialsAdjustmentAmount();
    @DefaultMessage("Adjustment Type")
    String financialsAdjustmentType();
    @DefaultMessage("Adjustments applied")
    String financialsAdjustmentsApplied();
    @DefaultMessage("Adjustments applied to this invoice")
    String financialsAdjustmentsAppliedToInvoice();
    @DefaultMessage("Age Date")
    String financialsAgeDate();
    @DefaultMessage("ADJUSTED")
    String financialsAmountAdjustedCapital();
    @DefaultMessage("Not Fully Applied")
    String financialsAmountNotFullyApplied();
    @DefaultMessage("Outstanding")
    String financialsAmountOutstanding();
    @DefaultMessage("OUTSTANDING")
    String financialsAmountOutstandingCapital();
    @DefaultMessage("PAID")
    String financialsAmountPaidCapital();
    @DefaultMessage("Amount to Apply")
    String financialsAmountToApply();
    @DefaultMessage("Amount to Pay")
    String financialsAmountToPay();
    @DefaultMessage("Analysis")
    String financialsAnalysis();
    @DefaultMessage("Annualized Turnover")
    String financialsAnnualizedInventoryTurnover();
    @DefaultMessage("Financials")
    String financialsApplication();
    @DefaultMessage("Apply payment to GL Account")
    String financialsApplyPaymentToGlAccount();
    @DefaultMessage("Apply payment to invoices")
    String financialsApplyPaymentToInvoice();
    @DefaultMessage("Apply payment for taxes")
    String financialsApplyPaymentToTaxAuth();
    @DefaultMessage("Apply to Customer Credit")
    String financialsApplyToBillingAccount();
    @DefaultMessage("Apply to Invoices")
    String financialsApplyToInvoices();
    @DefaultMessage("Assess Finance Charges")
    String financialsAssessFinanceCharges();
    @DefaultMessage("At a Glance")
    String financialsAtAGlance();
    @DefaultMessage("Payables Average DSO Report")
    String financialsAverageDSOReportPayables();
    @DefaultMessage("Receivables Average DSO Report")
    String financialsAverageDSOReportReceivables();
    @DefaultMessage("Average Inventory")
    String financialsAverageInventoryValue();
    @DefaultMessage("Balance")
    String financialsBalance();
    @DefaultMessage("Balance Sheet")
    String financialsBalanceSheet();
    @DefaultMessage("Budget vs. Actual plus Encumbrances Report")
    String financialsBalanceStatement();
    @DefaultMessage("with balances over 5% of total")
    String financialsBalancesByCustomerTitle();
    @DefaultMessage("Beginning Cash Balance")
    String financialsBeginningCashBalance();
    @DefaultMessage("Beginning On")
    String financialsBeginningOn();
    @DefaultMessage("Maximum which can be charged to the credit account in the currency of the organization")
    String financialsBillingAccountAccountLimitTip();
    @DefaultMessage("This account has been fully used")
    String financialsBillingAccountFullyUsed();
    @DefaultMessage("Paycheck ID is missing")
    String financialsBshErrorPaycheckIdIsMissing();
    @DefaultMessage("FinancialsBshErrorPaycheckNotFound")
    String financialsBshErrorPaycheckNotFound(String paymentId);
    @DefaultMessage("FinancialsBshErrorThisPaymentIsNotAPaycheck")
    String financialsBshErrorThisPaymentIsNotAPaycheck(String paymentId);
    @DefaultMessage("Budget")
    String financialsBudget();
    @DefaultMessage("Budget versus Actual Expenses by GL Account")
    String financialsBudgetVsActualExpensesByGLAccount();
    @DefaultMessage("Budget versus Actual Expenses Details")
    String financialsBudgetVsActualExpensesDetails();
    @DefaultMessage("Budget Versus Actual Expenses by GL Account Type")
    String financialsBudgetVsActualExpensesbyGLAccountType();
    @DefaultMessage("Budgeting")
    String financialsBudgeting();
    @DefaultMessage("COD Commission")
    String financialsCODCommission();
    @DefaultMessage("COGS")
    String financialsCOGS();
    @DefaultMessage("Cash")
    String financialsCash();
    @DefaultMessage("Cash Equivalents")
    String financialsCashEquivalents();
    @DefaultMessage("Cash Flow Statement")
    String financialsCashFlowStatement();
    @DefaultMessage("Chart of Accounts for")
    String financialsChartOfAccountsFor();
    @DefaultMessage("Pay Multiple Vendors (Check Run)")
    String financialsCheckRun();
    @DefaultMessage("Checks to be Printed")
    String financialsChecksToPrint();
    @DefaultMessage("FinancialsClonedInvoiceDescription")
    String financialsClonedInvoiceDescription(String invoiceId);
    @DefaultMessage("Commission")
    String financialsCommission();
    @DefaultMessage("FinancialsCommissionAdjItemText")
    String financialsCommissionAdjItemText(String commissionRate, String invoiceItem_invoiceId, String invoiceItem_invoiceItemSeqId);
    @DefaultMessage("Commission Balances")
    String financialsCommissionBalancesReport();
    @DefaultMessage("Commission Invoice")
    String financialsCommissionInvoice();
    @DefaultMessage("FinancialsCommissionLineItemText")
    String financialsCommissionLineItemText(String commissionRate, String invoiceItem_description);
    @DefaultMessage("Commission Report")
    String financialsCommissionReport();
    @DefaultMessage("Commissions")
    String financialsCommissions();
    @DefaultMessage("Commissions Statement")
    String financialsCommissionsStatement();
    @DefaultMessage("Comparative Balance")
    String financialsComparativeBalance();
    @DefaultMessage("Comparative Balance Sheet")
    String financialsComparativeBalanceSheet();
    @DefaultMessage("Comparative Cash Flow Statement")
    String financialsComparativeCashFlowStatement();
    @DefaultMessage("Comparative Income Statement")
    String financialsComparativeIncomeStatement();
    @DefaultMessage("Compare Date")
    String financialsCompareDate();
    @DefaultMessage("to Date")
    String financialsCompareDateTo();
    @DefaultMessage("Compare Dates")
    String financialsCompareDates();
    @DefaultMessage("to Dates")
    String financialsCompareDatesTo();
    @DefaultMessage("Compare GL Fiscal Type")
    String financialsCompareGlFiscalType();
    @DefaultMessage("Compare Time Period")
    String financialsCompareTimePeriod();
    @DefaultMessage("to Time Period")
    String financialsCompareTimePeriodTo();
    @DefaultMessage("Configuration")
    String financialsConfiguration();
    @DefaultMessage("Configure")
    String financialsConfigure();
    @DefaultMessage("Configure Ledger")
    String financialsConfigureLedger();
    @DefaultMessage("Configure General Ledger Account for")
    String financialsConfigureLedgerAccountFor();
    @DefaultMessage("General Ledger Configuration for")
    String financialsConfigureLedgerConfigurationFor();
    @DefaultMessage("Configure a New Organization")
    String financialsConfigureNewOrganization();
    @DefaultMessage("Configure Organization")
    String financialsConfigureOrganization();
    @DefaultMessage("FinancialsConfirmInvoiceRefNumber")
    String financialsConfirmInvoiceRefNumber(String invoiceId);
    @DefaultMessage("Confirm Payments")
    String financialsConfirmPayments();
    @DefaultMessage("Confirm Sent Payments")
    String financialsConfirmSentPayments();
    @DefaultMessage("Costing Method")
    String financialsCostingMethod();
    @DefaultMessage("Create a new Time Period for")
    String financialsCreateANewTimePeriodFor();
    @DefaultMessage("Create an Accounting Tag")
    String financialsCreateAccountingTag();
    @DefaultMessage("Create Commission Agreement")
    String financialsCreateCommissionAgreement();
    @DefaultMessage("Create Commission Invoice")
    String financialsCreateCommissionInvoice();
    @DefaultMessage("Create Customer Agreement")
    String financialsCreateCustomerAgreement();
    @DefaultMessage("Create Credit Memo")
    String financialsCreateCustomerReturnInvoice();
    @DefaultMessage("Create New Account")
    String financialsCreateNewAccount();
    @DefaultMessage("Create Partner Agreement")
    String financialsCreatePartnerAgreement();
    @DefaultMessage("Create Partner Invoice")
    String financialsCreatePartnerInvoice();
    @DefaultMessage("Create Paycheck")
    String financialsCreatePaycheck();
    @DefaultMessage("Create Vendor Invoice")
    String financialsCreatePurchaseInvoice();
    @DefaultMessage("Quick Transaction")
    String financialsCreateQuickTransaction();
    @DefaultMessage("Create Sales Invoice")
    String financialsCreateSalesInvoice();
    @DefaultMessage("Create Transaction")
    String financialsCreateTransaction();
    @DefaultMessage("Create Transaction Entry")
    String financialsCreateTransactionEntry();
    @DefaultMessage("Credit Account")
    String financialsCreditAccount();
    @DefaultMessage("Credit applied to this invoice")
    String financialsCreditAppliedToInvoice();
    @DefaultMessage("Credit Card Settlements Report")
    String financialsCreditCardReport();
    @DefaultMessage("FinancialsCreditForInvoice")
    String financialsCreditForInvoice(String invoiceId);
    @DefaultMessage("Net Credit")
    String financialsCreditNet();
    @DefaultMessage("Credit Total")
    String financialsCreditTotal();
    @DefaultMessage("Credits Issued against this Credit Memo")
    String financialsCreditsIssuedAgainstInvoice();
    @DefaultMessage("Cuml Value")
    String financialsCumulativeValue();
    @DefaultMessage("Customer")
    String financialsCustomer();
    @DefaultMessage("Customer Credit Account")
    String financialsCustomerBillingAccount();
    @DefaultMessage("Apply Credit Account to Invoices")
    String financialsCustomerBillingAccountApplyToInvoices();
    @DefaultMessage("Credit Account ID")
    String financialsCustomerBillingAccountID();
    @DefaultMessage("New Customer Credit Account")
    String financialsCustomerBillingAccountNew();
    @DefaultMessage("Credit Billing Account Open Orders")
    String financialsCustomerBillingAccountOpenOrders();
    @DefaultMessage("Open Orders Total")
    String financialsCustomerBillingAccountOpenOrdersTotal();
    @DefaultMessage("Credit Account Transactions")
    String financialsCustomerBillingAccountTransactions();
    @DefaultMessage("Customer Credit Accounts")
    String financialsCustomerBillingAccounts();
    @DefaultMessage("Customer Code")
    String financialsCustomerCode();
    @DefaultMessage("Customer Credit Account")
    String financialsCustomerCreditAccount();
    @DefaultMessage("Customer ID")
    String financialsCustomerId();
    @DefaultMessage("Customer Party")
    String financialsCustomerParty();
    @DefaultMessage("Customer Credit Memo")
    String financialsCustomerReturnInvoice();
    @DefaultMessage("Customer Statement")
    String financialsCustomerStatement();
    @DefaultMessage("Calculate Statement by")
    String financialsCustomerStatementDateBasis();
    @DefaultMessage("Customers")
    String financialsCustomers();
    @DefaultMessage("Average DSO")
    String financialsDSOAverage();
    @DefaultMessage("Value Weighted DSO")
    String financialsDSOWeighted();
    @DefaultMessage("Dashboard")
    String financialsDashboard();
    @DefaultMessage("Days Outstanding")
    String financialsDaysOutstanding();
    @DefaultMessage("Deactivate")
    String financialsDeactivate();
    @DefaultMessage("Debit Account")
    String financialsDebitAccount();
    @DefaultMessage("Debit/Credit")
    String financialsDebitCredit();
    @DefaultMessage("Net Debit")
    String financialsDebitNet();
    @DefaultMessage("Debit Total")
    String financialsDebitTotal();
    @DefaultMessage("For demo purposes, select \"Your Company Name Here (Company)\" from the above list")
    String financialsDefaultCompanyForDemo();
    @DefaultMessage("Default Cost")
    String financialsDefaultCost();
    @DefaultMessage("Due Date Before")
    String financialsDueDateBefore();
    @DefaultMessage("Edit Paycheck")
    String financialsEditPaycheck();
    @DefaultMessage("Employees")
    String financialsEmployees();
    @DefaultMessage("Refresh Data")
    String financialsEncumbranceRefresh();
    @DefaultMessage("Encumbrances")
    String financialsEncumbrances();
    @DefaultMessage("Ending Cash Balance")
    String financialsEndingCashBalance();
    @DefaultMessage("Ending On")
    String financialsEndingOn();
    @DefaultMessage("Enter New Rate")
    String financialsEnterNewRate();
    @DefaultMessage("Statement of Equity")
    String financialsEquityStatement();
    @DefaultMessage("FinancialsErrorBillingAccountCurrencyDifferent")
    String financialsErrorBillingAccountCurrencyDifferent(String billingAccountId, String billingAccountCurrency, String invoiceId, String invoiceCurrencyUomId);
    @DefaultMessage("FinancialsErrorBillingAccountNotFound")
    String financialsErrorBillingAccountNotFound(String billingAccountId);
    @DefaultMessage("FinancialsErrorInvoiceTypeNotSupported")
    String financialsErrorInvoiceTypeNotSupported(String invoiceTypeId);
    @DefaultMessage("FinancialsErrorNoActiveLedgerForParty")
    String financialsErrorNoActiveLedgerForParty(String partyId);
    @DefaultMessage("FinancialsErrorNoInvoiceValue")
    String financialsErrorNoInvoiceValue(String invoiceId);
    @DefaultMessage("FinancialsErrorPropertyNotConfigured")
    String financialsErrorPropertyNotConfigured(String propertyName, String resource);
    @DefaultMessage("FinancialsErrorSavingInvoicePDF")
    String financialsErrorSavingInvoicePDF(String invoiceId, String path);
    @DefaultMessage("Cannot invoice partner.  Either an agreement must be specified or the organization and the partner.")
    String financialsError_AgreementOrPartiesMissing();
    @DefaultMessage("FinancialsError_BadDebitCreditFlag")
    String financialsError_BadDebitCreditFlag(String debitCreditFlag, String acctgTransId, String acctgTransEntrySeqId);
    @DefaultMessage("Failed to create comparative balance sheet.")
    String financialsError_CannotCreateComparativeBalanceSheet();
    @DefaultMessage("Cannot create a comparative balance sheet for a from date that is after the thru date!")
    String financialsError_CannotCreateComparativeBalanceSheetFromDateAfterThruDate();
    @DefaultMessage("Failed to create comparative cash flow statement.")
    String financialsError_CannotCreateComparativeCashFlowStatement();
    @DefaultMessage("Cannot create a comparative cash flow statement for a from date that is after the thru date!")
    String financialsError_CannotCreateComparativeCashFlowStatementFromDateAfterThruDate();
    @DefaultMessage("Failed to create comparative income statement.")
    String financialsError_CannotCreateComparativeIncomeStatement();
    @DefaultMessage("Cannot create a comparative income statement for a from date that is after the thru date!")
    String financialsError_CannotCreateComparativeIncomeStatementFromDateAfterThruDate();
    @DefaultMessage("FinancialsError_CannotDeleteInUseAccoutingTag")
    String financialsError_CannotDeleteInUseAccoutingTag(String tag_description);
    @DefaultMessage("FinancialsError_CannotFindPaymentId")
    String financialsError_CannotFindPaymentId(String paymentId);
    @DefaultMessage("FinancialsError_CannotPostAlreadyPosted")
    String financialsError_CannotPostAlreadyPosted(String acctgTransId);
    @DefaultMessage("FinancialsError_CannotPostFailedTagBalance")
    String financialsError_CannotPostFailedTagBalance(String acctgTransId, String tagIndex, String tagValue, String credit, String debit);
    @DefaultMessage("FinancialsError_CannotPostFailedTrialBalance")
    String financialsError_CannotPostFailedTrialBalance(String acctgTransId, String credit, String debit);
    @DefaultMessage("Payment cannot be posted yet because it has not been allocated as is required for your organization.")
    String financialsError_CannotPostPartiallyAllocatedPaymentToGl();
    @DefaultMessage("FinancialsError_CannotPostScheduledTransaction")
    String financialsError_CannotPostScheduledTransaction(String acctgTransId, String scheduledPostingDate);
    @DefaultMessage("FinancialsError_CannotPrintInvoiceWoOrganizationPartyId")
    String financialsError_CannotPrintInvoiceWoOrganizationPartyId(String invoiceId);
    @DefaultMessage("FinancialsError_CannotVoidInvoiceExistingPayments")
    String financialsError_CannotVoidInvoiceExistingPayments(String invoiceId);
    @DefaultMessage("FinancialsError_CannotVoidInvoiceInvalidStatus")
    String financialsError_CannotVoidInvoiceInvalidStatus(String invoiceId, String statusId);
    @DefaultMessage("Cannot mark invoice as ready.  Customer credit limit exceeded.")
    String financialsError_CreditLimitExceeded();
    @DefaultMessage("No date range or time period was given.")
    String financialsError_DateRangeMissing();
    @DefaultMessage("Start date of period is greater than the closing date.")
    String financialsError_FromDateAfterThruDate();
    @DefaultMessage("Both from and thru dates are required.")
    String financialsError_FromOrThruDateMissing();
    @DefaultMessage("FinancialsError_GLAccountClassNotConfigured")
    String financialsError_GLAccountClassNotConfigured(String glAccountClassId);
    @DefaultMessage("GL account not found.")
    String financialsError_GlAccountNotFound();
    @DefaultMessage("FinancialsError_IllegalDateFieldFormat")
    String financialsError_IllegalDateFieldFormat(String date);
    @DefaultMessage("FinancialsError_IllegalDateFormat")
    String financialsError_IllegalDateFormat(String fieldName);
    @DefaultMessage("Payment Id is invalid, Please check paymentId and try again.")
    String financialsError_IllegalPaymentId();
    @DefaultMessage("Required parameter paymentTypeId is invalid. It should be set to RECEIPT or DISBURSEMENT.")
    String financialsError_IllegalPaymentTypeId();
    @DefaultMessage("FinancialsError_InvoiceNotFound")
    String financialsError_InvoiceNotFound(String invoiceId);
    @DefaultMessage("FinancialsError_InvoiceStatusUnsupported")
    String financialsError_InvoiceStatusUnsupported(String invoiceId, String requiredStatus);
    @DefaultMessage("FinancialsError_InvoiceTypeNotSupported")
    String financialsError_InvoiceTypeNotSupported(String invoiceId, String invoiceTypeId);
    @DefaultMessage("Cannot invoice the selected invoices because there was nothing in them to invoice.")
    String financialsError_NoPartnerSalesInvoiceCreated();
    @DefaultMessage("FinancialsError_NoTimePeriodsToPost")
    String financialsError_NoTimePeriodsToPost(String transactionDate, String organizationPartyId);
    @DefaultMessage("Please select at least one partner invoice.")
    String financialsError_PartnerInvoicesMissing();
    @DefaultMessage("FinancialsError_PaymentApplicationExceedInvoiceRemainingAmount")
    String financialsError_PaymentApplicationExceedInvoiceRemainingAmount(String amountApplied, String notAppliedInvoice, String invoiceId);
    @DefaultMessage("FinancialsError_PaymentApplicationExceedPaymentRemainingAmount")
    String financialsError_PaymentApplicationExceedPaymentRemainingAmount(String amountApplied, String notAppliedPayment, String paymentId);
    @DefaultMessage("FinancialsError_PaymentApplicationExceedPaymentTotalAmount")
    String financialsError_PaymentApplicationExceedPaymentTotalAmount(String amountApplied, String paymentAmount, String paymentId);
    @DefaultMessage("The amount to apply must be greater than zero.")
    String financialsError_PaymentApplicationMustBePositive();
    @DefaultMessage("FinancialsError_ReportGlActivitySetupNoParameter")
    String financialsError_ReportGlActivitySetupNoParameter(String parameter);
    @DefaultMessage("FinancialsError_TimePeriodClosedForPosting")
    String financialsError_TimePeriodClosedForPosting(String customTimePeriodId, String transactionDate, String organizationPartyId);
    @DefaultMessage("Exchange Rate")
    String financialsExchangeRate();
    @DefaultMessage("Exchange Rates")
    String financialsExchangeRates();
    @DefaultMessage("Update Exchange Rates")
    String financialsExchangeRatesUpdate();
    @DefaultMessage("Expense")
    String financialsExpense();
    @DefaultMessage("Expenses")
    String financialsExpenses();
    @DefaultMessage("Finance Charge for Invoice")
    String financialsFinanceChargeForInvoice();
    @DefaultMessage("Finance Charges")
    String financialsFinanceCharges();
    @DefaultMessage("Financials Application")
    String financialsFinancialsApplication();
    @DefaultMessage("Financing Cash Flow")
    String financialsFinancingCashFlowAccounts();
    @DefaultMessage("Find Account Activities Detail")
    String financialsFindAccountActivitiesDetail();
    @DefaultMessage("Find Commission Agreements")
    String financialsFindCommissionAgreements();
    @DefaultMessage("Find Commission Invoices")
    String financialsFindCommissionInvoices();
    @DefaultMessage("Find Customer Agreements")
    String financialsFindCustomerAgreements();
    @DefaultMessage("Find Customer Credit Account")
    String financialsFindCustomerBillingAccount();
    @DefaultMessage("Find Credit Memos")
    String financialsFindCustomerReturnInvoices();
    @DefaultMessage("Find Finance Charges")
    String financialsFindFinanceCharges();
    @DefaultMessage("Find Lockbox Batches")
    String financialsFindLockboxBatches();
    @DefaultMessage("Find Partner Agreements")
    String financialsFindPartnerAgreements();
    @DefaultMessage("Find Partner Invoices")
    String financialsFindPartnerInvoices();
    @DefaultMessage("Find Paycheck")
    String financialsFindPaycheck();
    @DefaultMessage("Find Payment")
    String financialsFindPayment();
    @DefaultMessage("Find Vendor Invoices")
    String financialsFindPurchaseInvoices();
    @DefaultMessage("Find Sales Invoices")
    String financialsFindSalesInvoices();
    @DefaultMessage("Find Transactions")
    String financialsFindTransactions();
    @DefaultMessage("First Reconciliation for this GL Account")
    String financialsFirstReconciliationForThisAccount();
    @DefaultMessage("Fund Code")
    String financialsFundCode();
    @DefaultMessage("Account Code")
    String financialsGLAccountCode();
    @DefaultMessage("Account Name")
    String financialsGLAccountName();
    @DefaultMessage("Gateway Code")
    String financialsGatewayCode();
    @DefaultMessage("Gl Account")
    String financialsGlAccount();
    @DefaultMessage("Account Type")
    String financialsGlAccountType();
    @DefaultMessage("Gl Accounts Report")
    String financialsGlAccountsReport();
    @DefaultMessage("GL Account Activity Analysis")
    String financialsGlActivityReport();
    @DefaultMessage("GL Account Activity Analysis Report Parameters")
    String financialsGlActivitySetupTitle();
    @DefaultMessage("Fiscal Type")
    String financialsGlFiscalType();
    @DefaultMessage("Grace Period")
    String financialsGracePeriod();
    @DefaultMessage("Grand Total")
    String financialsGrandTotal();
    @DefaultMessage("Gross Amount")
    String financialsGrossAmount();
    @DefaultMessage("Gross Pay")
    String financialsGrossPay();
    @DefaultMessage("Gross Profit")
    String financialsGrossProfit();
    @DefaultMessage("Hide Child Accounts Invoices")
    String financialsHideChildAccountsInvoices();
    @DefaultMessage("Include Budgeted Incomes")
    String financialsIncludeIncomeInBudget();
    @DefaultMessage("Income")
    String financialsIncome();
    @DefaultMessage("Initial Check Number")
    String financialsInitialCheckNumber();
    @DefaultMessage("Initial Posted Balance")
    String financialsInitialPostedBalance();
    @DefaultMessage("Finance Charge")
    String financialsInterestInvoice();
    @DefaultMessage("Interest Rate")
    String financialsInterestRate();
    @DefaultMessage("INV #")
    String financialsInvNbr();
    @DefaultMessage("INV Total")
    String financialsInvTotal();
    @DefaultMessage("Ending Inventory")
    String financialsInventoryEnd();
    @DefaultMessage("Beginning Inventory")
    String financialsInventoryStart();
    @DefaultMessage("Turnover")
    String financialsInventoryTurnover();
    @DefaultMessage("Inventory Valuation Report")
    String financialsInventoryValuationReport();
    @DefaultMessage("Inventory Value By Product")
    String financialsInventoryValueByProduct();
    @DefaultMessage("Inventory Value Detail Report")
    String financialsInventoryValueDetail();
    @DefaultMessage("Investing Cash Flow")
    String financialsInvestingCashFlowAccounts();
    @DefaultMessage("Add Term")
    String financialsInvoiceAddTerm();
    @DefaultMessage("Invoice ID")
    String financialsInvoiceId();
    @DefaultMessage("Item No.")
    String financialsInvoiceItemSeqId();
    @DefaultMessage("No credits issued.")
    String financialsInvoiceNoCreditsIssued();
    @DefaultMessage("No adjustments applied to this invoice.")
    String financialsInvoiceNoInvoiceAdjustments();
    @DefaultMessage("No payments apply to this Invoice.")
    String financialsInvoiceNoPaymentApplications();
    @DefaultMessage("Invoice not found")
    String financialsInvoiceNotFound();
    @DefaultMessage("FinancialsInvoiceNotFoundWithId")
    String financialsInvoiceNotFoundWithId(String invoiceId);
    @DefaultMessage("Invoice Partners")
    String financialsInvoicePartners();
    @DefaultMessage("Invoice Performed Order Items for Order ID")
    String financialsInvoicePerformedOrderItemsForOrder();
    @DefaultMessage("Invoice Selected Invoices")
    String financialsInvoiceSelectedInvoices();
    @DefaultMessage("Invoice Service Items")
    String financialsInvoiceServiceItems();
    @DefaultMessage("Invoice Terms")
    String financialsInvoiceTerms();
    @DefaultMessage("Invoices Total")
    String financialsInvoicesTotal();
    @DefaultMessage("Is Posted")
    String financialsIsPosted();
    @DefaultMessage("Is Taxable?")
    String financialsIsTaxable();
    @DefaultMessage("Issue Checks")
    String financialsIssueChecks();
    @DefaultMessage("Last")
    String financialsLastRecurrenceDate();
    @DefaultMessage("Ledger")
    String financialsLedger();
    @DefaultMessage("Liens")
    String financialsLiens();
    @DefaultMessage("Liquidity Snapshot")
    String financialsLiquiditySnapshot();
    @DefaultMessage("Successfully set the amount to apply.")
    String financialsLockboxAmountApplied();
    @DefaultMessage("Successfully removed the amount to apply.")
    String financialsLockboxAmountRemoved();
    @DefaultMessage("Amount to Apply")
    String financialsLockboxAmountToApply();
    @DefaultMessage("Lockbox Batch Detail")
    String financialsLockboxBatchDetail();
    @DefaultMessage("Lockbox Batch Items")
    String financialsLockboxBatchItems();
    @DefaultMessage("Batch #")
    String financialsLockboxBatchNumber();
    @DefaultMessage("Cash Discount")
    String financialsLockboxCashDiscount();
    @DefaultMessage("FinancialsLockboxCommentCashDiscount")
    String financialsLockboxCommentCashDiscount(String batchId);
    @DefaultMessage("FinancialsLockboxCommentPayment")
    String financialsLockboxCommentPayment(String batchId);
    @DefaultMessage("Lockbox File")
    String financialsLockboxFile();
    @DefaultMessage("Find Lockbox")
    String financialsLockboxFind();
    @DefaultMessage("Lockbox Identitifer")
    String financialsLockboxIdentifier();
    @DefaultMessage("ERP Invoice Amount")
    String financialsLockboxInvoiceAmount();
    @DefaultMessage("Original Amount")
    String financialsLockboxOriginalAmount();
    @DefaultMessage("Amount Pending")
    String financialsLockboxPendingAmount();
    @DefaultMessage("Successfully created the user entered application.")
    String financialsLockboxUserApplicationCreated();
    @DefaultMessage("Successfully removed the user entered application.")
    String financialsLockboxUserApplicationRemoved();
    @DefaultMessage("Opentaps Financials Login")
    String financialsLoginGreeting();
    @DefaultMessage("Make Payment")
    String financialsMakePayment();
    @DefaultMessage("Manage Lockbox Batches")
    String financialsManageLockboxBatches();
    @DefaultMessage("FinancialsNavHistoryAcctgTransaction")
    String financialsNavHistoryAcctgTransaction(String acctgTransId);
    @DefaultMessage("Finance Charges")
    String financialsNavHistoryAssessFinanceCharge();
    @DefaultMessage("FinancialsNavHistoryBillingAccount")
    String financialsNavHistoryBillingAccount(String billingAccountId, String partyName);
    @DefaultMessage("FinancialsNavHistoryInvoice")
    String financialsNavHistoryInvoice(String invoiceTypeName, String invoiceId);
    @DefaultMessage("FinancialsNavHistoryLockboxBatch")
    String financialsNavHistoryLockboxBatch(String lockboxBatchId);
    @DefaultMessage("FinancialsNavHistoryPayment")
    String financialsNavHistoryPayment(String paymentTypeName, String paymentId);
    @DefaultMessage("Net Pay")
    String financialsNetPay();
    @DefaultMessage("Never")
    String financialsNever();
    @DefaultMessage("New Invoice Adjustment")
    String financialsNewInvoiceAdjustment();
    @DefaultMessage("New Invoice Item")
    String financialsNewInvoiceItem();
    @DefaultMessage("New Unit Cost")
    String financialsNewUnitCost();
    @DefaultMessage("Sorry, you do not have permission to perform this action.")
    String financialsNoConfigurationPermission();
    @DefaultMessage("There is no lockbox batch for this ID.")
    String financialsNoLockboxBatchFound();
    @DefaultMessage("There is no item for this batch.")
    String financialsNoLockboxBatchItem();
    @DefaultMessage("Sorry, you do not have permission to view Payables section.")
    String financialsNoPayablesPermission();
    @DefaultMessage("Sorry, you do not have permission to view Payment section.")
    String financialsNoPaymentPermission();
    @DefaultMessage("There is no pending lockbox batch.")
    String financialsNoPendingLockboxBatch();
    @DefaultMessage("Sorry, you do not have permission to view Receivable section.")
    String financialsNoReceivablesPermission();
    @DefaultMessage("Sorry, you do not have permission to view Reports section.")
    String financialsNoReportsPermission();
    @DefaultMessage("Sorry, you do not have permission to view Transaction section.")
    String financialsNoTransactionPermission();
    @DefaultMessage("Number of Invoices")
    String financialsNumberOfInvoices();
    @DefaultMessage("Operating Cash Flow")
    String financialsOperatingCashFlowAccounts();
    @DefaultMessage("Operating Income")
    String financialsOperatingIncome();
    @DefaultMessage("Org Code")
    String financialsOrgCode();
    @DefaultMessage("Original Balance")
    String financialsOriginalBalance();
    @DefaultMessage("Outstanding Checks")
    String financialsOutstandingChecks();
    @DefaultMessage("Outstanding Commissions")
    String financialsOutstandingCommissions();
    @DefaultMessage("Outstanding Invoices")
    String financialsOutstandingInvoices();
    @DefaultMessage("Outstanding Paychecks")
    String financialsOutstandingPaychecks();
    @DefaultMessage("Outstandings")
    String financialsOutstandings();
    @DefaultMessage("Over 120")
    String financialsOver120();
    @DefaultMessage("Over 30")
    String financialsOver30();
    @DefaultMessage("Over 60")
    String financialsOver60();
    @DefaultMessage("Over 90")
    String financialsOver90();
    @DefaultMessage("Override Account")
    String financialsOverrideGlAccount();
    @DefaultMessage("PMT Amount")
    String financialsPMTAmount();
    @DefaultMessage("PMT Date")
    String financialsPMTDate();
    @DefaultMessage("Parent Gl Account")
    String financialsParentGLAccount();
    @DefaultMessage("FinancialsPartnerSalesInvoiceAdj")
    String financialsPartnerSalesInvoiceAdj(String commissionRate);
    @DefaultMessage("FinancialsPartnerSalesInvoiceItem")
    String financialsPartnerSalesInvoiceItem(String commissionRate);
    @DefaultMessage("Party Classification")
    String financialsPartyClassification();
    @DefaultMessage("Past Due")
    String financialsPastDue();
    @DefaultMessage("Past Reconciliations")
    String financialsPastReconciliations();
    @DefaultMessage("Pay Invoice")
    String financialsPayInvoice();
    @DefaultMessage("Pay Tax")
    String financialsPayTax();
    @DefaultMessage("Pay to Party")
    String financialsPayToParty();
    @DefaultMessage("Payable Reports")
    String financialsPayableReports();
    @DefaultMessage("Payables")
    String financialsPayables();
    @DefaultMessage("Accounts Payables Aging")
    String financialsPayablesAgingReport();
    @DefaultMessage("Accounts Payable Balance")
    String financialsPayablesBalance();
    @DefaultMessage("Balances by Vendor")
    String financialsPayablesBalancesReport();
    @DefaultMessage("Make a Payment")
    String financialsPayablesPayment();
    @DefaultMessage("Make a Payment to Party ID")
    String financialsPayablesPaymentToPartyId();
    @DefaultMessage("Vendor Statement")
    String financialsPayablesStatementReport();
    @DefaultMessage("Paycheck")
    String financialsPaycheck();
    @DefaultMessage("Paycheck and Witholdings")
    String financialsPaycheckAndWitholdings();
    @DefaultMessage("Paycheck Expenses")
    String financialsPaycheckExpenses();
    @DefaultMessage("Paycheck Type")
    String financialsPaycheckType();
    @DefaultMessage("Paycheck Witholdings")
    String financialsPaycheckWitholdings();
    @DefaultMessage("Paychecks")
    String financialsPaychecks();
    @DefaultMessage("Paychecks to be Printed")
    String financialsPaychecksToPrint();
    @DefaultMessage("FinancialsPaymentApplicationToGlAccount")
    String financialsPaymentApplicationToGlAccount(String glAccountId);
    @DefaultMessage("Payment Applications")
    String financialsPaymentApplications();
    @DefaultMessage("Payment Id")
    String financialsPaymentId();
    @DefaultMessage("Payment Method")
    String financialsPaymentMethod();
    @DefaultMessage("Expire")
    String financialsPaymentMethodExpire();
    @DefaultMessage("Payment Method Type")
    String financialsPaymentMethodType();
    @DefaultMessage("Payment Methods")
    String financialsPaymentMethods();
    @DefaultMessage("Payment Methods for")
    String financialsPaymentMethodsFor();
    @DefaultMessage("Payment is not from an account")
    String financialsPaymentNotFromAccount();
    @DefaultMessage("Payment Receipts Detail")
    String financialsPaymentReceiptsDetail();
    @DefaultMessage("Ref")
    String financialsPaymentRef();
    @DefaultMessage("Check/Ref Num")
    String financialsPaymentRefNum();
    @DefaultMessage("Cancel Payment")
    String financialsPaymentStatusToCanceled();
    @DefaultMessage("Mark as Confirmed")
    String financialsPaymentStatusToConfirmed();
    @DefaultMessage("Mark as Paid")
    String financialsPaymentStatusToPaid();
    @DefaultMessage("Mark as Printed")
    String financialsPaymentStatusToPrinted();
    @DefaultMessage("Mark as Ready")
    String financialsPaymentStatusToReady();
    @DefaultMessage("Mark as Received")
    String financialsPaymentStatusToReceived();
    @DefaultMessage("Mark as Sent")
    String financialsPaymentStatusToSent();
    @DefaultMessage("Void")
    String financialsPaymentVoidPayment();
    @DefaultMessage("Payments applied to this invoice")
    String financialsPaymentsAppliedToInvoice();
    @DefaultMessage("Payments sent")
    String financialsPaymentsSent();
    @DefaultMessage("Payments to be Confirmed")
    String financialsPaymentsToConfirm();
    @DefaultMessage("Pending Lockbox Batches")
    String financialsPendingLockboxBatches();
    @DefaultMessage("Please Pay")
    String financialsPleasePay();
    @DefaultMessage("The accounting tags are not balanced, do you still want to post the transaction ?")
    String financialsPostTransactionConfirmSkipCheckTags();
    @DefaultMessage("Post Transactions")
    String financialsPostTransactions();
    @DefaultMessage("Posted Amount")
    String financialsPostedAmount();
    @DefaultMessage("Posted Balance")
    String financialsPostedBalance();
    @DefaultMessage("Posted Balances by GL Account")
    String financialsPostedBalancesByGlAccount();
    @DefaultMessage("Posted Date")
    String financialsPostedDate();
    @DefaultMessage("Pretax Income")
    String financialsPretaxIncome();
    @DefaultMessage("Previous Finance Charges")
    String financialsPreviousFinanceCharges();
    @DefaultMessage("Print Checks")
    String financialsPrintChecks();
    @DefaultMessage("Print Checks for")
    String financialsPrintChecksFor();
    @DefaultMessage("Print Paychecks for")
    String financialsPrintPaychecksFor();
    @DefaultMessage("Print Statements")
    String financialsPrintStatements();
    @DefaultMessage("Process Items")
    String financialsProcessLockboxBatch();
    @DefaultMessage("Items processed successfully.")
    String financialsProcessLockboxBatchSuccess();
    @DefaultMessage("Processing Status")
    String financialsProcessingStatus();
    @DefaultMessage("Product")
    String financialsProduct();
    @DefaultMessage("Profitability Ratio")
    String financialsProfitabilityRatio();
    @DefaultMessage("Program Code")
    String financialsProgramCode();
    @DefaultMessage("Vendor Invoice")
    String financialsPurchaseInvoice();
    @DefaultMessage("Qty")
    String financialsQty();
    @DefaultMessage("Receivable Reports")
    String financialsReceivableReports();
    @DefaultMessage("Receivables")
    String financialsReceivables();
    @DefaultMessage("Accounts Receivables Aging")
    String financialsReceivablesAgingReport();
    @DefaultMessage("Balances by Customer")
    String financialsReceivablesBalancesReport();
    @DefaultMessage("Balance")
    String financialsReceivablesBalancesReportBalance();
    @DefaultMessage("Receive a Payment")
    String financialsReceivablesPayment();
    @DefaultMessage("Receive a Payment from Party ID")
    String financialsReceivablesPaymentFromPartyId();
    @DefaultMessage("Customer Statement")
    String financialsReceivablesStatementReport();
    @DefaultMessage("Receive COD Statement")
    String financialsReceiveCODStatement();
    @DefaultMessage("Receive from Party")
    String financialsReceiveFromParty();
    @DefaultMessage("Receive Payment")
    String financialsReceivePayment();
    @DefaultMessage("Receive Payment for")
    String financialsReceivePaymentFor();
    @DefaultMessage("Receive Statement")
    String financialsReceiveStatement();
    @DefaultMessage("Received Date between")
    String financialsReceivedDateBetween();
    @DefaultMessage("Reconcile")
    String financialsReconcile();
    @DefaultMessage("Reconcile Account")
    String financialsReconcileAccount();
    @DefaultMessage("Reconcile Status")
    String financialsReconcileStatus();
    @DefaultMessage("Reconciled as of")
    String financialsReconciledAsOf();
    @DefaultMessage("Reconciled By")
    String financialsReconciledBy();
    @DefaultMessage("Reconciliation for")
    String financialsReconciliationFor();
    @DefaultMessage("Recurrence")
    String financialsRecurrence();
    @DefaultMessage("Recurring Invoices")
    String financialsRecurringInvoices();
    @DefaultMessage("Ref Num")
    String financialsReferenceNumber();
    @DefaultMessage("Related Order ID")
    String financialsRelatedOrderId();
    @DefaultMessage("Error")
    String financialsReport_Error();
    @DefaultMessage("Data source have no data to fill this report.")
    String financialsReport_NoData();
    @DefaultMessage("of")
    String financialsReport_Of();
    @DefaultMessage("Page")
    String financialsReport_Page();
    @DefaultMessage("Product Store")
    String financialsReport_SalesTax_ProductStore();
    @DefaultMessage("Sales Tax Detail Report")
    String financialsReport_SalesTax_Title();
    @DefaultMessage("Total Sales")
    String financialsReport_SalesTax_TotalSales();
    @DefaultMessage("Amount")
    String financialsReport_TotalSales_Amount();
    @DefaultMessage("Balance")
    String financialsReport_TotalSales_Balance();
    @DefaultMessage("Debit/Credit")
    String financialsReport_TotalSales_DebCred();
    @DefaultMessage("Balance")
    String financialsReport_TotalSales_Party();
    @DefaultMessage("Product")
    String financialsReport_TotalSales_Product();
    @DefaultMessage("RETURN THIS PORTION WITH YOUR PAYMENT")
    String financialsReturnPortionNote();
    @DefaultMessage("Return to Payables")
    String financialsReturnToPayables();
    @DefaultMessage("Return to Receivables")
    String financialsReturnToReceivables();
    @DefaultMessage("Return to Reports")
    String financialsReturnToReports();
    @DefaultMessage("Return to Tax Summary")
    String financialsReturnToTaxSummary();
    @DefaultMessage("Revenue")
    String financialsRevenue();
    @DefaultMessage("Reversal Of")
    String financialsReversalOf();
    @DefaultMessage("Reverse")
    String financialsReverseTransaction();
    @DefaultMessage("Sales, Inventory, Profitability Analysis")
    String financialsSalesAndInventory();
    @DefaultMessage("Sales by Store By Day Report")
    String financialsSalesByStoreByDayReport();
    @DefaultMessage("Sales by Store by Day")
    String financialsSalesByStoreByDayReportTitle();
    @DefaultMessage("Number of Orders")
    String financialsSalesByStoreByOrderReportNumberOfOrders();
    @DefaultMessage("Order Date")
    String financialsSalesByStoreByOrderReportOrderDate();
    @DefaultMessage("Product Store")
    String financialsSalesByStoreByOrderReportStore();
    @DefaultMessage("Total Amount")
    String financialsSalesByStoreByOrderReportTotalAmount();
    @DefaultMessage("Sales Invoice")
    String financialsSalesInvoice();
    @DefaultMessage("Sales Tax Report")
    String financialsSalesTaxDetailReport();
    @DefaultMessage("Refresh Data")
    String financialsSalesTaxReloadDatamarts();
    @DefaultMessage("Sales Tax Statement")
    String financialsSalesTaxStatement();
    @DefaultMessage("Sales Volume")
    String financialsSalesVolume();
    @DefaultMessage("Scheduled Posting Date")
    String financialsScheduledPostingDate();
    @DefaultMessage("Select an Account")
    String financialsSelectAccount();
    @DefaultMessage("Select Organization")
    String financialsSelectOrganization();
    @DefaultMessage("Select Default Refund Payment Method for")
    String financialsSelectRefundPaymentMethod();
    @DefaultMessage("Seq #")
    String financialsSequenceNumber();
    @DefaultMessage("FinancialsServiceErrorCheckRunMissingInvoiceData")
    String financialsServiceErrorCheckRunMissingInvoiceData(String invoiceId);
    @DefaultMessage("Cannot process invoices with different currencies")
    String financialsServiceErrorCheckRunMultipleCurrencies();
    @DefaultMessage("Cannot create check run with a non-numeric check number")
    String financialsServiceErrorCheckRunNonNumericInitialCheckNumber();
    @DefaultMessage("FinancialsServiceErrorCheckRunUnknownInvoiceType")
    String financialsServiceErrorCheckRunUnknownInvoiceType(String invoiceTypeId, String invoiceId);
    @DefaultMessage("Error creating invoice")
    String financialsServiceErrorCreatingFinanceCharge();
    @DefaultMessage("FinancialsServiceErrorCreatingFinanceChargeItem")
    String financialsServiceErrorCreatingFinanceChargeItem(String invoiceId);
    @DefaultMessage("Failed to get the PaycheckItemTypes for this PaymentType")
    String financialsServiceErrorFailedToGetThePaycheckItemTypes();
    @DefaultMessage("FinancialsServiceErrorFinanceChargeStatus")
    String financialsServiceErrorFinanceChargeStatus(String statusId, String invoiceId);
    @DefaultMessage("FinancialsServiceErrorInvoiceTermOfPaymentTypeExists")
    String financialsServiceErrorInvoiceTermOfPaymentTypeExists(String invoiceId, String termTypeId);
    @DefaultMessage("FinancialsServiceErrorInvoiceTermOfTypeExists")
    String financialsServiceErrorInvoiceTermOfTypeExists(String termTypeId, String invoiceId);
    @DefaultMessage("FinancialsServiceErrorLockboxApplicationsExceedCheckAmount")
    String financialsServiceErrorLockboxApplicationsExceedCheckAmount(String applicationsTotal, String checkAmount);
    @DefaultMessage("Cannot apply an amount different than 0 or the line amount.")
    String financialsServiceErrorLockboxCannotApplyDifferentAmount();
    @DefaultMessage("This line cannot be applied on.")
    String financialsServiceErrorLockboxCannotApplyThisLine();
    @DefaultMessage("Can only apply cash discount to an invoice.")
    String financialsServiceErrorLockboxCashDiscountOnlyForInvoices();
    @DefaultMessage("FinancialsServiceErrorLockboxEquivalentFile")
    String financialsServiceErrorLockboxEquivalentFile(String fileName);
    @DefaultMessage("FinancialsServiceErrorLockboxFileAlreadyImported")
    String financialsServiceErrorLockboxFileAlreadyImported(String fileName);
    @DefaultMessage("Cannot apply negative amounts.")
    String financialsServiceErrorLockboxNegativeAmount();
    @DefaultMessage("No line ready to process found.")
    String financialsServiceErrorLockboxNoReadyLine();
    @DefaultMessage("FinancialsServiceErrorLockboxNotOrgRoutingNumber")
    String financialsServiceErrorLockboxNotOrgRoutingNumber(String routingNumber, String organizationName, String organizationPartyId);
    @DefaultMessage("No data in uploaded file.")
    String financialsServiceErrorLockboxUploadNoData();
    @DefaultMessage("FinancialsServiceErrorNoGlAccountTypeDefaultFound")
    String financialsServiceErrorNoGlAccountTypeDefaultFound(String organizationPartyId, String glAccountTypeId);
    @DefaultMessage("Sorry, you do not have permission to perform this action.")
    String financialsServiceErrorNoPermission();
    @DefaultMessage("FinancialsServiceErrorPartyAcctgPrefNotFound")
    String financialsServiceErrorPartyAcctgPrefNotFound(String partyId);
    @DefaultMessage("Paycheck must be in NOT_PAID status to allow change to one of it''s PaycheckItems")
    String financialsServiceErrorPaycheckMustBeInNotPaidStatusToChangePaycheckItem();
    @DefaultMessage("FinancialsServiceErrorPaymentMethodNotFound")
    String financialsServiceErrorPaymentMethodNotFound(String paymentMethodId);
    @DefaultMessage("FinancialsServiceErrorPaymentMethodTypeNotFound")
    String financialsServiceErrorPaymentMethodTypeNotFound(String paymentMethodId);
    @DefaultMessage("Error: No AcctgTransEntries found for acctgTransId")
    String financialsServiceErrorReverseTransactionNoEntries();
    @DefaultMessage("Error: No AcctgTrans found for acctgTransId")
    String financialsServiceErrorReverseTransactionNotFound();
    @DefaultMessage("FinancialsServiceErrorRunInvoiceRecurrence")
    String financialsServiceErrorRunInvoiceRecurrence(String invoiceId);
    @DefaultMessage("FinancialsServiceErrorRunInvoiceRecurrenceIgnoreFutureLastRecurrence")
    String financialsServiceErrorRunInvoiceRecurrenceIgnoreFutureLastRecurrence(String invoiceId);
    @DefaultMessage("FinancialsServiceErrorRunInvoiceRecurrenceIgnoreFutureNextRecurrence")
    String financialsServiceErrorRunInvoiceRecurrenceIgnoreFutureNextRecurrence(String invoiceId);
    @DefaultMessage("FinancialsServiceErrorRunInvoiceRecurrenceInvalid")
    String financialsServiceErrorRunInvoiceRecurrenceInvalid(String invoiceId);
    @DefaultMessage("FinancialsServiceErrorSkippingAgreementTerm")
    String financialsServiceErrorSkippingAgreementTerm(String agreementTermId, String termTypeId, String invoiceId);
    @DefaultMessage("FinancialsServiceErrorUpdatingPartyAcctgPref")
    String financialsServiceErrorUpdatingPartyAcctgPref(String partyId);
    @DefaultMessage("Error: Cannot void a payment of status other than PMNT_SENT or PMNT_RECEIVED")
    String financialsServiceErrorVoidPaymentIncorrectStatus();
    @DefaultMessage("Error: No Payment found for paymentId")
    String financialsServiceErrorVoidPaymentNotFound();
    @DefaultMessage("Witholdings amount sum exceeds paycheck gross amount")
    String financialsServiceErrorWitholdingsSumExceedsPaycheckGrossAmount();
    @DefaultMessage("FinancialsServiceError_InventoryItemValueAdj_OwnerNotInternal")
    String financialsServiceError_InventoryItemValueAdj_OwnerNotInternal(String ownerPartyId, String inventoryItemId);
    @DefaultMessage("FinancialsServiceWarningIgnoreNonPositiveAmount")
    String financialsServiceWarningIgnoreNonPositiveAmount(String amount, String parentInvoiceId);
    @DefaultMessage("FinancialsServiceWarning_InventoryItemValueAdj_NoPreviousUnitCost")
    String financialsServiceWarning_InventoryItemValueAdj_NoPreviousUnitCost(String inventoryItemId);
    @DefaultMessage("FinancialsServiceWarning_InventoryItemValueAdj_SerInvItemNotAvail")
    String financialsServiceWarning_InventoryItemValueAdj_SerInvItemNotAvail(String inventoryItemId);
    @DefaultMessage("FinancialsServiceWarning_InventoryItemValueAdj_UnitCostNotChanged")
    String financialsServiceWarning_InventoryItemValueAdj_UnitCostNotChanged(String inventoryItemId);
    @DefaultMessage("FinancialsServiceWarning_InventoryItemValueAdj_ZeroOnHand")
    String financialsServiceWarning_InventoryItemValueAdj_ZeroOnHand(String inventoryItemId);
    @DefaultMessage("Settle")
    String financialsSettle();
    @DefaultMessage("Payment Method")
    String financialsSettlePaymentMethod();
    @DefaultMessage("Settle Payments")
    String financialsSettlePayments();
    @DefaultMessage("Settle Payments From")
    String financialsSettlePaymentsFrom();
    @DefaultMessage("Preview")
    String financialsSettlePreview();
    @DefaultMessage("Settle Refunds From")
    String financialsSettleRefundsFrom();
    @DefaultMessage("Settle Undeposited Receipts")
    String financialsSettleUndepositedReceipts();
    @DefaultMessage("Settlement Account")
    String financialsSettlementAccount();
    @DefaultMessage("Settlement Type")
    String financialsSettlementType();
    @DefaultMessage("Settlements")
    String financialsSettlements();
    @DefaultMessage("FinancialsShippedVia")
    String financialsShippedVia(String createdDate, String carrierPartyId, String shipmentMethodTypeId);
    @DefaultMessage("Show Child Accounts Invoices")
    String financialsShowChildAccountsInvoices();
    @DefaultMessage("Show Invoice Level Detail?")
    String financialsShowInvoiceLevelDetail();
    @DefaultMessage("Statement Date")
    String financialsStatementDate();
    @DefaultMessage("Statement For")
    String financialsStatementFor();
    @DefaultMessage("Balance")
    String financialsStatementsBalance();
    @DefaultMessage("Beginning Balance")
    String financialsStatementsBeginningBalance();
    @DefaultMessage("Calculated Balance")
    String financialsStatementsCalculatedBalance();
    @DefaultMessage("Ending Balance")
    String financialsStatementsEndingBalance();
    @DefaultMessage("Status")
    String financialsStatusId();
    @DefaultMessage("ID")
    String financialsTagId();
    @DefaultMessage("Tax")
    String financialsTax();
    @DefaultMessage("Tax Due")
    String financialsTaxDue();
    @DefaultMessage("Tax Region")
    String financialsTaxForRegion();
    @DefaultMessage("Tax Payments")
    String financialsTaxPayments();
    @DefaultMessage("Tax Transactions")
    String financialsTaxTransactions();
    @DefaultMessage("Taxable Sales")
    String financialsTaxableSales();
    @DefaultMessage("Taxes for")
    String financialsTaxesFor();
    @DefaultMessage("Closed")
    String financialsTimePeriodIsClosed();
    @DefaultMessage("Not Closed")
    String financialsTimePeriodIsNotClosed();
    @DefaultMessage("Period Type")
    String financialsTimePeriodType();
    @DefaultMessage("Time Periods for")
    String financialsTimePeriodsFor();
    @DefaultMessage("To Classification Group")
    String financialsToClsGroup();
    @DefaultMessage("Total All Receipts")
    String financialsTotalAllReceipts();
    @DefaultMessage("Total Amount")
    String financialsTotalAmount();
    @DefaultMessage("TOTAL")
    String financialsTotalCapital();
    @DefaultMessage("Total Cash")
    String financialsTotalCash();
    @DefaultMessage("Total Financing Cash Flow")
    String financialsTotalFinancingCashFlow();
    @DefaultMessage("Total Investing Cash Flow")
    String financialsTotalInvestingCashFlow();
    @DefaultMessage("Total Net Cash Flow")
    String financialsTotalNetCashFlow();
    @DefaultMessage("Total Non Cash")
    String financialsTotalNonCash();
    @DefaultMessage("Total Operating Cash Flow")
    String financialsTotalOperatingCashFlow();
    @DefaultMessage("Total Outstanding")
    String financialsTotalOutstanding();
    @DefaultMessage("Total Sales")
    String financialsTotalSales();
    @DefaultMessage("Total Tax Liabilities")
    String financialsTotalTaxLiabilities();
    @DefaultMessage("Total Tax Payments")
    String financialsTotalTaxPayments();
    @DefaultMessage("Totals")
    String financialsTotals();
    @DefaultMessage("Trans. Date")
    String financialsTransDate();
    @DefaultMessage("Transaction")
    String financialsTransaction();
    @DefaultMessage("Transaction Balance")
    String financialsTransactionBalance();
    @DefaultMessage("Transaction Date")
    String financialsTransactionDate();
    @DefaultMessage("Transaction Entries")
    String financialsTransactionEntries();
    @DefaultMessage("Transaction Entry")
    String financialsTransactionEntry();
    @DefaultMessage("Transaction ID")
    String financialsTransactionId();
    @DefaultMessage("Transaction Summary")
    String financialsTransactionSummary();
    @DefaultMessage("Transaction Type")
    String financialsTransactionType();
    @DefaultMessage("Unapprov. Invoices")
    String financialsUnapprovedInvoices();
    @DefaultMessage("Unclassified Accounts")
    String financialsUnclassifiedAccounts();
    @DefaultMessage("Unit Cost")
    String financialsUnitCost();
    @DefaultMessage("Unit Cost Valuation")
    String financialsUnitCostValuation();
    @DefaultMessage("Unit")
    String financialsUnitPrice();
    @DefaultMessage("Unposted Transactions")
    String financialsUnpostedTransactions();
    @DefaultMessage("Update Gl Account for")
    String financialsUpdateGlAccountFor();
    @DefaultMessage("Update Account Type for")
    String financialsUpdateGlAccountType();
    @DefaultMessage("Update Invoice Item")
    String financialsUpdateInvoiceItem();
    @DefaultMessage("Update Paycheck")
    String financialsUpdatePaycheck();
    @DefaultMessage("Update Transaction")
    String financialsUpdateTransaction();
    @DefaultMessage("Update Transaction Entry")
    String financialsUpdateTransactionEntry();
    @DefaultMessage("Upload Lockbox File")
    String financialsUploadLockboxFile();
    @DefaultMessage("FinancialsUploadLockboxFileSuccessful")
    String financialsUploadLockboxFileSuccessful(String fileName);
    @DefaultMessage("Valuation Date")
    String financialsValuationDate();
    @DefaultMessage("Value")
    String financialsValue();
    @DefaultMessage("Vendor")
    String financialsVendor();
    @DefaultMessage("Vendor Statement")
    String financialsVendorStatement();
    @DefaultMessage("Vendors")
    String financialsVendors();
    @DefaultMessage("View Configuration")
    String financialsViewConfiguration();
    @DefaultMessage("View Paycheck")
    String financialsViewPaycheck();
    @DefaultMessage("Void")
    String financialsVoidInvoice();
    @DefaultMessage("Writeoff")
    String financialsWriteoff();
    @DefaultMessage("Writeoff Of")
    String financialsWriteoffOf();
    @DefaultMessage("Find Accounts")
    String findAccounts();
    @DefaultMessage("Find by")
    String findBy();
    @DefaultMessage("Advanced")
    String findByAdvanced();
    @DefaultMessage("Email")
    String findByEmail();
    @DefaultMessage("Id")
    String findById();
    @DefaultMessage("Name and ID")
    String findByIdAndName();
    @DefaultMessage("Name")
    String findByName();
    @DefaultMessage("Phone")
    String findByPhone();
    @DefaultMessage("Shipping Address")
    String findByShippingAddress();
    @DefaultMessage("Find Contacts")
    String findContacts();
    @DefaultMessage("Find Leads")
    String findLeads();
    @DefaultMessage("Find Partners")
    String findPartners();
    @DefaultMessage("Find Suppliers")
    String findSuppliers();
    @DefaultMessage("First Name")
    String firstName();
    @DefaultMessage("fixed_asset_product_not_found")
    String fixed_asset_product_not_found(String param_0);
    @DefaultMessage("Abbrev")
    String formFieldTitle_abbrev();
    @DefaultMessage("Accumulated depreciation GL account")
    String formFieldTitle_accDepGlAccountId();
    @DefaultMessage("Accept")
    String formFieldTitle_acceptButton();
    @DefaultMessage("Accommodation Map Id")
    String formFieldTitle_accommodationMapId();
    @DefaultMessage("Accommodation Spot Id")
    String formFieldTitle_accommodationSpotId();
    @DefaultMessage("Account Code")
    String formFieldTitle_accountCode();
    @DefaultMessage("Account Code Length")
    String formFieldTitle_accountCodeLength();
    @DefaultMessage("Account Currency Uom Id")
    String formFieldTitle_accountCurrencyUomId();
    @DefaultMessage("Account Limit")
    String formFieldTitle_accountLimit();
    @DefaultMessage("Account Name")
    String formFieldTitle_accountName();
    @DefaultMessage("Account Valid Days")
    String formFieldTitle_accountValidDays();
    @DefaultMessage("Acctg Trans Entry Seq Id")
    String formFieldTitle_acctgTransEntrySeqId();
    @DefaultMessage("Acctg Trans Entry Type Id")
    String formFieldTitle_acctgTransEntryTypeId();
    @DefaultMessage("Acctg Trans Id")
    String formFieldTitle_acctgTransId();
    @DefaultMessage("Acctg Trans Type")
    String formFieldTitle_acctgTransType();
    @DefaultMessage("Acctg Trans Type Id")
    String formFieldTitle_acctgTransTypeId();
    @DefaultMessage("Acquire Order Id")
    String formFieldTitle_acquireOrderId();
    @DefaultMessage("Acquire Order Item Seq Id")
    String formFieldTitle_acquireOrderItemSeqId();
    @DefaultMessage("Activation Number")
    String formFieldTitle_activationNumber();
    @DefaultMessage("Activation Valid Thru")
    String formFieldTitle_activationValidThru();
    @DefaultMessage("Active Gl Description")
    String formFieldTitle_activeGlDescription();
    @DefaultMessage("Actual Balance")
    String formFieldTitle_actualBalance();
    @DefaultMessage("Actual Completion Date")
    String formFieldTitle_actualCompletionDate();
    @DefaultMessage("Actual Currency Amount")
    String formFieldTitle_actualCurrencyAmount();
    @DefaultMessage("Actual End Date")
    String formFieldTitle_actualEndDate();
    @DefaultMessage("Actual End Of Life")
    String formFieldTitle_actualEndOfLife();
    @DefaultMessage("Actual Milli Seconds")
    String formFieldTitle_actualMilliSeconds();
    @DefaultMessage("Actual Setup Millis")
    String formFieldTitle_actualSetupMillis();
    @DefaultMessage("Actual Start Date")
    String formFieldTitle_actualStartDate();
    @DefaultMessage("Add")
    String formFieldTitle_addButton();
    @DefaultMessage("Add Note")
    String formFieldTitle_addNote();
    @DefaultMessage("Add Survey Response")
    String formFieldTitle_addSurveyResponse();
    @DefaultMessage("Add To Cart Remove Incompat")
    String formFieldTitle_addToCartRemoveIncompat();
    @DefaultMessage("Add To Cart Replace Upsell")
    String formFieldTitle_addToCartReplaceUpsell();
    @DefaultMessage("Addtl Shipping Charge Desc")
    String formFieldTitle_addtlShippingChargeDesc();
    @DefaultMessage("Agreement Date")
    String formFieldTitle_agreementDate();
    @DefaultMessage("Agreement Id")
    String formFieldTitle_agreementId();
    @DefaultMessage("Agreement Image")
    String formFieldTitle_agreementImage();
    @DefaultMessage("Agreement Item Seq Id")
    String formFieldTitle_agreementItemSeqId();
    @DefaultMessage("Agreement Item Type")
    String formFieldTitle_agreementItemType();
    @DefaultMessage("Agreement Item Type Id")
    String formFieldTitle_agreementItemTypeId();
    @DefaultMessage("Agreement Text")
    String formFieldTitle_agreementText();
    @DefaultMessage("Agreement Type Id")
    String formFieldTitle_agreementTypeId();
    @DefaultMessage("Aisle Id")
    String formFieldTitle_aisleId();
    @DefaultMessage("Allocated Cost")
    String formFieldTitle_allocatedCost();
    @DefaultMessage("Allocated Date")
    String formFieldTitle_allocatedDate();
    @DefaultMessage("Allow Auth To Negative")
    String formFieldTitle_allowAuthToNegative();
    @DefaultMessage("Allow Comp. Addr")
    String formFieldTitle_allowCompanyAddr();
    @DefaultMessage("Allow Multiple")
    String formFieldTitle_allowMultiple();
    @DefaultMessage("Allow Password")
    String formFieldTitle_allowPassword();
    @DefaultMessage("Allow Product Store Change")
    String formFieldTitle_allowProductStoreChange();
    @DefaultMessage("Allow Update")
    String formFieldTitle_allowUpdate();
    @DefaultMessage("Allow Usps Addr")
    String formFieldTitle_allowUspsAddr();
    @DefaultMessage("Alt Reference")
    String formFieldTitle_altReference();
    @DefaultMessage("Amount")
    String formFieldTitle_amount();
    @DefaultMessage("Amount Applied")
    String formFieldTitle_amountApplied();
    @DefaultMessage("Outstanding amount")
    String formFieldTitle_amountToApply();
    @DefaultMessage("Amount Total")
    String formFieldTitle_amountTotal();
    @DefaultMessage("Amount Uom Id")
    String formFieldTitle_amountUomId();
    @DefaultMessage("Annual revenue")
    String formFieldTitle_annualRevenue();
    @DefaultMessage("Applied")
    String formFieldTitle_applied();
    @DefaultMessage("Apply")
    String formFieldTitle_applyButton();
    @DefaultMessage("Approved By User Login Id")
    String formFieldTitle_approvedByUserLoginId();
    @DefaultMessage("Area Id")
    String formFieldTitle_areaId();
    @DefaultMessage("Asset GL account")
    String formFieldTitle_assetGlAccountId();
    @DefaultMessage("Attr Name")
    String formFieldTitle_attrName();
    @DefaultMessage("Attr Type")
    String formFieldTitle_attrType();
    @DefaultMessage("Attr Value")
    String formFieldTitle_attrValue();
    @DefaultMessage("Attribute Name")
    String formFieldTitle_attributeName();
    @DefaultMessage("Auth Declined Message")
    String formFieldTitle_authDeclinedMessage();
    @DefaultMessage("Auth Error Message")
    String formFieldTitle_authErrorMessage();
    @DefaultMessage("Auth Fraud Message")
    String formFieldTitle_authFraudMessage();
    @DefaultMessage("Auth User Login Id")
    String formFieldTitle_authUserLoginId();
    @DefaultMessage("Auth Valid Days")
    String formFieldTitle_authValidDays();
    @DefaultMessage("Authorization Date")
    String formFieldTitle_authorizationDate();
    @DefaultMessage("Auto Approve Invoice")
    String formFieldTitle_autoApproveInvoice();
    @DefaultMessage("Auto Approve Order")
    String formFieldTitle_autoApproveOrder();
    @DefaultMessage("Auto Approve Reviews")
    String formFieldTitle_autoApproveReviews();
    @DefaultMessage("Auto Invoice Digital Items")
    String formFieldTitle_autoInvoiceDigitalItems();
    @DefaultMessage("Auto Order Cc Try Exp")
    String formFieldTitle_autoOrderCcTryExp();
    @DefaultMessage("Auto Order Cc Try Later Max")
    String formFieldTitle_autoOrderCcTryLaterMax();
    @DefaultMessage("Auto Order Cc Try Later Nsf")
    String formFieldTitle_autoOrderCcTryLaterNsf();
    @DefaultMessage("Auto Order Cc Try Other Cards")
    String formFieldTitle_autoOrderCcTryOtherCards();
    @DefaultMessage("Auto Order Shopping List Id")
    String formFieldTitle_autoOrderShoppingListId();
    @DefaultMessage("Auto Save Cart")
    String formFieldTitle_autoSaveCart();
    @DefaultMessage("The subscription will be extended at the end of the subscription period with a new order")
    String formFieldTitle_automaticExtend();
    @DefaultMessage("Availability")
    String formFieldTitle_availabilityStatusId();
    @DefaultMessage("Available Balance")
    String formFieldTitle_availableBalance();
    @DefaultMessage("Available From Date")
    String formFieldTitle_availableFromDate();
    @DefaultMessage("Available Thru Date")
    String formFieldTitle_availableThruDate();
    @DefaultMessage("Available Time")
    String formFieldTitle_availableTime();
    @DefaultMessage("Available Time Uom Id")
    String formFieldTitle_availableTimeUomId();
    @DefaultMessage("Available To Promise Diff")
    String formFieldTitle_availableToPromiseDiff();
    @DefaultMessage("Available To Promise Total")
    String formFieldTitle_availableToPromiseTotal();
    @DefaultMessage("Available To Promise Var")
    String formFieldTitle_availableToPromiseVar();
    @DefaultMessage("Balance Res On Order Creation")
    String formFieldTitle_balanceResOnOrderCreation();
    @DefaultMessage("Base Currency")
    String formFieldTitle_baseCurrencyUomId();
    @DefaultMessage("Bcc Address")
    String formFieldTitle_bccAddress();
    @DefaultMessage("Bill To Customer Party Id")
    String formFieldTitle_billToCustomerPartyId();
    @DefaultMessage("Billback Factor")
    String formFieldTitle_billbackFactor();
    @DefaultMessage("Billing Account ID")
    String formFieldTitle_billingAccountId();
    @DefaultMessage("Birth Date")
    String formFieldTitle_birthDate();
    @DefaultMessage("Email Body")
    String formFieldTitle_bodyText();
    @DefaultMessage("Business Email")
    String formFieldTitle_businessEmail();
    @DefaultMessage("Content Assoc Type Id")
    String formFieldTitle_caContentAssocTypeId();
    @DefaultMessage("Calendar")
    String formFieldTitle_calendarId();
    @DefaultMessage("Calendar Week Id")
    String formFieldTitle_calendarWeekId();
    @DefaultMessage("Can Drop Ship")
    String formFieldTitle_canDropShip();
    @DefaultMessage("Cancel Back Order Date")
    String formFieldTitle_cancelBackOrderDate();
    @DefaultMessage("Cancel Date Time")
    String formFieldTitle_cancelDateTime();
    @DefaultMessage("Cancel Quantity")
    String formFieldTitle_cancelQuantity();
    @DefaultMessage("Cancel Return URL")
    String formFieldTitle_cancelReturnUrl();
    @DefaultMessage("The time period (before the end of the thruedate) after which the automatic extension of the subscription will be executed.")
    String formFieldTitle_canclAutmExtTime();
    @DefaultMessage("Unit Of Measure used for the automatic extension of the subscription.")
    String formFieldTitle_canclAutmExtTimeUomId();
    @DefaultMessage("Capture")
    String formFieldTitle_capture();
    @DefaultMessage("Card Type")
    String formFieldTitle_cardType();
    @DefaultMessage("carrier Id")
    String formFieldTitle_carrierId();
    @DefaultMessage("Carrier Party Id")
    String formFieldTitle_carrierPartyId();
    @DefaultMessage("Carrier Role Type Id")
    String formFieldTitle_carrierRoleTypeId();
    @DefaultMessage("Carrier Service Code")
    String formFieldTitle_carrierServiceCode();
    @DefaultMessage("Cartons")
    String formFieldTitle_cartons();
    @DefaultMessage("CatalogProductStore")
    String formFieldTitle_catalogProductStore();
    @DefaultMessage("Category Image Url")
    String formFieldTitle_categoryImageUrl();
    @DefaultMessage("Category Name")
    String formFieldTitle_categoryName();
    @DefaultMessage("Cc Address")
    String formFieldTitle_ccAddress();
    @DefaultMessage("Cert Provision Id")
    String formFieldTitle_certProvisionId();
    @DefaultMessage("Cert String")
    String formFieldTitle_certString();
    @DefaultMessage("Certs Path")
    String formFieldTitle_certsPath();
    @DefaultMessage("Character Set Id")
    String formFieldTitle_characterSetId();
    @DefaultMessage("Check Avs")
    String formFieldTitle_checkAvs();
    @DefaultMessage("Check Cvv2")
    String formFieldTitle_checkCvv2();
    @DefaultMessage("Check Gc Balance")
    String formFieldTitle_checkGcBalance();
    @DefaultMessage("Check Inventory")
    String formFieldTitle_checkInventory();
    @DefaultMessage("City")
    String formFieldTitle_city();
    @DefaultMessage("City Locality")
    String formFieldTitle_cityLocality();
    @DefaultMessage("Class Enum Id")
    String formFieldTitle_classEnumId();
    @DefaultMessage("Client Id")
    String formFieldTitle_clientId();
    @DefaultMessage("Client Party Id")
    String formFieldTitle_clientPartyId();
    @DefaultMessage("Closed Date Time")
    String formFieldTitle_closedDateTime();
    @DefaultMessage("Closing Balance")
    String formFieldTitle_closingBalance();
    @DefaultMessage("Closing Balance Credit")
    String formFieldTitle_closingBalanceCredit();
    @DefaultMessage("Closing Balance Debit")
    String formFieldTitle_closingBalanceDebit();
    @DefaultMessage("Contach Mech Detail")
    String formFieldTitle_cmDetail();
    @DefaultMessage("Coeff. Value")
    String formFieldTitle_coeffValue();
    @DefaultMessage("Cost Of Goods Sold (COGS) Method")
    String formFieldTitle_cogsMethodId();
    @DefaultMessage("Comm. Perc")
    String formFieldTitle_commPerc();
    @DefaultMessage("Comments")
    String formFieldTitle_comments();
    @DefaultMessage("Common Name")
    String formFieldTitle_commonName();
    @DefaultMessage("Communication Event Id")
    String formFieldTitle_communicationEventId();
    @DefaultMessage("Communication Event Purpose Type Id")
    String formFieldTitle_communicationEventPrpTypId();
    @DefaultMessage("Comm.Type Id")
    String formFieldTitle_communicationEventTypeId();
    @DefaultMessage("Communication Party Id")
    String formFieldTitle_communicationPartyId();
    @DefaultMessage("Company Name")
    String formFieldTitle_companyName();
    @DefaultMessage("Comp. Party Id")
    String formFieldTitle_companyPartyId();
    @DefaultMessage("Completion Date")
    String formFieldTitle_completionDate();
    @DefaultMessage("Config Id")
    String formFieldTitle_configId();
    @DefaultMessage("Config Item Name")
    String formFieldTitle_configItemName();
    @DefaultMessage("Config Option Name")
    String formFieldTitle_configOptionName();
    @DefaultMessage("Conf. Props")
    String formFieldTitle_configProps();
    @DefaultMessage("Config Type Id")
    String formFieldTitle_configTypeId();
    @DefaultMessage("Confirm Template")
    String formFieldTitle_confirmTemplate();
    @DefaultMessage("Confirm Url")
    String formFieldTitle_confirmUrl();
    @DefaultMessage("Contact List Id")
    String formFieldTitle_contactListId();
    @DefaultMessage("Contact List Name")
    String formFieldTitle_contactListName();
    @DefaultMessage("Contact List Type Id")
    String formFieldTitle_contactListTypeId();
    @DefaultMessage("Contact Mech Id")
    String formFieldTitle_contactMechId();
    @DefaultMessage("Contact Mech Type Id")
    String formFieldTitle_contactMechTypeId();
    @DefaultMessage("Container Id")
    String formFieldTitle_containerId();
    @DefaultMessage("Content Mime Type Id")
    String formFieldTitle_contentMimeTypeId();
    @DefaultMessage("content Type")
    String formFieldTitle_contentType();
    @DefaultMessage("Rate")
    String formFieldTitle_conversionFactor();
    @DefaultMessage("Corresponding Product Id")
    String formFieldTitle_correspondingProductId();
    @DefaultMessage("Cost")
    String formFieldTitle_cost();
    @DefaultMessage("Cost Centers")
    String formFieldTitle_costCenters();
    @DefaultMessage("Cost Component Calc Id")
    String formFieldTitle_costComponentCalcId();
    @DefaultMessage("Cost Component Id")
    String formFieldTitle_costComponentId();
    @DefaultMessage("Cost Component Type Id")
    String formFieldTitle_costComponentTypeId();
    @DefaultMessage("Cost Component Type Prefix")
    String formFieldTitle_costComponentTypePrefix();
    @DefaultMessage("Cost Custom Method Id")
    String formFieldTitle_costCustomMethodId();
    @DefaultMessage("Cost Gl Account Type Id")
    String formFieldTitle_costGlAccountTypeId();
    @DefaultMessage("Cost Uom Id")
    String formFieldTitle_costUomId();
    @DefaultMessage("Country")
    String formFieldTitle_country();
    @DefaultMessage("Country Geo Id")
    String formFieldTitle_countryGeoId();
    @DefaultMessage("Create")
    String formFieldTitle_createButton();
    @DefaultMessage("Created By")
    String formFieldTitle_createdBy();
    @DefaultMessage("Created By User Login")
    String formFieldTitle_createdByUserLogin();
    @DefaultMessage("Created By User Login Id")
    String formFieldTitle_createdByUserLoginId();
    @DefaultMessage("Created Date")
    String formFieldTitle_createdDate();
    @DefaultMessage("Created Datetime")
    String formFieldTitle_createdDatetime();
    @DefaultMessage("Created Tx Stamp")
    String formFieldTitle_createdTxStamp();
    @DefaultMessage("Creation Date")
    String formFieldTitle_creationDate();
    @DefaultMessage("Credit")
    String formFieldTitle_credit();
    @DefaultMessage("Credit Card Enum Id")
    String formFieldTitle_creditCardEnumId();
    @DefaultMessage("Credit Gl Account Id")
    String formFieldTitle_creditGlAccountId();
    @DefaultMessage("Currency Uom")
    String formFieldTitle_currencyUom();
    @DefaultMessage("Currency")
    String formFieldTitle_currencyUomId();
    @DefaultMessage("Current Password")
    String formFieldTitle_currentPassword();
    @DefaultMessage("Current Password Verify")
    String formFieldTitle_currentPasswordVerify();
    @DefaultMessage("Current Promised Date")
    String formFieldTitle_currentPromisedDate();
    @DefaultMessage("Current Recurrence Count")
    String formFieldTitle_currentRecurrenceCount();
    @DefaultMessage("Current Status Id")
    String formFieldTitle_currentStatusId();
    @DefaultMessage("Cust Request Category Id")
    String formFieldTitle_custRequestCategoryId();
    @DefaultMessage("Cust Request Date")
    String formFieldTitle_custRequestDate();
    @DefaultMessage("Cust Request Id")
    String formFieldTitle_custRequestId();
    @DefaultMessage("Cust Request Item Seq Id")
    String formFieldTitle_custRequestItemSeqId();
    @DefaultMessage("Cust Request Name")
    String formFieldTitle_custRequestName();
    @DefaultMessage("Cust Request Resolution Id")
    String formFieldTitle_custRequestResolutionId();
    @DefaultMessage("Cust Request Type Description")
    String formFieldTitle_custRequestTypeDescription();
    @DefaultMessage("Cust Request Type Id")
    String formFieldTitle_custRequestTypeId();
    @DefaultMessage("Custom Price Calc Service")
    String formFieldTitle_customPriceCalcService();
    @DefaultMessage("Custom Time Period Id")
    String formFieldTitle_customTimePeriodId();
    @DefaultMessage("Date Acquired")
    String formFieldTitle_dateAcquired();
    @DefaultMessage("Date Last Serviced")
    String formFieldTitle_dateLastServiced();
    @DefaultMessage("Date Next Service")
    String formFieldTitle_dateNextService();
    @DefaultMessage("Date Thru")
    String formFieldTitle_dateThru();
    @DefaultMessage("Date From")
    String formFieldTitle_datefrom();
    @DefaultMessage("Date Time Manufactured")
    String formFieldTitle_datetimeManufactured();
    @DefaultMessage("Date Time Performed")
    String formFieldTitle_datetimePerformed();
    @DefaultMessage("Date Time Received")
    String formFieldTitle_datetimeReceived();
    @DefaultMessage("Days Offset")
    String formFieldTitle_daysOffset();
    @DefaultMessage("Days To Cancel Non Pay")
    String formFieldTitle_daysToCancelNonPay();
    @DefaultMessage("Days To Ship")
    String formFieldTitle_daysToShip();
    @DefaultMessage("Debit")
    String formFieldTitle_debit();
    @DefaultMessage("Debit Credit Flag")
    String formFieldTitle_debitCreditFlag();
    @DefaultMessage("Debit Gl Account Id")
    String formFieldTitle_debitGlAccountId();
    @DefaultMessage("Deceased Date")
    String formFieldTitle_deceasedDate();
    @DefaultMessage("Default Amount")
    String formFieldTitle_defaultAmount();
    @DefaultMessage("Default Config Option Id")
    String formFieldTitle_defaultConfigOptionId();
    @DefaultMessage("Default Currency Uom Id")
    String formFieldTitle_defaultCurrencyUomId();
    @DefaultMessage("Default Gl Account Id")
    String formFieldTitle_defaultGlAccountId();
    @DefaultMessage("Default Locale String")
    String formFieldTitle_defaultLocaleString();
    @DefaultMessage("Default Password")
    String formFieldTitle_defaultPassword();
    @DefaultMessage("Default Rate")
    String formFieldTitle_defaultRate();
    @DefaultMessage("Default Sales Channel Enum Id")
    String formFieldTitle_defaultSalesChannelEnumId();
    @DefaultMessage("Default Sequence Num")
    String formFieldTitle_defaultSequenceNum();
    @DefaultMessage("Default Years Offset")
    String formFieldTitle_defaultYearsOffset();
    @DefaultMessage("Delete")
    String formFieldTitle_deleteButton();
    @DefaultMessage("Delete Cost Component")
    String formFieldTitle_deleteCostComponent();
    @DefaultMessage("Delete email")
    String formFieldTitle_deleteEmail();
    @DefaultMessage("Delete Link")
    String formFieldTitle_deleteLink();
    @DefaultMessage("Delete Selected")
    String formFieldTitle_deleteSelectedButton();
    @DefaultMessage("Deliverable Id")
    String formFieldTitle_deliverableId();
    @DefaultMessage("Depreciation GL account")
    String formFieldTitle_depGlAccountId();
    @DefaultMessage("Depreciation")
    String formFieldTitle_depreciation();
    @DefaultMessage("Depreciation custom method")
    String formFieldTitle_depreciationCustomMethodId();
    @DefaultMessage("Description")
    String formFieldTitle_description();
    @DefaultMessage("Destination Facility Id")
    String formFieldTitle_destinationFacilityId();
    @DefaultMessage("Detail Screen")
    String formFieldTitle_detailScreen();
    @DefaultMessage("Detail Sub Screen")
    String formFieldTitle_detailSubScreen();
    @DefaultMessage("Detail Text")
    String formFieldTitle_detailText();
    @DefaultMessage("Dig Prod Upload Category Id")
    String formFieldTitle_digProdUploadCategoryId();
    @DefaultMessage("Digital Item Approved Status")
    String formFieldTitle_digitalItemApprovedStatus();
    @DefaultMessage("Disabled Date Time")
    String formFieldTitle_disabledDateTime();
    @DefaultMessage("Due Date")
    String formFieldTitle_dueDate();
    @DefaultMessage("Edit Content")
    String formFieldTitle_editContent();
    @DefaultMessage("Edit Data Resource")
    String formFieldTitle_editDataResource();
    @DefaultMessage("Edit GL Account Category")
    String formFieldTitle_editGlAccountCategory();
    @DefaultMessage("Edit GL Account Category Member")
    String formFieldTitle_editGlAccountCategoryMember();
    @DefaultMessage("effective Alias")
    String formFieldTitle_effectiveAlias();
    @DefaultMessage("Effective Date")
    String formFieldTitle_effectiveDate();
    @DefaultMessage("Email Address")
    String formFieldTitle_emailAddress();
    @DefaultMessage("Copy Email Address")
    String formFieldTitle_emailAddressCc();
    @DefaultMessage("From Email Address")
    String formFieldTitle_emailAddressFrom();
    @DefaultMessage("To Email Address")
    String formFieldTitle_emailAddressTo();
    @DefaultMessage("Empl Position Type Id")
    String formFieldTitle_emplPositionTypeId();
    @DefaultMessage("Employment Status Enum Id")
    String formFieldTitle_employmentStatusEnumId();
    @DefaultMessage("Enable Auto Suggestion List")
    String formFieldTitle_enableAutoSuggestionList();
    @DefaultMessage("enableCVM")
    String formFieldTitle_enableCVM();
    @DefaultMessage("Enable Digital Product Upload")
    String formFieldTitle_enableDigProdUpload();
    @DefaultMessage("Enable Transmit")
    String formFieldTitle_enableTransmit();
    @DefaultMessage("Enabled")
    String formFieldTitle_enabled();
    @DefaultMessage("Entry Date")
    String formFieldTitle_entryDate();
    @DefaultMessage("Error Gl Journal Id")
    String formFieldTitle_errorGlJournalId();
    @DefaultMessage("Estimate Calc Method")
    String formFieldTitle_estimateCalcMethod();
    @DefaultMessage("Estimated Budget")
    String formFieldTitle_estimatedBudget();
    @DefaultMessage("Estimated Completion Date")
    String formFieldTitle_estimatedCompletionDate();
    @DefaultMessage("Estimated cost")
    String formFieldTitle_estimatedCost();
    @DefaultMessage("Est. Deliver Date")
    String formFieldTitle_estimatedDeliveryDate();
    @DefaultMessage("Estimated Duration")
    String formFieldTitle_estimatedDuration();
    @DefaultMessage("Estimated Milli Seconds")
    String formFieldTitle_estimatedMilliSeconds();
    @DefaultMessage("Estimated Quantity")
    String formFieldTitle_estimatedQuantity();
    @DefaultMessage("Estimated Ready Date")
    String formFieldTitle_estimatedReadyDate();
    @DefaultMessage("Estimated Setup Millis")
    String formFieldTitle_estimatedSetupMillis();
    @DefaultMessage("Est. Ship Date")
    String formFieldTitle_estimatedShipDate();
    @DefaultMessage("Estimated Start Date")
    String formFieldTitle_estimatedStartDate();
    @DefaultMessage("Excl. Feat. Group")
    String formFieldTitle_excludeFeatureGroup();
    @DefaultMessage("Excl. Geo Id")
    String formFieldTitle_excludeGeoId();
    @DefaultMessage("Exempt Amount")
    String formFieldTitle_exemptAmount();
    @DefaultMessage("Existing Customer")
    String formFieldTitle_existingCustomer();
    @DefaultMessage("Expected End Of Life")
    String formFieldTitle_expectedEndOfLife();
    @DefaultMessage("Expected Item Status")
    String formFieldTitle_expectedItemStatus();
    @DefaultMessage("Explode Order Items")
    String formFieldTitle_explodeOrderItems();
    @DefaultMessage("External Account Id")
    String formFieldTitle_externalAccountId();
    @DefaultMessage("External Id")
    String formFieldTitle_externalId();
    @DefaultMessage("External Subscription Id")
    String formFieldTitle_externalSubscriptionId();
    @DefaultMessage("Facility Group Id")
    String formFieldTitle_facilityGroupId();
    @DefaultMessage("Facility Group Name")
    String formFieldTitle_facilityGroupName();
    @DefaultMessage("Facility Group Type Id")
    String formFieldTitle_facilityGroupTypeId();
    @DefaultMessage("Facility Id")
    String formFieldTitle_facilityId();
    @DefaultMessage("Facility Id To")
    String formFieldTitle_facilityIdTo();
    @DefaultMessage("Facility Name")
    String formFieldTitle_facilityName();
    @DefaultMessage("Facility Quantity On Hand Total")
    String formFieldTitle_facilityQuantityOnHandTotal();
    @DefaultMessage("Facility Type Id")
    String formFieldTitle_facilityTypeId();
    @DefaultMessage("Fail If Items Are Not Available")
    String formFieldTitle_failIfItemsAreNotAvailable();
    @DefaultMessage("Feature Percent")
    String formFieldTitle_featurePercent();
    @DefaultMessage("Feature Price")
    String formFieldTitle_featurePrice();
    @DefaultMessage("Fin Account Auth Id")
    String formFieldTitle_finAccountAuthId();
    @DefaultMessage("Fin Account Code")
    String formFieldTitle_finAccountCode();
    @DefaultMessage("Fin Account Id")
    String formFieldTitle_finAccountId();
    @DefaultMessage("Fin Account Name")
    String formFieldTitle_finAccountName();
    @DefaultMessage("Fin Account Pin")
    String formFieldTitle_finAccountPin();
    @DefaultMessage("Fin Account Trans Id")
    String formFieldTitle_finAccountTransId();
    @DefaultMessage("Fin Account Trans Type")
    String formFieldTitle_finAccountTransType();
    @DefaultMessage("Fin Account Trans Type Id")
    String formFieldTitle_finAccountTransTypeId();
    @DefaultMessage("Fin Account Type")
    String formFieldTitle_finAccountType();
    @DefaultMessage("Fin Account Type Id")
    String formFieldTitle_finAccountTypeId();
    @DefaultMessage("Find Gl Account Category")
    String formFieldTitle_findGlAccountCategory();
    @DefaultMessage("Finish Date Time")
    String formFieldTitle_finishDateTime();
    @DefaultMessage("First Attempt Order Id")
    String formFieldTitle_firstAttemptOrderId();
    @DefaultMessage("First Name")
    String formFieldTitle_firstName();
    @DefaultMessage("First Name Local")
    String formFieldTitle_firstNameLocal();
    @DefaultMessage("Fiscal Year Start Day")
    String formFieldTitle_fiscalYearStartDay();
    @DefaultMessage("Fiscal Year Start Month")
    String formFieldTitle_fiscalYearStartMonth();
    @DefaultMessage("Fixed Asset Id")
    String formFieldTitle_fixedAssetId();
    @DefaultMessage("Fixed Asset Name")
    String formFieldTitle_fixedAssetName();
    @DefaultMessage("Fixed Asset Type Id")
    String formFieldTitle_fixedAssetTypeId();
    @DefaultMessage("Fixed Cost")
    String formFieldTitle_fixedCost();
    @DefaultMessage("Friday Capacity")
    String formFieldTitle_fridayCapacity();
    @DefaultMessage("Friday Start Time")
    String formFieldTitle_fridayStartTime();
    @DefaultMessage("From Date")
    String formFieldTitle_fromDate();
    @DefaultMessage("From Due Date")
    String formFieldTitle_fromDueDate();
    @DefaultMessage("From Invoice Date")
    String formFieldTitle_fromInvoiceDate();
    @DefaultMessage("From Party Id")
    String formFieldTitle_fromPartyId();
    @DefaultMessage("From Quantity")
    String formFieldTitle_fromQuantity();
    @DefaultMessage("Fulfill Contact Mech Id")
    String formFieldTitle_fulfillContactMechId();
    @DefaultMessage("Gateway Avs Result")
    String formFieldTitle_gatewayAvsResult();
    @DefaultMessage("Gateway Code")
    String formFieldTitle_gatewayCode();
    @DefaultMessage("Gateway Cv Result")
    String formFieldTitle_gatewayCvResult();
    @DefaultMessage("Gateway Flag")
    String formFieldTitle_gatewayFlag();
    @DefaultMessage("Gateway Message")
    String formFieldTitle_gatewayMessage();
    @DefaultMessage("Gateway Score Result")
    String formFieldTitle_gatewayScoreResult();
    @DefaultMessage("Gender")
    String formFieldTitle_gender();
    @DefaultMessage("General Comments")
    String formFieldTitle_generalComments();
    @DefaultMessage("Geo Id")
    String formFieldTitle_geoId();
    @DefaultMessage("GL Account Category")
    String formFieldTitle_glAccountCategory();
    @DefaultMessage("GL Account Category Id")
    String formFieldTitle_glAccountCategoryId();
    @DefaultMessage("GL Account Category Member")
    String formFieldTitle_glAccountCategoryMember();
    @DefaultMessage("GL Account Category Type")
    String formFieldTitle_glAccountCategoryType();
    @DefaultMessage("GL Account Category Type Id")
    String formFieldTitle_glAccountCategoryTypeId();
    @DefaultMessage("Gl Account Class Id")
    String formFieldTitle_glAccountClassId();
    @DefaultMessage("Gl Account Id")
    String formFieldTitle_glAccountId();
    @DefaultMessage("Gl Account Type")
    String formFieldTitle_glAccountType();
    @DefaultMessage("Gl Account Type Id")
    String formFieldTitle_glAccountTypeId();
    @DefaultMessage("Fiscal Gl Type")
    String formFieldTitle_glFiscalType();
    @DefaultMessage("Fiscal Gl Type Id")
    String formFieldTitle_glFiscalTypeId();
    @DefaultMessage("Gl Journal")
    String formFieldTitle_glJournal();
    @DefaultMessage("Gl Journal Id")
    String formFieldTitle_glJournalId();
    @DefaultMessage("Gl Journal Name")
    String formFieldTitle_glJournalName();
    @DefaultMessage("Gl Reconciliation Id")
    String formFieldTitle_glReconciliationId();
    @DefaultMessage("Gl Reconciliation Name")
    String formFieldTitle_glReconciliationName();
    @DefaultMessage("Gl Resource Type Id")
    String formFieldTitle_glResourceTypeId();
    @DefaultMessage("Gl Transactions")
    String formFieldTitle_glTransactions();
    @DefaultMessage("Gl Xbrl Class Id")
    String formFieldTitle_glXbrlClassId();
    @DefaultMessage("Grand Total")
    String formFieldTitle_grandTotal();
    @DefaultMessage("Group Id")
    String formFieldTitle_groupId();
    @DefaultMessage("Group Name")
    String formFieldTitle_groupName();
    @DefaultMessage("Group Name Local")
    String formFieldTitle_groupNameLocal();
    @DefaultMessage("Group Status")
    String formFieldTitle_groupStatus();
    @DefaultMessage("Group Status Id")
    String formFieldTitle_groupStatusId();
    @DefaultMessage("Has Table")
    String formFieldTitle_hasTable();
    @DefaultMessage("Header Approved Status")
    String formFieldTitle_headerApprovedStatus();
    @DefaultMessage("Header Cancel Status")
    String formFieldTitle_headerCancelStatus();
    @DefaultMessage("Header Declined Status")
    String formFieldTitle_headerDeclinedStatus();
    @DefaultMessage("Header Logo")
    String formFieldTitle_headerLogo();
    @DefaultMessage("Height")
    String formFieldTitle_height();
    @DefaultMessage("Host Address")
    String formFieldTitle_hostAddress();
    @DefaultMessage("Host Port")
    String formFieldTitle_hostPort();
    @DefaultMessage("Hours")
    String formFieldTitle_hours();
    @DefaultMessage("Id Code")
    String formFieldTitle_idCode();
    @DefaultMessage("Id Value")
    String formFieldTitle_idValue();
    @DefaultMessage("Image Two Url")
    String formFieldTitle_imageTwoUrl();
    @DefaultMessage("Image Url")
    String formFieldTitle_imageUrl();
    @DefaultMessage("Incl. Feat. Group")
    String formFieldTitle_includeFeatureGroup();
    @DefaultMessage("Incl. Geo Id")
    String formFieldTitle_includeGeoId();
    @DefaultMessage("Include In Shipping")
    String formFieldTitle_includeInShipping();
    @DefaultMessage("Include In Tax")
    String formFieldTitle_includeInTax();
    @DefaultMessage("Incl. No Charge Items")
    String formFieldTitle_includeNoChargeItems();
    @DefaultMessage("Include Tax In Price")
    String formFieldTitle_includeTaxInPrice();
    @DefaultMessage("Info String")
    String formFieldTitle_infoString();
    @DefaultMessage("Info Url")
    String formFieldTitle_infoUrl();
    @DefaultMessage("Initial View")
    String formFieldTitle_initialView();
    @DefaultMessage("Instance Of Product Id")
    String formFieldTitle_instanceOfProductId();
    @DefaultMessage("Internal Code")
    String formFieldTitle_internalCode();
    @DefaultMessage("Internal Comment")
    String formFieldTitle_internalComment();
    @DefaultMessage("Internal Name")
    String formFieldTitle_internalName();
    @DefaultMessage("Interval Meter Type Id")
    String formFieldTitle_intervalMeterTypeId();
    @DefaultMessage("Interval Quantity")
    String formFieldTitle_intervalQuantity();
    @DefaultMessage("Interval Uom Id")
    String formFieldTitle_intervalUomId();
    @DefaultMessage("Inventory Facility Id")
    String formFieldTitle_inventoryFacilityId();
    @DefaultMessage("Inventory Item Detail Seq Id")
    String formFieldTitle_inventoryItemDetailSeqId();
    @DefaultMessage("Inventory Item Id")
    String formFieldTitle_inventoryItemId();
    @DefaultMessage("Inventory Item Label Id")
    String formFieldTitle_inventoryItemLabelId();
    @DefaultMessage("Inventory Item Label Type Id")
    String formFieldTitle_inventoryItemLabelTypeId();
    @DefaultMessage("Inventory Item Type Id")
    String formFieldTitle_inventoryItemTypeId();
    @DefaultMessage("Inventory Transfer Id")
    String formFieldTitle_inventoryTransferId();
    @DefaultMessage("Invoice Amount")
    String formFieldTitle_invoiceAmount();
    @DefaultMessage("Invoice Date")
    String formFieldTitle_invoiceDate();
    @DefaultMessage("Invoice ID")
    String formFieldTitle_invoiceId();
    @DefaultMessage("Invoice Id Prefix")
    String formFieldTitle_invoiceIdPrefix();
    @DefaultMessage("Invoice Info")
    String formFieldTitle_invoiceInfo();
    @DefaultMessage("Item No")
    String formFieldTitle_invoiceItemSeqId();
    @DefaultMessage("Invoice Item Type")
    String formFieldTitle_invoiceItemTypeId();
    @DefaultMessage("Invoice Message")
    String formFieldTitle_invoiceMessage();
    @DefaultMessage("Not Applied")
    String formFieldTitle_invoiceNotApplied();
    @DefaultMessage("Invoice Parent Type Id")
    String formFieldTitle_invoiceParentTypeId();
    @DefaultMessage("Assign to Whole invoice")
    String formFieldTitle_invoiceProcessing();
    @DefaultMessage("Invoice Sequence")
    String formFieldTitle_invoiceSequenceEnumId();
    @DefaultMessage("Invoice Term Id")
    String formFieldTitle_invoiceTermId();
    @DefaultMessage("Invoice Type")
    String formFieldTitle_invoiceTypeId();
    @DefaultMessage("Is Active")
    String formFieldTitle_isActive();
    @DefaultMessage("Is Closed")
    String formFieldTitle_isClosed();
    @DefaultMessage("Is Demo Store")
    String formFieldTitle_isDemoStore();
    @DefaultMessage("Is Exempt")
    String formFieldTitle_isExempt();
    @DefaultMessage("Is Immediately Fulfilled")
    String formFieldTitle_isImmediatelyFulfilled();
    @DefaultMessage("Is Mandatory")
    String formFieldTitle_isMandatory();
    @DefaultMessage("Is Nexus")
    String formFieldTitle_isNexus();
    @DefaultMessage("Is Posted")
    String formFieldTitle_isPosted();
    @DefaultMessage("is Printable")
    String formFieldTitle_isPrintable();
    @DefaultMessage("Is Promo")
    String formFieldTitle_isPromo();
    @DefaultMessage("Is Public")
    String formFieldTitle_isPublic();
    @DefaultMessage("Is Refundable")
    String formFieldTitle_isRefundable();
    @DefaultMessage("Is Rush Order")
    String formFieldTitle_isRushOrder();
    @DefaultMessage("Summary ?")
    String formFieldTitle_isSummary();
    @DefaultMessage("Issue Date")
    String formFieldTitle_issueDate();
    @DefaultMessage("Issued Quantity")
    String formFieldTitle_issuedQuantity();
    @DefaultMessage("Item Approved Status")
    String formFieldTitle_itemApprovedStatus();
    @DefaultMessage("Item Cancel Status")
    String formFieldTitle_itemCancelStatus();
    @DefaultMessage("Item Comments")
    String formFieldTitle_itemComments();
    @DefaultMessage("Item Declined Status")
    String formFieldTitle_itemDeclinedStatus();
    @DefaultMessage("Item Description")
    String formFieldTitle_itemDescription();
    @DefaultMessage("Item Issuance Id")
    String formFieldTitle_itemIssuanceId();
    @DefaultMessage("Item Status Id")
    String formFieldTitle_itemStatusId();
    @DefaultMessage("Job Id")
    String formFieldTitle_jobId();
    @DefaultMessage("Job Name")
    String formFieldTitle_jobName();
    @DefaultMessage("Keyword")
    String formFieldTitle_keyword();
    @DefaultMessage("Last Admin Modified")
    String formFieldTitle_lastAdminModified();
    @DefaultMessage("Last Invite Date")
    String formFieldTitle_lastInviteDate();
    @DefaultMessage("Last Invoice Number")
    String formFieldTitle_lastInvoiceNumber();
    @DefaultMessage("Last Invoice Restart Date")
    String formFieldTitle_lastInvoiceRestartDate();
    @DefaultMessage("Last Modified By User Login")
    String formFieldTitle_lastModifiedByUserLogin();
    @DefaultMessage("Last Modified Date")
    String formFieldTitle_lastModifiedDate();
    @DefaultMessage("Last Name")
    String formFieldTitle_lastName();
    @DefaultMessage("Last Name Local")
    String formFieldTitle_lastNameLocal();
    @DefaultMessage("Last Order Number")
    String formFieldTitle_lastOrderNumber();
    @DefaultMessage("Last Ordered Date")
    String formFieldTitle_lastOrderedDate();
    @DefaultMessage("Last Price")
    String formFieldTitle_lastPrice();
    @DefaultMessage("Last Quote Number")
    String formFieldTitle_lastQuoteNumber();
    @DefaultMessage("Last Status Update")
    String formFieldTitle_lastStatusUpdate();
    @DefaultMessage("Last Updated Stamp")
    String formFieldTitle_lastUpdatedStamp();
    @DefaultMessage("Last Updated Tx Stamp")
    String formFieldTitle_lastUpdatedTxStamp();
    @DefaultMessage("Level Id")
    String formFieldTitle_levelId();
    @DefaultMessage("Line Total")
    String formFieldTitle_lineTotal();
    @DefaultMessage("Link Info")
    String formFieldTitle_linkInfo();
    @DefaultMessage("Link One Image Url")
    String formFieldTitle_linkOneImageUrl();
    @DefaultMessage("Link Seq Id")
    String formFieldTitle_linkSeqId();
    @DefaultMessage("Link Two Image Url")
    String formFieldTitle_linkTwoImageUrl();
    @DefaultMessage("List Name")
    String formFieldTitle_listName();
    @DefaultMessage("Located At Facility Id")
    String formFieldTitle_locatedAtFacilityId();
    @DefaultMessage("Located At Location Seq Id")
    String formFieldTitle_locatedAtLocationSeqId();
    @DefaultMessage("Location Desc")
    String formFieldTitle_locationDesc();
    @DefaultMessage("Location Seq Id")
    String formFieldTitle_locationSeqId();
    @DefaultMessage("Location Seq Id To")
    String formFieldTitle_locationSeqIdTo();
    @DefaultMessage("Location Type Enum Id")
    String formFieldTitle_locationTypeEnumId();
    @DefaultMessage("Log File Name")
    String formFieldTitle_logFileName();
    @DefaultMessage("Logging Level")
    String formFieldTitle_loggingLevel();
    @DefaultMessage("Logo Image Url")
    String formFieldTitle_logoImageUrl();
    @DefaultMessage("Long Description")
    String formFieldTitle_longDescription();
    @DefaultMessage("Loss GL account")
    String formFieldTitle_lossGlAccountId();
    @DefaultMessage("Lot Id")
    String formFieldTitle_lotId();
    @DefaultMessage("Maint Hist Seq Id")
    String formFieldTitle_maintHistSeqId();
    @DefaultMessage("Maint Name")
    String formFieldTitle_maintName();
    @DefaultMessage("Maint Template Work Effort Id")
    String formFieldTitle_maintTemplateWorkEffortId();
    @DefaultMessage("Manual Auth Is Capture")
    String formFieldTitle_manualAuthIsCapture();
    @DefaultMessage("Manual Only")
    String formFieldTitle_manualOnly();
    @DefaultMessage("Manufacturer Party Id")
    String formFieldTitle_manufacturerPartyId();
    @DefaultMessage("Manufacturing Task")
    String formFieldTitle_manufacturingTask();
    @DefaultMessage("Marital Status")
    String formFieldTitle_maritalStatus();
    @DefaultMessage("Marketing Campaign Id")
    String formFieldTitle_marketingCampaignId();
    @DefaultMessage("Max Amount")
    String formFieldTitle_maxAmount();
    @DefaultMessage("Max Life Time")
    String formFieldTitle_maxLifeTime();
    @DefaultMessage("Max Life Time Uom Id")
    String formFieldTitle_maxLifeTimeUomId();
    @DefaultMessage("Max Log File Size")
    String formFieldTitle_maxLogFileSize();
    @DefaultMessage("Max Quantity")
    String formFieldTitle_maxQuantity();
    @DefaultMessage("Max Recurrence Count")
    String formFieldTitle_maxRecurrenceCount();
    @DefaultMessage("Max Retry")
    String formFieldTitle_maxRetry();
    @DefaultMessage("Max Size")
    String formFieldTitle_maxSize();
    @DefaultMessage("Max Tot.")
    String formFieldTitle_maxTotal();
    @DefaultMessage("Max Wt.")
    String formFieldTitle_maxWeight();
    @DefaultMessage("Maximum Amount")
    String formFieldTitle_maximumAmount();
    @DefaultMessage("Maximum Amount Uom Id")
    String formFieldTitle_maximumAmountUomId();
    @DefaultMessage("Member Id")
    String formFieldTitle_memberId();
    @DefaultMessage("Merchant Id")
    String formFieldTitle_merchantId();
    @DefaultMessage("Message Id")
    String formFieldTitle_messageId();
    @DefaultMessage("Meter Name")
    String formFieldTitle_meterName();
    @DefaultMessage("Meter Uom Id")
    String formFieldTitle_meterUomId();
    @DefaultMessage("Middle Name")
    String formFieldTitle_middleName();
    @DefaultMessage("Middle Name Local")
    String formFieldTitle_middleNameLocal();
    @DefaultMessage("Min Balance")
    String formFieldTitle_minBalance();
    @DefaultMessage("Min Item Price")
    String formFieldTitle_minItemPrice();
    @DefaultMessage("Min Purchase")
    String formFieldTitle_minPurchase();
    @DefaultMessage("Min Quantity")
    String formFieldTitle_minQuantity();
    @DefaultMessage("Min Size")
    String formFieldTitle_minSize();
    @DefaultMessage("Min Tot.")
    String formFieldTitle_minTotal();
    @DefaultMessage("Min Wt.")
    String formFieldTitle_minWeight();
    @DefaultMessage("Min Order Qty")
    String formFieldTitle_minimumOrderQuantity();
    @DefaultMessage("Minimum Stock")
    String formFieldTitle_minimumStock();
    @DefaultMessage("Modified By User Login Id")
    String formFieldTitle_modifiedByUserLoginId();
    @DefaultMessage("Monday Capacity")
    String formFieldTitle_mondayCapacity();
    @DefaultMessage("Monday Start Time")
    String formFieldTitle_mondayStartTime();
    @DefaultMessage("Month Amount Credit")
    String formFieldTitle_monthAmountCredit();
    @DefaultMessage("Month Amount Debit")
    String formFieldTitle_monthAmountDebit();
    @DefaultMessage("Months In Past Limit")
    String formFieldTitle_monthsInPastLimit();
    @DefaultMessage("Months With Employer")
    String formFieldTitle_monthsWithEmployer();
    @DefaultMessage("Mothers Maiden Name")
    String formFieldTitle_mothersMaidenName();
    @DefaultMessage("Move Quantity")
    String formFieldTitle_moveQuantity();
    @DefaultMessage("Must Rsvp")
    String formFieldTitle_mustRsvp();
    @DefaultMessage("Name")
    String formFieldTitle_name();
    @DefaultMessage("Need Type Id")
    String formFieldTitle_needTypeId();
    @DefaultMessage("Needs Inventory Issuance")
    String formFieldTitle_needsInventoryIssuance();
    @DefaultMessage("Needs Inventory Receive")
    String formFieldTitle_needsInventoryReceive();
    @DefaultMessage("New Credit Card")
    String formFieldTitle_newCreditCard();
    @DefaultMessage("New GL Account Category")
    String formFieldTitle_newGlAccountCategory();
    @DefaultMessage("New Password")
    String formFieldTitle_newPassword();
    @DefaultMessage("New Password Verify")
    String formFieldTitle_newPasswordVerify();
    @DefaultMessage("Nickname")
    String formFieldTitle_nickname();
    @DefaultMessage("Not Applied")
    String formFieldTitle_notApplied();
    @DefaultMessage("Not valid total")
    String formFieldTitle_notValidTotal();
    @DefaultMessage("Note")
    String formFieldTitle_note();
    @DefaultMessage("Note Date Time")
    String formFieldTitle_noteDateTime();
    @DefaultMessage("Note Id")
    String formFieldTitle_noteId();
    @DefaultMessage("Note Info")
    String formFieldTitle_noteInfo();
    @DefaultMessage("Note Name")
    String formFieldTitle_noteName();
    @DefaultMessage("Notify Url")
    String formFieldTitle_notifyUrl();
    @DefaultMessage("Number of employees")
    String formFieldTitle_numEmployees();
    @DefaultMessage("Number Specified")
    String formFieldTitle_numberSpecified();
    @DefaultMessage("Occupation")
    String formFieldTitle_occupation();
    @DefaultMessage("Office Site Name")
    String formFieldTitle_officeSiteName();
    @DefaultMessage("Offsetting Gl Account Type Id")
    String formFieldTitle_offsettingGlAccountTypeId();
    @DefaultMessage("Old Pick Start Date")
    String formFieldTitle_oldPickStartDate();
    @DefaultMessage("One Inventory Facility")
    String formFieldTitle_oneInventoryFacility();
    @DefaultMessage("Open Date Time")
    String formFieldTitle_openDateTime();
    @DefaultMessage("Opening Balance Credit")
    String formFieldTitle_openingBalanceCredit();
    @DefaultMessage("Opening Balance Debit")
    String formFieldTitle_openingBalanceDebit();
    @DefaultMessage("Opt-in Code")
    String formFieldTitle_optInVerifyCode();
    @DefaultMessage("Order Date")
    String formFieldTitle_orderDate();
    @DefaultMessage("Order Flat Price")
    String formFieldTitle_orderFlatPrice();
    @DefaultMessage("Order Header Id")
    String formFieldTitle_orderHeaderId();
    @DefaultMessage("Order Id")
    String formFieldTitle_orderId();
    @DefaultMessage("Order Id Prefix")
    String formFieldTitle_orderIdPrefix();
    @DefaultMessage("Order Item Flat Price")
    String formFieldTitle_orderItemFlatPrice();
    @DefaultMessage("Order Item Seq Id")
    String formFieldTitle_orderItemSeqId();
    @DefaultMessage("Order Name")
    String formFieldTitle_orderName();
    @DefaultMessage("Order Number Prefix")
    String formFieldTitle_orderNumberPrefix();
    @DefaultMessage("Order Payment Preference Id")
    String formFieldTitle_orderPaymentPreferenceId();
    @DefaultMessage("Pick Sheet Printed Date")
    String formFieldTitle_orderPickSheetPrintedDate();
    @DefaultMessage("Order Price Percent")
    String formFieldTitle_orderPricePercent();
    @DefaultMessage("Order Qty Increments")
    String formFieldTitle_orderQtyIncrements();
    @DefaultMessage("Order Sequence")
    String formFieldTitle_orderSequenceEnumId();
    @DefaultMessage("Order Status Id")
    String formFieldTitle_orderStatusId();
    @DefaultMessage("Order Type Description")
    String formFieldTitle_orderTypeDescription();
    @DefaultMessage("Order Type Id")
    String formFieldTitle_orderTypeId();
    @DefaultMessage("Orders Link")
    String formFieldTitle_ordersLink();
    @DefaultMessage("Organization Name")
    String formFieldTitle_organizationName();
    @DefaultMessage("Organization Party Id")
    String formFieldTitle_organizationPartyId();
    @DefaultMessage("Organizational Unit")
    String formFieldTitle_organizationalUnit();
    @DefaultMessage("Orig Amount")
    String formFieldTitle_origAmount();
    @DefaultMessage("Orig Comm Event Id")
    String formFieldTitle_origCommEventId();
    @DefaultMessage("Orig Currency Uom Id")
    String formFieldTitle_origCurrencyUomId();
    @DefaultMessage("Origin Contact Mech Id")
    String formFieldTitle_originContactMechId();
    @DefaultMessage("Origin Facility Id")
    String formFieldTitle_originFacilityId();
    @DefaultMessage("Originated From Party Id")
    String formFieldTitle_originatedFromPartyId();
    @DefaultMessage("Originated From Role Type Id")
    String formFieldTitle_originatedFromRoleTypeId();
    @DefaultMessage("Other Currency")
    String formFieldTitle_otherCurrency();
    @DefaultMessage("Other Local")
    String formFieldTitle_otherLocal();
    @DefaultMessage("Outstanding Amount")
    String formFieldTitle_outstandingAmount();
    @DefaultMessage("Override Gl Account Id")
    String formFieldTitle_overrideGlAccountId();
    @DefaultMessage("Override Org Party Id")
    String formFieldTitle_overrideOrgPartyId();
    @DefaultMessage("Oversize Price")
    String formFieldTitle_oversizePrice();
    @DefaultMessage("Oversize Unit")
    String formFieldTitle_oversizeUnit();
    @DefaultMessage("Owner Party Id")
    String formFieldTitle_ownerPartyId();
    @DefaultMessage("Address 1")
    String formFieldTitle_paAddress1();
    @DefaultMessage("Address 2")
    String formFieldTitle_paAddress2();
    @DefaultMessage("Postal Code")
    String formFieldTitle_paPostalCode();
    @DefaultMessage("Paid Amount")
    String formFieldTitle_paidAmount();
    @DefaultMessage("Date Paid")
    String formFieldTitle_paidDate();
    @DefaultMessage("Parent Comm Event Id")
    String formFieldTitle_parentCommEventId();
    @DefaultMessage("Parent Facility Group Id")
    String formFieldTitle_parentFacilityGroupId();
    @DefaultMessage("Parent Facility Id")
    String formFieldTitle_parentFacilityId();
    @DefaultMessage("Fixed Asset Parent Id")
    String formFieldTitle_parentFixedAssetId();
    @DefaultMessage("Parent Gl Account Id")
    String formFieldTitle_parentGlAccountId();
    @DefaultMessage("Parent Group Id")
    String formFieldTitle_parentGroupId();
    @DefaultMessage("Parent Invoice Id")
    String formFieldTitle_parentInvoiceId();
    @DefaultMessage("Parent Invoice Item Seq Id")
    String formFieldTitle_parentInvoiceItemSeqId();
    @DefaultMessage("Parent Period Id")
    String formFieldTitle_parentPeriodId();
    @DefaultMessage("Parent Shopping List Id")
    String formFieldTitle_parentShoppingListId();
    @DefaultMessage("Parent Type Id")
    String formFieldTitle_parentTypeId();
    @DefaultMessage("Partner")
    String formFieldTitle_partner();
    @DefaultMessage("Party Classification Group Id")
    String formFieldTitle_partyClassificationGroupId();
    @DefaultMessage("Party Classification Type Id")
    String formFieldTitle_partyClassificationTypeId();
    @DefaultMessage("Parent Content Type Id")
    String formFieldTitle_partyContentTypeId();
    @DefaultMessage("Party Id")
    String formFieldTitle_partyId();
    @DefaultMessage("From Party ID")
    String formFieldTitle_partyIdFrom();
    @DefaultMessage("To Party ID")
    String formFieldTitle_partyIdTo();
    @DefaultMessage("Identification Type")
    String formFieldTitle_partyIdentTypeDesc();
    @DefaultMessage("Identification Type")
    String formFieldTitle_partyIdentificationTypeId();
    @DefaultMessage("Party Invitation Id")
    String formFieldTitle_partyInvitationId();
    @DefaultMessage("Party Need Id")
    String formFieldTitle_partyNeedId();
    @DefaultMessage("Party Relationship Name")
    String formFieldTitle_partyRelationshipName();
    @DefaultMessage("Party Relationship Type Id")
    String formFieldTitle_partyRelationshipTypeId();
    @DefaultMessage("Party Tax Id")
    String formFieldTitle_partyTaxId();
    @DefaultMessage("Party Type Id")
    String formFieldTitle_partyTypeId();
    @DefaultMessage("Passport Expire Date")
    String formFieldTitle_passportExpireDate();
    @DefaultMessage("Passport Number")
    String formFieldTitle_passportNumber();
    @DefaultMessage("Password Hint")
    String formFieldTitle_passwordHint();
    @DefaultMessage("Pay To Party Id")
    String formFieldTitle_payToPartyId();
    @DefaultMessage("Payment Application Id")
    String formFieldTitle_paymentApplicationId();
    @DefaultMessage("Already Applied")
    String formFieldTitle_paymentApplied();
    @DefaultMessage("Amount to Apply")
    String formFieldTitle_paymentApplyNow();
    @DefaultMessage("Payment Gateway Response Id")
    String formFieldTitle_paymentGatewayResponseId();
    @DefaultMessage("Payment Group Id")
    String formFieldTitle_paymentGroupId();
    @DefaultMessage("Payment Group Name")
    String formFieldTitle_paymentGroupName();
    @DefaultMessage("Payment Group Type")
    String formFieldTitle_paymentGroupType();
    @DefaultMessage("Payment Group Type Id")
    String formFieldTitle_paymentGroupTypeId();
    @DefaultMessage("Payment Id")
    String formFieldTitle_paymentId();
    @DefaultMessage("Payment Method Id")
    String formFieldTitle_paymentMethodId();
    @DefaultMessage("Payment Method Type")
    String formFieldTitle_paymentMethodTypeId();
    @DefaultMessage("Payment Parent Type Id")
    String formFieldTitle_paymentParentTypeId();
    @DefaultMessage("Payment Preference ID")
    String formFieldTitle_paymentPreferenceId();
    @DefaultMessage("Reference No")
    String formFieldTitle_paymentRefNum();
    @DefaultMessage("Payment Service Type Enum Id")
    String formFieldTitle_paymentServiceTypeEnumId();
    @DefaultMessage("Payment Type ID")
    String formFieldTitle_paymentTypeId();
    @DefaultMessage("Payment Types")
    String formFieldTitle_paymentTypes();
    @DefaultMessage("Per Milli Second")
    String formFieldTitle_perMilliSecond();
    @DefaultMessage("Percent Complete")
    String formFieldTitle_percentComplete();
    @DefaultMessage("Percentage")
    String formFieldTitle_percentage();
    @DefaultMessage("Percentage Used")
    String formFieldTitle_percentageUsed();
    @DefaultMessage("Performed By Party Id")
    String formFieldTitle_performedByPartyId();
    @DefaultMessage("Period1 From Date")
    String formFieldTitle_period1FromDate();
    @DefaultMessage("Period1 Gl Fiscal Type Id")
    String formFieldTitle_period1GlFiscalTypeId();
    @DefaultMessage("Period1 Thru Date")
    String formFieldTitle_period1ThruDate();
    @DefaultMessage("Period2 From Date")
    String formFieldTitle_period2FromDate();
    @DefaultMessage("Period2 Gl Fiscal Type Id")
    String formFieldTitle_period2GlFiscalTypeId();
    @DefaultMessage("Period2 Thru Date")
    String formFieldTitle_period2ThruDate();
    @DefaultMessage("Period Name")
    String formFieldTitle_periodName();
    @DefaultMessage("Period Num")
    String formFieldTitle_periodNum();
    @DefaultMessage("Period Type Id")
    String formFieldTitle_periodTypeId();
    @DefaultMessage("Personal Title")
    String formFieldTitle_personalTitle();
    @DefaultMessage("Physical Inventory Date")
    String formFieldTitle_physicalInventoryDate();
    @DefaultMessage("Physical Inventory Id")
    String formFieldTitle_physicalInventoryId();
    @DefaultMessage("Picklist Bin")
    String formFieldTitle_picklistBinId();
    @DefaultMessage("Pin Code Length")
    String formFieldTitle_pinCodeLength();
    @DefaultMessage("Position Id")
    String formFieldTitle_positionId();
    @DefaultMessage("Post To Gl Account Id")
    String formFieldTitle_postToGlAccountId();
    @DefaultMessage("Postal Code")
    String formFieldTitle_postalCode();
    @DefaultMessage("Posted")
    String formFieldTitle_posted();
    @DefaultMessage("Posted Anonymous")
    String formFieldTitle_postedAnonymous();
    @DefaultMessage("Posted Balance")
    String formFieldTitle_postedBalance();
    @DefaultMessage("Posted Date")
    String formFieldTitle_postedDate();
    @DefaultMessage("Pre Auth")
    String formFieldTitle_preAuth();
    @DefaultMessage("Preferred Contact Mech Id")
    String formFieldTitle_preferredContactMechId();
    @DefaultMessage("Preferred Currency Uom Id")
    String formFieldTitle_preferredCurrencyUomId();
    @DefaultMessage("Price")
    String formFieldTitle_price();
    @DefaultMessage("Price Break Id")
    String formFieldTitle_priceBreakId();
    @DefaultMessage("Price Unit Price")
    String formFieldTitle_priceUnitPrice();
    @DefaultMessage("Primary Parent Category Id")
    String formFieldTitle_primaryParentCategoryId();
    @DefaultMessage("Primary Parent Group Id")
    String formFieldTitle_primaryParentGroupId();
    @DefaultMessage("Primary Product Category Id")
    String formFieldTitle_primaryProductCategoryId();
    @DefaultMessage("Primary Store Group Id")
    String formFieldTitle_primaryStoreGroupId();
    @DefaultMessage("Print Pick Sheet")
    String formFieldTitle_printPickSheet();
    @DefaultMessage("Print First")
    String formFieldTitle_printPickSheetFirst();
    @DefaultMessage("Priority")
    String formFieldTitle_priority();
    @DefaultMessage("processMode")
    String formFieldTitle_processMode();
    @DefaultMessage("Prod Cat Content Type Id")
    String formFieldTitle_prodCatContentTypeId();
    @DefaultMessage("Product Catalog Category Type Id")
    String formFieldTitle_prodCatalogCategoryTypeId();
    @DefaultMessage("Prod Search Exclude Variant")
    String formFieldTitle_prodSearchExcludeVariant();
    @DefaultMessage("Prod Search Exclude Variants")
    String formFieldTitle_prodSearchExcludeVariants();
    @DefaultMessage("Product Category Id")
    String formFieldTitle_productCategoryId();
    @DefaultMessage("Product Category Type Id")
    String formFieldTitle_productCategoryTypeId();
    @DefaultMessage("ProductConfigItemType")
    String formFieldTitle_productConfigItemType();
    @DefaultMessage("Product Content Type Id")
    String formFieldTitle_productContentTypeId();
    @DefaultMessage("Product Feature")
    String formFieldTitle_productFeature();
    @DefaultMessage("Product Feature Category Id")
    String formFieldTitle_productFeatureCategoryId();
    @DefaultMessage("Product Feature Group Id")
    String formFieldTitle_productFeatureGroupId();
    @DefaultMessage("Interaction Type")
    String formFieldTitle_productFeatureIactnTypeId();
    @DefaultMessage("Product Feature Id")
    String formFieldTitle_productFeatureId();
    @DefaultMessage("Product Feature Id To")
    String formFieldTitle_productFeatureIdTo();
    @DefaultMessage("Product Feature Type Id")
    String formFieldTitle_productFeatureTypeId();
    @DefaultMessage("Product Geo Enum Id")
    String formFieldTitle_productGeoEnumId();
    @DefaultMessage("Product Id")
    String formFieldTitle_productId();
    @DefaultMessage("Product Id For")
    String formFieldTitle_productIdFor();
    @DefaultMessage("Product Id In")
    String formFieldTitle_productIdIn();
    @DefaultMessage("Product Id In Subst")
    String formFieldTitle_productIdInSubst();
    @DefaultMessage("Product Maintenance")
    String formFieldTitle_productMaintSeqId();
    @DefaultMessage("Product Maint Type Id")
    String formFieldTitle_productMaintTypeId();
    @DefaultMessage("Product Meter Type Id")
    String formFieldTitle_productMeterTypeId();
    @DefaultMessage("Product Price Purpose Id")
    String formFieldTitle_productPricePurposeId();
    @DefaultMessage("Product Id")
    String formFieldTitle_productProductId();
    @DefaultMessage("Product Promo Action Seq Id")
    String formFieldTitle_productPromoActionSeqId();
    @DefaultMessage("Product Promo Code Id")
    String formFieldTitle_productPromoCodeId();
    @DefaultMessage("Product Promo Id")
    String formFieldTitle_productPromoId();
    @DefaultMessage("Product Promo Name")
    String formFieldTitle_productPromoName();
    @DefaultMessage("Product Promo Rule Id")
    String formFieldTitle_productPromoRuleId();
    @DefaultMessage("Product Store Group Id")
    String formFieldTitle_productStoreGroupId();
    @DefaultMessage("Product Store Id")
    String formFieldTitle_productStoreId();
    @DefaultMessage("Product Store Ship Meth Id")
    String formFieldTitle_productStoreShipMethId();
    @DefaultMessage("Production Capacity")
    String formFieldTitle_productionCapacity();
    @DefaultMessage("production Runs")
    String formFieldTitle_productionRuns();
    @DefaultMessage("Product Id")
    String formFieldTitle_produtId();
    @DefaultMessage("Profit GL account")
    String formFieldTitle_profitGlAccountId();
    @DefaultMessage("Promised Datetime")
    String formFieldTitle_promisedDatetime();
    @DefaultMessage("Promo Name")
    String formFieldTitle_promoName();
    @DefaultMessage("Promo Text")
    String formFieldTitle_promoText();
    @DefaultMessage("Prorate Shipping")
    String formFieldTitle_prorateShipping();
    @DefaultMessage("Prorate Taxes")
    String formFieldTitle_prorateTaxes();
    @DefaultMessage("Proxy Address")
    String formFieldTitle_proxyAddress();
    @DefaultMessage("Proxy Logon")
    String formFieldTitle_proxyLogon();
    @DefaultMessage("Proxy Password")
    String formFieldTitle_proxyPassword();
    @DefaultMessage("Proxy Port")
    String formFieldTitle_proxyPort();
    @DefaultMessage("Purch Survey Copy Me")
    String formFieldTitle_purchSurveyCopyMe();
    @DefaultMessage("Purch Survey Send To")
    String formFieldTitle_purchSurveySendTo();
    @DefaultMessage("Purchase Cost")
    String formFieldTitle_purchaseCost();
    @DefaultMessage("Purchase Cost Uom Id")
    String formFieldTitle_purchaseCostUomId();
    @DefaultMessage("Purchase From Date")
    String formFieldTitle_purchaseFromDate();
    @DefaultMessage("Purchase Order Id")
    String formFieldTitle_purchaseOrderId();
    @DefaultMessage("Purchase Survey Id")
    String formFieldTitle_purchaseSurveyId();
    @DefaultMessage("Purchase Thru Date")
    String formFieldTitle_purchaseThruDate();
    @DefaultMessage("Pwd")
    String formFieldTitle_pwd();
    @DefaultMessage("Quantity")
    String formFieldTitle_quantity();
    @DefaultMessage("Quantity Accepted")
    String formFieldTitle_quantityAccepted();
    @DefaultMessage("Quantity Break Id")
    String formFieldTitle_quantityBreakId();
    @DefaultMessage("Quantity Not Available")
    String formFieldTitle_quantityNotAvailable();
    @DefaultMessage("Quantity On Hand Diff")
    String formFieldTitle_quantityOnHandDiff();
    @DefaultMessage("Quantity On Hand Total")
    String formFieldTitle_quantityOnHandTotal();
    @DefaultMessage("Quantity On Hand Var")
    String formFieldTitle_quantityOnHandVar();
    @DefaultMessage("Quantity Produced")
    String formFieldTitle_quantityProduced();
    @DefaultMessage("Quantity Purchased")
    String formFieldTitle_quantityPurchased();
    @DefaultMessage("Quantity Rejected")
    String formFieldTitle_quantityRejected();
    @DefaultMessage("Quantity To Produce")
    String formFieldTitle_quantityToProduce();
    @DefaultMessage("Quantity Total")
    String formFieldTitle_quantityTotal();
    @DefaultMessage("Quantity Unit Price")
    String formFieldTitle_quantityUnitPrice();
    @DefaultMessage("Quantity Uom Id")
    String formFieldTitle_quantityUomId();
    @DefaultMessage("Quick Assign Party Id")
    String formFieldTitle_quickAssignPartyId();
    @DefaultMessage("Quote Adjustment Id")
    String formFieldTitle_quoteAdjustmentId();
    @DefaultMessage("Quote Id")
    String formFieldTitle_quoteId();
    @DefaultMessage("Quote Id Prefix")
    String formFieldTitle_quoteIdPrefix();
    @DefaultMessage("Quote Item Seq Id")
    String formFieldTitle_quoteItemSeqId();
    @DefaultMessage("Quote Name")
    String formFieldTitle_quoteName();
    @DefaultMessage("Quote Sequence")
    String formFieldTitle_quoteSequenceEnumId();
    @DefaultMessage("Rate")
    String formFieldTitle_rate();
    @DefaultMessage("Rate Amount")
    String formFieldTitle_rateAmount();
    @DefaultMessage("Rate Currency Uom Id")
    String formFieldTitle_rateCurrencyUomId();
    @DefaultMessage("Rate Default Amount")
    String formFieldTitle_rateDefaultAmount();
    @DefaultMessage("Rate Description")
    String formFieldTitle_rateDescription();
    @DefaultMessage("Rate Type Id")
    String formFieldTitle_rateTypeId();
    @DefaultMessage("Rating")
    String formFieldTitle_rating();
    @DefaultMessage("Reading Date")
    String formFieldTitle_readingDate();
    @DefaultMessage("Reading Reason Enum Id")
    String formFieldTitle_readingReasonEnumId();
    @DefaultMessage("Reason")
    String formFieldTitle_reason();
    @DefaultMessage("Reason Enum Id")
    String formFieldTitle_reasonEnumId();
    @DefaultMessage("Receipt Id")
    String formFieldTitle_receiptId();
    @DefaultMessage("Receive Date")
    String formFieldTitle_receiveDate();
    @DefaultMessage("Received By User Login Id")
    String formFieldTitle_receivedByUserLoginId();
    @DefaultMessage("Reconcile Status")
    String formFieldTitle_reconcileStatus();
    @DefaultMessage("Reconcile Status Id")
    String formFieldTitle_reconcileStatusId();
    @DefaultMessage("Reconciled Amount")
    String formFieldTitle_reconciledAmount();
    @DefaultMessage("Reconciled Balance")
    String formFieldTitle_reconciledBalance();
    @DefaultMessage("Reconciled Date")
    String formFieldTitle_reconciledDate();
    @DefaultMessage("Recurrence Info Id")
    String formFieldTitle_recurrenceInfoId();
    @DefaultMessage("Redirect Url")
    String formFieldTitle_redirectUrl();
    @DefaultMessage("Reference Num")
    String formFieldTitle_referenceNum();
    @DefaultMessage("Refund Payment Method Id")
    String formFieldTitle_refundPaymentMethodId();
    @DefaultMessage("Registration Date")
    String formFieldTitle_registrationDate();
    @DefaultMessage("Reject")
    String formFieldTitle_rejectButton();
    @DefaultMessage("Rejection Id")
    String formFieldTitle_rejectionId();
    @DefaultMessage("Relevancy Weight")
    String formFieldTitle_relevancyWeight();
    @DefaultMessage("Remaining Sub Total")
    String formFieldTitle_remainingSubTotal();
    @DefaultMessage("Reminder Date Time")
    String formFieldTitle_reminderDateTime();
    @DefaultMessage("Reminder Offset")
    String formFieldTitle_reminderOffset();
    @DefaultMessage("remove")
    String formFieldTitle_remove();
    @DefaultMessage("Remove")
    String formFieldTitle_removeButton();
    @DefaultMessage("Reorder Quantity")
    String formFieldTitle_reorderQuantity();
    @DefaultMessage("Repeat Count")
    String formFieldTitle_repeatCount();
    @DefaultMessage("Repeat Interval")
    String formFieldTitle_repeatInterval();
    @DefaultMessage("Replenish Level")
    String formFieldTitle_replenishLevel();
    @DefaultMessage("Replenish Method Enum Id")
    String formFieldTitle_replenishMethodEnumId();
    @DefaultMessage("Replenish Payment Id")
    String formFieldTitle_replenishPaymentId();
    @DefaultMessage("Replenish Threshold")
    String formFieldTitle_replenishThreshold();
    @DefaultMessage("Report Type")
    String formFieldTitle_reportType();
    @DefaultMessage("Req Return Inventory Receive")
    String formFieldTitle_reqReturnInventoryReceive();
    @DefaultMessage("Req Ship Addr For Dig Item")
    String formFieldTitle_reqShipAddrForDigItem();
    @DefaultMessage("Req Ship Addr For Dig Items")
    String formFieldTitle_reqShipAddrForDigItems();
    @DefaultMessage("Requests Link")
    String formFieldTitle_requestsLink();
    @DefaultMessage("Require Code")
    String formFieldTitle_requireCode();
    @DefaultMessage("Req. Comp. Addr")
    String formFieldTitle_requireCompanyAddr();
    @DefaultMessage("Require Customer Role")
    String formFieldTitle_requireCustomerRole();
    @DefaultMessage("Require Email Or Party")
    String formFieldTitle_requireEmailOrParty();
    @DefaultMessage("Require Inventory")
    String formFieldTitle_requireInventory();
    @DefaultMessage("Require Password Change")
    String formFieldTitle_requirePasswordChange();
    @DefaultMessage("Require Pin Code")
    String formFieldTitle_requirePinCode();
    @DefaultMessage("Require Tax Id For Exemption")
    String formFieldTitle_requireTaxIdForExemption();
    @DefaultMessage("Req. Usps Addr")
    String formFieldTitle_requireUspsAddr();
    @DefaultMessage("Required By Date")
    String formFieldTitle_requiredByDate();
    @DefaultMessage("requirement By Date")
    String formFieldTitle_requirementByDate();
    @DefaultMessage("Requirement Description")
    String formFieldTitle_requirementDescription();
    @DefaultMessage("Requirement Id")
    String formFieldTitle_requirementId();
    @DefaultMessage("Requirement Method Enum Id")
    String formFieldTitle_requirementMethodEnumId();
    @DefaultMessage("Requirement Start Date")
    String formFieldTitle_requirementStartDate();
    @DefaultMessage("Requirement Type Id")
    String formFieldTitle_requirementTypeId();
    @DefaultMessage("Reserv2nd P P Perc")
    String formFieldTitle_reserv2ndPPPerc();
    @DefaultMessage("Reserv Length")
    String formFieldTitle_reservLength();
    @DefaultMessage("Reserv Nth P P Perc")
    String formFieldTitle_reservNthPPPerc();
    @DefaultMessage("Reserv Persons")
    String formFieldTitle_reservPersons();
    @DefaultMessage("Reserv Start")
    String formFieldTitle_reservStart();
    @DefaultMessage("Reserve Inventory")
    String formFieldTitle_reserveInventory();
    @DefaultMessage("Reserve Order Enum Id")
    String formFieldTitle_reserveOrderEnumId();
    @DefaultMessage("Reserved Date Time")
    String formFieldTitle_reservedDatetime();
    @DefaultMessage("Residence Status Enum Id")
    String formFieldTitle_residenceStatusEnumId();
    @DefaultMessage("Response Required Date")
    String formFieldTitle_responseRequiredDate();
    @DefaultMessage("Response Service")
    String formFieldTitle_responseService();
    @DefaultMessage("Result Bad Card Number")
    String formFieldTitle_resultBadCardNumber();
    @DefaultMessage("Result Bad Expire")
    String formFieldTitle_resultBadExpire();
    @DefaultMessage("Result Declined")
    String formFieldTitle_resultDeclined();
    @DefaultMessage("Result Nsf")
    String formFieldTitle_resultNsf();
    @DefaultMessage("Retry Failed Auths")
    String formFieldTitle_retryFailedAuths();
    @DefaultMessage("Return HeaderType Id")
    String formFieldTitle_returnHeaderTypeId();
    @DefaultMessage("Return Id")
    String formFieldTitle_returnId();
    @DefaultMessage("Return Item Seq Id")
    String formFieldTitle_returnItemSeqId();
    @DefaultMessage("Return Url")
    String formFieldTitle_returnUrl();
    @DefaultMessage("Review Date")
    String formFieldTitle_reviewDate();
    @DefaultMessage("Review Orders Not Picked-Packed")
    String formFieldTitle_reviewOrdersNotPickedOrPacked();
    @DefaultMessage("Review Text")
    String formFieldTitle_reviewText();
    @DefaultMessage("Revision Number")
    String formFieldTitle_revisionNumber();
    @DefaultMessage("Role Type Id")
    String formFieldTitle_roleTypeId();
    @DefaultMessage("Role Type Id From")
    String formFieldTitle_roleTypeIdFrom();
    @DefaultMessage("Role Type Id To")
    String formFieldTitle_roleTypeIdTo();
    @DefaultMessage("Role Type List")
    String formFieldTitle_roleTypeList();
    @DefaultMessage("routingId")
    String formFieldTitle_routingId();
    @DefaultMessage("Rule Id")
    String formFieldTitle_ruleId();
    @DefaultMessage("Rule Operator")
    String formFieldTitle_ruleOperator();
    @DefaultMessage("Rule Seq Id")
    String formFieldTitle_ruleSeqId();
    @DefaultMessage("Run Time")
    String formFieldTitle_runTime();
    @DefaultMessage("Sales Channel Enum Id")
    String formFieldTitle_salesChannelEnumId();
    @DefaultMessage("Sales Opportunity Id")
    String formFieldTitle_salesOpportunityId();
    @DefaultMessage("Sales Tax Amount")
    String formFieldTitle_salesTaxAmount();
    @DefaultMessage("Salutation")
    String formFieldTitle_salutation();
    @DefaultMessage("Salvage Value")
    String formFieldTitle_salvageValue();
    @DefaultMessage("Saturday Capacity")
    String formFieldTitle_saturdayCapacity();
    @DefaultMessage("Saturday Start Time")
    String formFieldTitle_saturdayStartTime();
    @DefaultMessage("Save")
    String formFieldTitle_saveButton();
    @DefaultMessage("Schedule Work Effort Id")
    String formFieldTitle_scheduleWorkEffortId();
    @DefaultMessage("Scheduled Posting Date")
    String formFieldTitle_scheduledPostingDate();
    @DefaultMessage("Scope")
    String formFieldTitle_scopeEnumId();
    @DefaultMessage("Scrap Factor")
    String formFieldTitle_scrapFactor();
    @DefaultMessage("Search")
    String formFieldTitle_searchButton();
    @DefaultMessage("Search Variants")
    String formFieldTitle_searchVariants();
    @DefaultMessage("Secondary Location Seq Id")
    String formFieldTitle_secondaryLocationSeqId();
    @DefaultMessage("Section Id")
    String formFieldTitle_sectionId();
    @DefaultMessage("Select Payment Type Per Item")
    String formFieldTitle_selectPaymentTypePerItem();
    @DefaultMessage("Selected Amount")
    String formFieldTitle_selectedAmount();
    @DefaultMessage("Send")
    String formFieldTitle_sendButton();
    @DefaultMessage("Send Cc")
    String formFieldTitle_sendCc();
    @DefaultMessage("Send Date")
    String formFieldTitle_sendDate();
    @DefaultMessage("Send Notification Email")
    String formFieldTitle_sendNotificationEmail();
    @DefaultMessage("Send To")
    String formFieldTitle_sendTo();
    @DefaultMessage("Sequence Id")
    String formFieldTitle_sequenceId();
    @DefaultMessage("Sequence Num")
    String formFieldTitle_sequenceNum();
    @DefaultMessage("Seq. Num.")
    String formFieldTitle_sequenceNumber();
    @DefaultMessage("Serial Number")
    String formFieldTitle_serialNumber();
    @DefaultMessage("Server URL")
    String formFieldTitle_serverURL();
    @DefaultMessage("Service Loader Name")
    String formFieldTitle_serviceLoaderName();
    @DefaultMessage("Set Owner Upon Issuance")
    String formFieldTitle_setOwnerUponIssuance();
    @DefaultMessage("Settlement")
    String formFieldTitle_settlementTermId();
    @DefaultMessage("Ship After Date")
    String formFieldTitle_shipAfterDate();
    @DefaultMessage("Ship Before Date")
    String formFieldTitle_shipBeforeDate();
    @DefaultMessage("Ship By Date")
    String formFieldTitle_shipByDate();
    @DefaultMessage("Ship Group Seq Id")
    String formFieldTitle_shipGroupSeqId();
    @DefaultMessage("Ship If Capture Fails")
    String formFieldTitle_shipIfCaptureFails();
    @DefaultMessage("Shipment Cost Estimate Id")
    String formFieldTitle_shipmentCostEstimateId();
    @DefaultMessage("Shipment Id")
    String formFieldTitle_shipmentId();
    @DefaultMessage("Shipment Item Seq Id")
    String formFieldTitle_shipmentItemSeqId();
    @DefaultMessage("Shipment Method Type Id")
    String formFieldTitle_shipmentMethodTypeId();
    @DefaultMessage("Shipment Package Seq Id")
    String formFieldTitle_shipmentPackageSeqId();
    @DefaultMessage("Shipment Route Segment Id")
    String formFieldTitle_shipmentRouteSegmentId();
    @DefaultMessage("Shipment Type Id")
    String formFieldTitle_shipmentTypeId();
    @DefaultMessage("Shipping Price Percent")
    String formFieldTitle_shippingPricePercent();
    @DefaultMessage("Shopping List Id")
    String formFieldTitle_shoppingListId();
    @DefaultMessage("Shopping List Item Seq Id")
    String formFieldTitle_shoppingListItemSeqId();
    @DefaultMessage("Shopping List Type Id")
    String formFieldTitle_shoppingListTypeId();
    @DefaultMessage("Show As Enum Id")
    String formFieldTitle_showAsEnumId();
    @DefaultMessage("Show Checkout Gift Options")
    String formFieldTitle_showCheckoutGiftOptions();
    @DefaultMessage("Show In Select")
    String formFieldTitle_showInSelect();
    @DefaultMessage("Show prices with VAT tax included")
    String formFieldTitle_showPricesWithVatTax();
    @DefaultMessage("Show Tax Is Exempt")
    String formFieldTitle_showTaxIsExempt();
    @DefaultMessage("Skids Pallets")
    String formFieldTitle_skidsPallets();
    @DefaultMessage("Social Security Number")
    String formFieldTitle_socialSecurityNumber();
    @DefaultMessage("Soft Identifier")
    String formFieldTitle_softIdentifier();
    @DefaultMessage("Source Id")
    String formFieldTitle_sourceId();
    @DefaultMessage("Source Percentage")
    String formFieldTitle_sourcePercentage();
    @DefaultMessage("Source Reference Id")
    String formFieldTitle_sourceReferenceId();
    @DefaultMessage("Special Terms")
    String formFieldTitle_specialTerms();
    @DefaultMessage("Split Pay Pref Per Shp Grp")
    String formFieldTitle_splitPayPrefPerShpGrp();
    @DefaultMessage("Stack Trace On")
    String formFieldTitle_stackTraceOn();
    @DefaultMessage("Standard Lead Time Days")
    String formFieldTitle_standardLeadTimeDays();
    @DefaultMessage("Start Date")
    String formFieldTitle_startDate();
    @DefaultMessage("Start Date Time")
    String formFieldTitle_startDateTime();
    @DefaultMessage("State Province")
    String formFieldTitle_stateProvince();
    @DefaultMessage("State Province Geo Id")
    String formFieldTitle_stateProvinceGeoId();
    @DefaultMessage("Status Date")
    String formFieldTitle_statusDate();
    @DefaultMessage("Status Date Time")
    String formFieldTitle_statusDateTime();
    @DefaultMessage("Status History")
    String formFieldTitle_statusHistory();
    @DefaultMessage("Status ID")
    String formFieldTitle_statusId();
    @DefaultMessage("Status")
    String formFieldTitle_statusItemDescription();
    @DefaultMessage("Store Credit Valid Days")
    String formFieldTitle_storeCreditValidDays();
    @DefaultMessage("Store Name")
    String formFieldTitle_storeName();
    @DefaultMessage("Story")
    String formFieldTitle_story();
    @DefaultMessage("styleSheet")
    String formFieldTitle_styleSheet();
    @DefaultMessage("Sub Reference")
    String formFieldTitle_subReference();
    @DefaultMessage("Subject")
    String formFieldTitle_subject();
    @DefaultMessage("Submit")
    String formFieldTitle_submitButton();
    @DefaultMessage("Submit Caption")
    String formFieldTitle_submitCaption();
    @DefaultMessage("Subscription Id")
    String formFieldTitle_subscriptionId();
    @DefaultMessage("Subscription Resource Id")
    String formFieldTitle_subscriptionResourceId();
    @DefaultMessage("Subtitle")
    String formFieldTitle_subtitle();
    @DefaultMessage("Successive Failed Logins")
    String formFieldTitle_successiveFailedLogins();
    @DefaultMessage("Suffix")
    String formFieldTitle_suffix();
    @DefaultMessage("Sunday Capacity")
    String formFieldTitle_sundayCapacity();
    @DefaultMessage("Sunday Start Time")
    String formFieldTitle_sundayStartTime();
    @DefaultMessage("Supplier Commission Perc")
    String formFieldTitle_supplierCommissionPerc();
    @DefaultMessage("Supplier Pref Order Id")
    String formFieldTitle_supplierPrefOrderId();
    @DefaultMessage("Supplier Product Id")
    String formFieldTitle_supplierProductId();
    @DefaultMessage("Supplier Product Name")
    String formFieldTitle_supplierProductName();
    @DefaultMessage("Supplier Rating Type Id")
    String formFieldTitle_supplierRatingTypeId();
    @DefaultMessage("Sync Status Id")
    String formFieldTitle_syncStatusId();
    @DefaultMessage("Target")
    String formFieldTitle_target();
    @DefaultMessage("Target Type Enum Id")
    String formFieldTitle_targetTypeEnumId();
    @DefaultMessage("Tax Auth Geo ID")
    String formFieldTitle_taxAuthGeoId();
    @DefaultMessage("Tax Authority Party")
    String formFieldTitle_taxAuthPartyId();
    @DefaultMessage("Tax Authority Rate Seq Id")
    String formFieldTitle_taxAuthorityRateSeqId();
    @DefaultMessage("Tax Form for Organization")
    String formFieldTitle_taxFormId();
    @DefaultMessage("Tax Id Format Pattern")
    String formFieldTitle_taxIdFormatPattern();
    @DefaultMessage("Tax Percentage")
    String formFieldTitle_taxPercentage();
    @DefaultMessage("Tax Promotions")
    String formFieldTitle_taxPromotions();
    @DefaultMessage("Tax Shipping")
    String formFieldTitle_taxShipping();
    @DefaultMessage("Taxable Flag")
    String formFieldTitle_taxableFlag();
    @DefaultMessage("Temporal Expression")
    String formFieldTitle_tempExprId();
    @DefaultMessage("Term Days")
    String formFieldTitle_termDays();
    @DefaultMessage("Term Type Id")
    String formFieldTitle_termTypeId();
    @DefaultMessage("termUomId")
    String formFieldTitle_termUomId();
    @DefaultMessage("Term Value")
    String formFieldTitle_termValue();
    @DefaultMessage("Terminal Id")
    String formFieldTitle_terminalId();
    @DefaultMessage("Text")
    String formFieldTitle_text();
    @DefaultMessage("Text Data")
    String formFieldTitle_textData();
    @DefaultMessage("Text Value")
    String formFieldTitle_textValue();
    @DefaultMessage("Their Acctg Trans Id")
    String formFieldTitle_theirAcctgTransId();
    @DefaultMessage("Thru Date")
    String formFieldTitle_thruDate();
    @DefaultMessage("Thru Due Date")
    String formFieldTitle_thruDueDate();
    @DefaultMessage("Thru Invoice Date")
    String formFieldTitle_thruInvoiceDate();
    @DefaultMessage("Thru Quantity")
    String formFieldTitle_thruQuantity();
    @DefaultMessage("Thursday Capacity")
    String formFieldTitle_thursdayCapacity();
    @DefaultMessage("Thursday Start Time")
    String formFieldTitle_thursdayStartTime();
    @DefaultMessage("Ticker symbol")
    String formFieldTitle_tickerSymbol();
    @DefaultMessage("Time Entry Id")
    String formFieldTitle_timeEntryId();
    @DefaultMessage("Time Transparency")
    String formFieldTitle_timeTransparency();
    @DefaultMessage("Timeout")
    String formFieldTitle_timeout();
    @DefaultMessage("Timesheet Id")
    String formFieldTitle_timesheetId();
    @DefaultMessage("Timesheet Party Id")
    String formFieldTitle_timesheetPartyId();
    @DefaultMessage("Title")
    String formFieldTitle_title();
    @DefaultMessage("Title Text")
    String formFieldTitle_titleText();
    @DefaultMessage("To Name")
    String formFieldTitle_toName();
    @DefaultMessage("To Party Id")
    String formFieldTitle_toPartyId();
    @DefaultMessage("To payment ID")
    String formFieldTitle_toPaymentId();
    @DefaultMessage("To Tax Auth Geo Id")
    String formFieldTitle_toTaxAuthGeoId();
    @DefaultMessage("To Tax Auth Party Id")
    String formFieldTitle_toTaxAuthPartyId();
    @DefaultMessage("Tot Invoice Applied")
    String formFieldTitle_totInvoiceApplied();
    @DefaultMessage("Tot Issued Quantity")
    String formFieldTitle_totIssuedQuantity();
    @DefaultMessage("Tot Ordered Quantity")
    String formFieldTitle_totOrderedQuantity();
    @DefaultMessage("Tot Planned Quantity")
    String formFieldTitle_totPlannedQuantity();
    @DefaultMessage("Total")
    String formFieldTitle_total();
    @DefaultMessage("Total Amount")
    String formFieldTitle_totalAmount();
    @DefaultMessage("Total Cost Price")
    String formFieldTitle_totalCostPrice();
    @DefaultMessage("Total Cubic Size")
    String formFieldTitle_totalCubicSize();
    @DefaultMessage("Cubic Measurement")
    String formFieldTitle_totalCubicUomId();
    @DefaultMessage("Total Discount")
    String formFieldTitle_totalDiscount();
    @DefaultMessage("Total Invoice Not Applied")
    String formFieldTitle_totalInvoiceNotApplied();
    @DefaultMessage("Total List Price")
    String formFieldTitle_totalListPrice();
    @DefaultMessage("Total Markup")
    String formFieldTitle_totalMarkup();
    @DefaultMessage("Total Milli Seconds Allowed")
    String formFieldTitle_totalMilliSecondsAllowed();
    @DefaultMessage("Total Money Allowed")
    String formFieldTitle_totalMoneyAllowed();
    @DefaultMessage("Total of Current Fiscal Period")
    String formFieldTitle_totalOfCurrentFiscalPeriod();
    @DefaultMessage("Total Payment Not Applied")
    String formFieldTitle_totalPaymentNotApplied();
    @DefaultMessage("Total Payments In")
    String formFieldTitle_totalPaymentsIn();
    @DefaultMessage("Total Payments Out")
    String formFieldTitle_totalPaymentsOut();
    @DefaultMessage("Total Percent Markup")
    String formFieldTitle_totalPercentMarkup();
    @DefaultMessage("Total Purchase Invoice")
    String formFieldTitle_totalPurchaseInvoice();
    @DefaultMessage("Total Quantity Open")
    String formFieldTitle_totalQuantityOpen();
    @DefaultMessage("Total Quantity Ordered")
    String formFieldTitle_totalQuantityOrdered();
    @DefaultMessage("Total Retail Price")
    String formFieldTitle_totalRetailPrice();
    @DefaultMessage("Total Sales Invoice")
    String formFieldTitle_totalSalesInvoice();
    @DefaultMessage("Total Weight")
    String formFieldTitle_totalWeight();
    @DefaultMessage("Weight Measurement")
    String formFieldTitle_totalWeightUomId();
    @DefaultMessage("Total Years Work Experience")
    String formFieldTitle_totalYearsWorkExperience();
    @DefaultMessage("Trans Code Enum Id")
    String formFieldTitle_transCodeEnumId();
    @DefaultMessage("Trans Description")
    String formFieldTitle_transDescription();
    @DefaultMessage("Trans Type Description")
    String formFieldTitle_transTypeDescription();
    @DefaultMessage("Transaction Date")
    String formFieldTitle_transactionDate();
    @DefaultMessage("Transaction Id")
    String formFieldTitle_transactionId();
    @DefaultMessage("Tuesday Capacity")
    String formFieldTitle_tuesdayCapacity();
    @DefaultMessage("Tuesday Start Time")
    String formFieldTitle_tuesdayStartTime();
    @DefaultMessage("Type")
    String formFieldTitle_type();
    @DefaultMessage("Un Applied Amount")
    String formFieldTitle_unAppliedAmount();
    @DefaultMessage("unassigned Requirements")
    String formFieldTitle_unassignedRequirements();
    @DefaultMessage("Unit Cost")
    String formFieldTitle_unitCost();
    @DefaultMessage("Units Included")
    String formFieldTitle_unitsIncluded();
    @DefaultMessage("Units Pieces")
    String formFieldTitle_unitsPieces();
    @DefaultMessage("Universal Id")
    String formFieldTitle_universalId();
    @DefaultMessage("UOM")
    String formFieldTitle_uomId();
    @DefaultMessage("Update")
    String formFieldTitle_updateButton();
    @DefaultMessage("Use Case")
    String formFieldTitle_useCase();
    @DefaultMessage("Use Count Limit")
    String formFieldTitle_useCountLimit();
    @DefaultMessage("Use Days Limit")
    String formFieldTitle_useDaysLimit();
    @DefaultMessage("Use Invoice Id For Returns")
    String formFieldTitle_useInvoiceIdForReturns();
    @DefaultMessage("Use Limit Per Code")
    String formFieldTitle_useLimitPerCode();
    @DefaultMessage("Use Limit Per Customer")
    String formFieldTitle_useLimitPerCustomer();
    @DefaultMessage("Use Limit Per Order")
    String formFieldTitle_useLimitPerOrder();
    @DefaultMessage("Use Limit Per Promotion")
    String formFieldTitle_useLimitPerPromotion();
    @DefaultMessage("Use Primary Email Username")
    String formFieldTitle_usePrimaryEmailUsername();
    @DefaultMessage("Use Role Type Id")
    String formFieldTitle_useRoleTypeId();
    @DefaultMessage("Use Time")
    String formFieldTitle_useTime();
    @DefaultMessage("Use Time Uom Id")
    String formFieldTitle_useTimeUomId();
    @DefaultMessage("userAlias")
    String formFieldTitle_userAlias();
    @DefaultMessage("User Entered")
    String formFieldTitle_userEntered();
    @DefaultMessage("User Id")
    String formFieldTitle_userId();
    @DefaultMessage("LDAP Distinguished Name")
    String formFieldTitle_userLdapDn();
    @DefaultMessage("User Login Id")
    String formFieldTitle_userLoginId();
    @DefaultMessage("username")
    String formFieldTitle_username();
    @DefaultMessage("Valid total")
    String formFieldTitle_validTotal();
    @DefaultMessage("Validate GC Fin Acct")
    String formFieldTitle_validateGCFinAcct();
    @DefaultMessage("Variable Cost")
    String formFieldTitle_variableCost();
    @DefaultMessage("Variance Reason Id")
    String formFieldTitle_varianceReasonId();
    @DefaultMessage("Vat Tax Auth Geo Id")
    String formFieldTitle_vatTaxAuthGeoId();
    @DefaultMessage("Vat Tax Auth Party Id")
    String formFieldTitle_vatTaxAuthPartyId();
    @DefaultMessage("Vendor")
    String formFieldTitle_vendor();
    @DefaultMessage("Vendor Party Id")
    String formFieldTitle_vendorPartyId();
    @DefaultMessage("View Cart On Add")
    String formFieldTitle_viewCartOnAdd();
    @DefaultMessage("View Content")
    String formFieldTitle_viewContent();
    @DefaultMessage("Visit Id")
    String formFieldTitle_visitId();
    @DefaultMessage("Visitor Id")
    String formFieldTitle_visitorId();
    @DefaultMessage("Visual Theme")
    String formFieldTitle_visualThemeId();
    @DefaultMessage("Voucher Date")
    String formFieldTitle_voucherDate();
    @DefaultMessage("Voucher Ref")
    String formFieldTitle_voucherRef();
    @DefaultMessage("Wednesday Capacity")
    String formFieldTitle_wednesdayCapacity();
    @DefaultMessage("Wednesday Start Time")
    String formFieldTitle_wednesdayStartTime();
    @DefaultMessage("Weight")
    String formFieldTitle_weight();
    @DefaultMessage("Weight Break Id")
    String formFieldTitle_weightBreakId();
    @DefaultMessage("Weight Unit Price")
    String formFieldTitle_weightUnitPrice();
    @DefaultMessage("Work Effort Assoc Type Id")
    String formFieldTitle_workEffortAssocTypeId();
    @DefaultMessage("Work Effort Content Type Id")
    String formFieldTitle_workEffortContentTypeId();
    @DefaultMessage("Work Effort Good Std Type Id")
    String formFieldTitle_workEffortGoodStdTypeId();
    @DefaultMessage("Work Effort Id")
    String formFieldTitle_workEffortId();
    @DefaultMessage("Work Effort Id From")
    String formFieldTitle_workEffortIdFrom();
    @DefaultMessage("Work Effort Id To")
    String formFieldTitle_workEffortIdTo();
    @DefaultMessage("Work Effort Name")
    String formFieldTitle_workEffortName();
    @DefaultMessage("Work Effort Parent Id")
    String formFieldTitle_workEffortParentId();
    @DefaultMessage("Work Effort Purpose Type Id")
    String formFieldTitle_workEffortPurposeTypeId();
    @DefaultMessage("Work Effort Type Id")
    String formFieldTitle_workEffortTypeId();
    @DefaultMessage("Work Req Fulf Type Description")
    String formFieldTitle_workReqFulfTypeDescription();
    @DefaultMessage("Work Req Fulf Type Id")
    String formFieldTitle_workReqFulfTypeId();
    @DefaultMessage("Year To Date Balance Credit")
    String formFieldTitle_yearToDateBalanceCredit();
    @DefaultMessage("Year To Date Balance Debit")
    String formFieldTitle_yearToDateBalanceDebit();
    @DefaultMessage("Years With Employer")
    String formFieldTitle_yearsWithEmployer();
    @DefaultMessage("French")
    String fr();
    @DefaultMessage("From Date")
    String fromDate();
    @DefaultMessage("Frisian")
    String fy();
    @DefaultMessage("Google Id")
    String goodIdentificationType_description_GOOGLE_ID();
    @DefaultMessage("ISBN")
    String goodIdentificationType_description_ISBN();
    @DefaultMessage("Manufacturer (Model) Number")
    String goodIdentificationType_description_MANUFACTURER_ID_NO();
    @DefaultMessage("Model Year")
    String goodIdentificationType_description_MODEL_YEAR();
    @DefaultMessage("Other")
    String goodIdentificationType_description_OTHER_ID();
    @DefaultMessage("SKU")
    String goodIdentificationType_description_SKU();
    @DefaultMessage("UPCA")
    String goodIdentificationType_description_UPCA();
    @DefaultMessage("UPCE")
    String goodIdentificationType_description_UPCE();
    @DefaultMessage("Google Base")
    String google_Base();
    @DefaultMessage("Greek")
    String gr();
    @DefaultMessage("HR")
    String hR();
    @DefaultMessage("Handheld Facility")
    String handheldFacility();
    @DefaultMessage("Human Resource Application")
    String humanResourceApplication();
    @DefaultMessage("IS Mgr")
    String iS_Mgr();
    @DefaultMessage("Id")
    String id();
    @DefaultMessage("Non-Serialized")
    String inventoryItemType_description_NON_SERIAL_INV_ITEM();
    @DefaultMessage("Serialized")
    String inventoryItemType_description_SERIALIZED_INV_ITEM();
    @DefaultMessage("Italian")
    String it();
    @DefaultMessage("OK")
    String item_availableOk();
    @DefaultMessage("item.availableQnt")
    String item_availableQnt(String quantityReq, String quantityAvail);
    @DefaultMessage("item.cannot_add_product_no_longer_available")
    String item_cannot_add_product_no_longer_available(String productName, String productId);
    @DefaultMessage("item.cannot_add_product_not_configured_correctly")
    String item_cannot_add_product_not_configured_correctly(String productName, String productId);
    @DefaultMessage("item.cannot_add_product_not_yet_available")
    String item_cannot_add_product_not_yet_available(String productName, String productId);
    @DefaultMessage("item.cannot_add_product_virtual")
    String item_cannot_add_product_virtual(String productName, String productId);
    @DefaultMessage("item.cannot_find_Fixed_Asset")
    String item_cannot_find_Fixed_Asset(String productId);
    @DefaultMessage("item.fixed_Asset_not_found")
    String item_fixed_Asset_not_found(String fixedAssetId);
    @DefaultMessage("item.maximum_number_of_person_renting")
    String item_maximum_number_of_person_renting(String reservMaxPersons, String reservPersons);
    @DefaultMessage("The starting date of the reservation is missing....")
    String item_missing_reservation_starting_date();
    @DefaultMessage("item.notAvailable")
    String item_notAvailable(String resultMessage);
    @DefaultMessage("Please enter a number of days, 1, or more....")
    String item_number_of_days();
    @DefaultMessage("item.product_not_available")
    String item_product_not_available(String productId, String availableMessage);
    @DefaultMessage("item.product_not_found")
    String item_product_not_found(String productId);
    @DefaultMessage("You can only make reservation starting tomorrow....")
    String item_reservation_from_tomorrow();
    @DefaultMessage("ERROR: There are no items to order")
    String items_none();
    @DefaultMessage("Last Name")
    String lastName();
    @DefaultMessage("Lead Id")
    String leadId();
    @DefaultMessage("Lead List")
    String leadList();
    @DefaultMessage("One Moment...")
    String loading();
    @DefaultMessage("Manufacturing")
    String manufacturing();
    @DefaultMessage("ATP Date")
    String manufacturingATPDate();
    @DefaultMessage("Completion Date")
    String manufacturingActualCompletionDate();
    @DefaultMessage("Actual Costs")
    String manufacturingActualCosts();
    @DefaultMessage("Actual End Date/Time")
    String manufacturingActualEndDateTime();
    @DefaultMessage("Actual Materials")
    String manufacturingActualMaterials();
    @DefaultMessage("Actual Start Date/Time")
    String manufacturingActualStartDateTime();
    @DefaultMessage("Add a existing RoutingTask")
    String manufacturingAddExistingRoutingTask();
    @DefaultMessage("Assign Fixed Asset")
    String manufacturingAddProductionRunFixedAssetAssign();
    @DefaultMessage("Add ProductComponent to ProductionRun")
    String manufacturingAddProductionRunProductComponent();
    @DefaultMessage("Add Production Run Routing Task Not Created")
    String manufacturingAddProductionRunRoutingTaskNotCreated();
    @DefaultMessage("Add Qty Produced")
    String manufacturingAddQuantityProduced();
    @DefaultMessage("Add Qty Rejected")
    String manufacturingAddQuantityRejected();
    @DefaultMessage("Add a RoutingTask")
    String manufacturingAddRoutingTask();
    @DefaultMessage("Add Actual Setup Time")
    String manufacturingAddSetupTime();
    @DefaultMessage("Add Actual Task Time")
    String manufacturingAddTaskTime();
    @DefaultMessage("Any Fixed Asset Group")
    String manufacturingAnyMachineGroup();
    @DefaultMessage("Approve Requirements")
    String manufacturingApproveRequirements();
    @DefaultMessage("Associated Production Runs")
    String manufacturingAssociatedProductionRuns();
    @DefaultMessage("Bill Of Materials")
    String manufacturingBillOfMaterials();
    @DefaultMessage("Bom Simulation")
    String manufacturingBomSimulation();
    @DefaultMessage("Bom Type")
    String manufacturingBomType();
    @DefaultMessage("Calendar")
    String manufacturingCalendar();
    @DefaultMessage("Manufacturing Calendar Capacity")
    String manufacturingCalendarCapacity();
    @DefaultMessage("Exception Day")
    String manufacturingCalendarExceptionDate();
    @DefaultMessage("Manufacturing Calendar Exception  Day Id Already Exist")
    String manufacturingCalendarExceptionDayIdAlreadyExist();
    @DefaultMessage("There is still an exception day for this calendar")
    String manufacturingCalendarExceptionDayUseCalendar();
    @DefaultMessage("Exception Week")
    String manufacturingCalendarExceptionWeek();
    @DefaultMessage("Manufacturing Calendar Exception Week Id Already Exist")
    String manufacturingCalendarExceptionWeekIdAlreadyExist();
    @DefaultMessage("There is still an exception week for this calendar")
    String manufacturingCalendarExceptionWeekUseCalendar();
    @DefaultMessage("Calendar ID")
    String manufacturingCalendarId();
    @DefaultMessage("Calendar Id already exist")
    String manufacturingCalendarIdAlreadyExist();
    @DefaultMessage("You do not have permission to view this page. (\"MANUFACTURING_VIEW\" or \"MANUFACTURING_ADMIN\" needed)")
    String manufacturingCalendarPermissionError();
    @DefaultMessage("There is still an calendar which use this week")
    String manufacturingCalendarUseCalendarWeek();
    @DefaultMessage("Week")
    String manufacturingCalendarWeek();
    @DefaultMessage("There is still an exception week which use this week")
    String manufacturingCalendarWeekExceptionUseCalendarWeek();
    @DefaultMessage("Calendar Week ID")
    String manufacturingCalendarWeekId();
    @DefaultMessage("CalendarWeekId already exist")
    String manufacturingCalendarWeekIdAlreadyExist();
    @DefaultMessage("Calendar Week ID does''nt exist")
    String manufacturingCalendarWeekIdNotExisting();
    @DefaultMessage("Weeks")
    String manufacturingCalendarWeeks();
    @DefaultMessage("Calendars")
    String manufacturingCalendars();
    @DefaultMessage("Cancel")
    String manufacturingCancel();
    @DefaultMessage("Comments")
    String manufacturingComments();
    @DefaultMessage("OFBiz: Manufacturing Manager")
    String manufacturingCompanyName();
    @DefaultMessage("Part of the Open For Business Family of Open Source Software")
    String manufacturingCompanySubtitle();
    @DefaultMessage("Complete")
    String manufacturingCompleteProductionRunTask();
    @DefaultMessage("Completion Date")
    String manufacturingCompletionDate();
    @DefaultMessage("Components of Shipment Plan")
    String manufacturingComponentsOfShipmentPlan();
    @DefaultMessage("Configuration Not Available")
    String manufacturingConfigurationNotAvailable();
    @DefaultMessage("Confirm")
    String manufacturingConfirmProductionRun();
    @DefaultMessage("Copy a routingTask and Add it")
    String manufacturingCopyAndAddRoutingTask();
    @DefaultMessage("Copy BOM")
    String manufacturingCopyBOMAssocs();
    @DefaultMessage("To Product Id")
    String manufacturingCopyToProductId();
    @DefaultMessage("Costs")
    String manufacturingCostCalcs();
    @DefaultMessage("Create Bom")
    String manufacturingCreateBom();
    @DefaultMessage("Create calendar")
    String manufacturingCreateCalendar();
    @DefaultMessage("Create Calendar Week")
    String manufacturingCreateCalendarWeek();
    @DefaultMessage("Create a Fixed Asset group")
    String manufacturingCreateMachineGroup();
    @DefaultMessage("Security Error: to run this operation you must have the MANUFACTURING_CREATE or MANUFACTURING_ADMIN permission")
    String manufacturingCreatePermissionError();
    @DefaultMessage("Create Bill Of Material")
    String manufacturingCreateProductBom();
    @DefaultMessage("Create a Production Run")
    String manufacturingCreateProductionRun();
    @DefaultMessage("Custom Length")
    String manufacturingCustomLength();
    @DefaultMessage("Cutting List")
    String manufacturingCuttingList();
    @DefaultMessage("Cutting List Report")
    String manufacturingCuttingListReport();
    @DefaultMessage("Declare")
    String manufacturingDeclareProductionRunTask();
    @DefaultMessage("ManufacturingDecomposingInventoryItem")
    String manufacturingDecomposingInventoryItem(String productId, String inventoryItemId);
    @DefaultMessage("Security Error: to run this operation you must have the MANUFACTURING_DELETE or MANUFACTURING_ADMIN permission")
    String manufacturingDeletePermissionError();
    @DefaultMessage("Delivery date")
    String manufacturingDeliveryDate();
    @DefaultMessage("This production run is required before the following productions could be completed")
    String manufacturingDependentProductionRuns();
    @DefaultMessage("Dependent Production Runs")
    String manufacturingDependentWorkEfforts();
    @DefaultMessage("Destination")
    String manufacturingDestination();
    @DefaultMessage("ManufacturingDuplicatedComponentInBOM")
    String manufacturingDuplicatedComponentInBOM(String param_0, String param_1);
    @DefaultMessage("Edit Calendar Exception day for")
    String manufacturingEditCalendarExceptionDayFor();
    @DefaultMessage("Edit Calendar Exception week for")
    String manufacturingEditCalendarExceptionWeekFor();
    @DefaultMessage("Edit Week")
    String manufacturingEditCalendarWeek();
    @DefaultMessage("Edit Cost Component Calc Entries")
    String manufacturingEditCostComponentCalc();
    @DefaultMessage("Edit Fixed Asset")
    String manufacturingEditMachine();
    @DefaultMessage("Edit Fixed AssetGroup")
    String manufacturingEditMachineGroup();
    @DefaultMessage("Edit BOM")
    String manufacturingEditProductBom();
    @DefaultMessage("Edit Production Run")
    String manufacturingEditProductionRun();
    @DefaultMessage("Edit Routing")
    String manufacturingEditRouting();
    @DefaultMessage("Edit Routing Product Link")
    String manufacturingEditRoutingProductLink();
    @DefaultMessage("Edit Routing Task")
    String manufacturingEditRoutingTask();
    @DefaultMessage("Edit Routing Task Assoc")
    String manufacturingEditRoutingTaskAssoc();
    @DefaultMessage("Edit Routing Task Association Date validity")
    String manufacturingEditRoutingTaskAssocDateValidity();
    @DefaultMessage("Edit Routing Task - ID")
    String manufacturingEditRoutingTaskId();
    @DefaultMessage("Engineering Bill of Materials")
    String manufacturingEngineeringBillOfMaterials();
    @DefaultMessage("Error, Bom does not exist")
    String manufacturingErrorBomNotExist();
    @DefaultMessage("Calculated Completion Date")
    String manufacturingEstimatedCompletionDate();
    @DefaultMessage("Completion Date")
    String manufacturingEstimatedShipDate();
    @DefaultMessage("Estimated Start Date")
    String manufacturingEstimatedStartDate();
    @DefaultMessage("Start of Exception Date")
    String manufacturingExceptionDateStart();
    @DefaultMessage("Date and Time of exception day")
    String manufacturingExceptionDateStartTime();
    @DefaultMessage("Explosion")
    String manufacturingExplosion();
    @DefaultMessage("Explosion (only for products needing manufacturing)")
    String manufacturingExplosionManufacturing();
    @DefaultMessage("Single Level Explosion")
    String manufacturingExplosionSingleLevel();
    @DefaultMessage("The facility table does not exist")
    String manufacturingFacilityNotExist();
    @DefaultMessage("Find Bill Of Materials")
    String manufacturingFindBillOfMaterials();
    @DefaultMessage("Find Inventory Event Planned")
    String manufacturingFindInventory();
    @DefaultMessage("Find Parts")
    String manufacturingFindParts();
    @DefaultMessage("Find Production Run")
    String manufacturingFindProductionRun();
    @DefaultMessage("Find Routing")
    String manufacturingFindRouting();
    @DefaultMessage("Find Routing Tasks")
    String manufacturingFindRoutingTasks();
    @DefaultMessage("The Allocated Cost field is not formatted correctly")
    String manufacturingFixedAssetAllocatedCostNotCorrect();
    @DefaultMessage("The From date is missing")
    String manufacturingFixedAssetFromDateMissing();
    @DefaultMessage("The From Date field is not formatted correctly")
    String manufacturingFixedAssetFromDateNotCorrect();
    @DefaultMessage("FixedAsset does not exist")
    String manufacturingFixedAssetNotExist();
    @DefaultMessage("The Thru Date field is not formatted correctly")
    String manufacturingFixedAssetThruDateNotCorrect();
    @DefaultMessage("Formula")
    String manufacturingFormula();
    @DefaultMessage("From Date")
    String manufacturingFromDate();
    @DefaultMessage("Generate Production Runs")
    String manufacturingGenerateProductionRuns();
    @DefaultMessage("Hardware")
    String manufacturingHardware();
    @DefaultMessage("Implosion")
    String manufacturingImplosion();
    @DefaultMessage("Instruction")
    String manufacturingInstruction();
    @DefaultMessage("Inventory Event Planned")
    String manufacturingInventoryEventPlanned();
    @DefaultMessage("Inventory Event Planned Create Error")
    String manufacturingInventoryEventPlannedCreateError();
    @DefaultMessage("Inventory Event Planned Not Exist")
    String manufacturingInventoryEventPlannedNotExist();
    @DefaultMessage("Inventory Event Planned Not Update")
    String manufacturingInventoryEventPlannedNotUpdate();
    @DefaultMessage("Inventory Event Type does not exist")
    String manufacturingInventoryEventTypeNotExist();
    @DefaultMessage("Inventory Item table does not exist")
    String manufacturingInventoryItemNotExis();
    @DefaultMessage("Inventory Items")
    String manufacturingInventoryItemsProduced();
    @DefaultMessage("Issue Components (ATP)")
    String manufacturingIssueAvailableProductionRunTask();
    @DefaultMessage("Issue Components")
    String manufacturingIssueProductionRunTask();
    @DefaultMessage("Issued")
    String manufacturingIssuedQuantity();
    @DefaultMessage("JobShop")
    String manufacturingJobShop();
    @DefaultMessage("Init Low Level Codes")
    String manufacturingLLCInit();
    @DefaultMessage("Label number")
    String manufacturingLabelNumber();
    @DefaultMessage("List of weeks")
    String manufacturingListCalendarWeek();
    @DefaultMessage("List Of Production Run Components")
    String manufacturingListOfProductionRunComponents();
    @DefaultMessage("List Of Production Run Fixed Assets")
    String manufacturingListOfProductionRunFixedAssets();
    @DefaultMessage("List Of Production Run Notes")
    String manufacturingListOfProductionRunNotes();
    @DefaultMessage("Tasks")
    String manufacturingListOfProductionRunRoutingTasks();
    @DefaultMessage("Deliverable Products")
    String manufacturingListProducts();
    @DefaultMessage("List Routings")
    String manufacturingListRoutings();
    @DefaultMessage("Error while listing the Bill of Material")
    String manufacturingListingBomError();
    @DefaultMessage("Lot Not Exists")
    String manufacturingLotNotExists();
    @DefaultMessage("Fixed Asset")
    String manufacturingMachine();
    @DefaultMessage("Fixed Asset group")
    String manufacturingMachineGroup();
    @DefaultMessage("Fixed Asset group ID")
    String manufacturingMachineGroupId();
    @DefaultMessage("Fixed Asset Group ID doesn''t exist")
    String manufacturingMachineGroupIdAlreadyExist();
    @DefaultMessage("Security Error: to work on a Fixed Asset Group you must have the MANUFACTURING_CREATE or MANUFACTURING_ADMIN permission")
    String manufacturingMachineGroupPermissionError();
    @DefaultMessage("Fixed Asset ID")
    String manufacturingMachineId();
    @DefaultMessage("Fixed Asset Id already exists")
    String manufacturingMachineIdAlreadyExist();
    @DefaultMessage("Security Error: to work on Fixed Asset you must have the MANUFACTURING_CREATE or MANUFACTURING_ADMIN permission")
    String manufacturingMachinePermissionError();
    @DefaultMessage("Manufacturing Manager Main Page")
    String manufacturingMainPage();
    @DefaultMessage("NOTE: This application is currently in development. This page will change.")
    String manufacturingMainPageNote();
    @DefaultMessage("Manage Cost Component Calc Entries")
    String manufacturingManageCostComponentCalc();
    @DefaultMessage("Manufacturing Manager")
    String manufacturingManager();
    @DefaultMessage("Manufacturing Manager Application")
    String manufacturingManagerApplication();
    @DefaultMessage("The following production runs must be completed before this production run")
    String manufacturingMandatoryProductionRuns();
    @DefaultMessage("Mandatory Production Runs")
    String manufacturingMandatoryWorkEfforts();
    @DefaultMessage("Manufacturing Rules")
    String manufacturingManufacturingRules();
    @DefaultMessage("Materials")
    String manufacturingMaterials();
    @DefaultMessage("Materials Not Available in Warehouse")
    String manufacturingMaterialsNotAvailable();
    @DefaultMessage("Materials Required By The Running Task")
    String manufacturingMaterialsRequiredByRunningTask();
    @DefaultMessage("Model")
    String manufacturingModel();
    @DefaultMessage("MRP")
    String manufacturingMrp();
    @DefaultMessage("IEP init.")
    String manufacturingMrpInitialisation();
    @DefaultMessage("An Mrp Job is Running")
    String manufacturingMrpJobIsRunning();
    @DefaultMessage("Last Job")
    String manufacturingMrpJobLastExecuted();
    @DefaultMessage("Scheduled or running Jobs")
    String manufacturingMrpJobScheduledOrRunning();
    @DefaultMessage("MRP Log")
    String manufacturingMrpLog();
    @DefaultMessage("Mrp Name")
    String manufacturingMrpName();
    @DefaultMessage("Need Quantity")
    String manufacturingNeedQuantity();
    @DefaultMessage("New calendar")
    String manufacturingNewCalendar();
    @DefaultMessage("New Week")
    String manufacturingNewCalendarWeek();
    @DefaultMessage("New Fixed Asset group")
    String manufacturingNewMachineGroup();
    @DefaultMessage("New Routing")
    String manufacturingNewRouting();
    @DefaultMessage("New Routing Task")
    String manufacturingNewRoutingTask();
    @DefaultMessage("Add Deliverable Product")
    String manufacturingNewRoutingTaskProduct();
    @DefaultMessage("No calendar found")
    String manufacturingNoCalendarFound();
    @DefaultMessage("No Data Available.")
    String manufacturingNoDataAvailable();
    @DefaultMessage("No Fixed Asset group found")
    String manufacturingNoMachineGroupFound();
    @DefaultMessage("No ProductionRun Selected")
    String manufacturingNoProductionRunSelected();
    @DefaultMessage("date/time entries denote that the current time is before the From Date or after the Thru Date. If the From Date is")
    String manufacturingNote1();
    @DefaultMessage(", association has not started yet; if Thru Date is")
    String manufacturingNote2();
    @DefaultMessage(", association has expired (and should probably be deleted).")
    String manufacturingNote3();
    @DefaultMessage("On Hand Quantity")
    String manufacturingOnHandQuantity();
    @DefaultMessage("Operation Code And Description")
    String manufacturingOperationCodeAndDescription();
    @DefaultMessage("Operation Run For Shipment")
    String manufacturingOperationRunForShipment();
    @DefaultMessage("Order Items")
    String manufacturingOrderItems();
    @DefaultMessage("Package")
    String manufacturingPackage();
    @DefaultMessage("Package Configurator Error")
    String manufacturingPackageConfiguratorError();
    @DefaultMessage("Package Contents And Order")
    String manufacturingPackageContentsAndOrder();
    @DefaultMessage("Package Labels Report")
    String manufacturingPackageLabelsReport();
    @DefaultMessage("Package Number")
    String manufacturingPackageNumber();
    @DefaultMessage("Panel number")
    String manufacturingPanelNumber();
    @DefaultMessage("Picking date")
    String manufacturingPickingDate();
    @DefaultMessage("Picking for release")
    String manufacturingPickingListFx();
    @DefaultMessage("Picking period")
    String manufacturingPickingPeriod();
    @DefaultMessage("Manufacturing Plan")
    String manufacturingPlan();
    @DefaultMessage("Manufacturing Print Production Run")
    String manufacturingPrintProductionRun();
    @DefaultMessage("Printout Date")
    String manufacturingPrintoutDate();
    @DefaultMessage("Stock in")
    String manufacturingProduceQuantity();
    @DefaultMessage("If required, materials will be issued as well.")
    String manufacturingProduceQuantityMessage();
    @DefaultMessage("ProductAssoc does not exist")
    String manufacturingProductAssocNotExist();
    @DefaultMessage("Draw no")
    String manufacturingProductBrandName();
    @DefaultMessage("This Product is a Component of")
    String manufacturingProductComponentOf();
    @DefaultMessage("Components of this Product")
    String manufacturingProductComponents();
    @DefaultMessage("ProductFacility table does not exist")
    String manufacturingProductFacilityTableNotExist();
    @DefaultMessage("Product has no Bill of material")
    String manufacturingProductHasNoBom();
    @DefaultMessage("Product ID")
    String manufacturingProductId();
    @DefaultMessage("Product ID To")
    String manufacturingProductIdTo();
    @DefaultMessage("Product is WIP")
    String manufacturingProductIsWIP();
    @DefaultMessage("Product Level")
    String manufacturingProductLevel();
    @DefaultMessage("Product does not exist")
    String manufacturingProductNotExist();
    @DefaultMessage("Product Routing link doesn''t exist")
    String manufacturingProductRoutingNotExist();
    @DefaultMessage("The product Table does not exist")
    String manufacturingProductTableNotExist();
    @DefaultMessage("Virtual")
    String manufacturingProductVirtual();
    @DefaultMessage("Production Res Qty Calc")
    String manufacturingProductionResQtyCalc();
    @DefaultMessage("Production Run")
    String manufacturingProductionRun();
    @DefaultMessage("Production Run Actual Components")
    String manufacturingProductionRunActualComponents();
    @DefaultMessage("Assocs")
    String manufacturingProductionRunAssocs();
    @DefaultMessage("Close Production Run")
    String manufacturingProductionRunClose();
    @DefaultMessage("Production Run Completion Date Not Correct")
    String manufacturingProductionRunCompletionDateNotCorrect();
    @DefaultMessage("Production Run Component Added")
    String manufacturingProductionRunComponentAdded();
    @DefaultMessage("Production Run Component Not Added")
    String manufacturingProductionRunComponentNotAdded();
    @DefaultMessage("Production Run Component Not Exists")
    String manufacturingProductionRunComponentNotExists();
    @DefaultMessage("Production Run Component Updated")
    String manufacturingProductionRunComponentUpdated();
    @DefaultMessage("Production Run Components")
    String manufacturingProductionRunComponents();
    @DefaultMessage("Production Runs Componentes By Feature")
    String manufacturingProductionRunComponentsByFeature();
    @DefaultMessage("Production Run Costs")
    String manufacturingProductionRunCosts();
    @DefaultMessage("ManufacturingProductionRunCreated")
    String manufacturingProductionRunCreated(String productionRunId);
    @DefaultMessage("Production Run Declaration")
    String manufacturingProductionRunDeclaration();
    @DefaultMessage("Production Run Declare And Produce")
    String manufacturingProductionRunDeclareAndProduce();
    @DefaultMessage("Fixed Asset Assign")
    String manufacturingProductionRunFixedAssetAssign();
    @DefaultMessage("Fixed Asset Id is missing")
    String manufacturingProductionRunFixedAssetIdMissing();
    @DefaultMessage("Production Run Fixed Assets")
    String manufacturingProductionRunFixedAssets();
    @DefaultMessage("Production Run ID")
    String manufacturingProductionRunId();
    @DefaultMessage("Production Runs Info And Order")
    String manufacturingProductionRunInfoAndOrder();
    @DefaultMessage("Production Run Name")
    String manufacturingProductionRunName();
    @DefaultMessage("Production Run Not Created")
    String manufacturingProductionRunNotCreated();
    @DefaultMessage("Production Run Not Exists")
    String manufacturingProductionRunNotExists();
    @DefaultMessage("Production Run update failed see log for more information")
    String manufacturingProductionRunNotUpdated();
    @DefaultMessage("Production Run Print Documents")
    String manufacturingProductionRunPrintDocuments();
    @DefaultMessage("Production Run Printed")
    String manufacturingProductionRunPrinted();
    @DefaultMessage("Production Run Priority Missing")
    String manufacturingProductionRunPriorityMissing();
    @DefaultMessage("Production Run Produce")
    String manufacturingProductionRunProduce();
    @DefaultMessage("Production Run Product Component")
    String manufacturingProductionRunProductComponent();
    @DefaultMessage("Production Run Product Produce Not Still Available")
    String manufacturingProductionRunProductProducedNotStillAvailable();
    @DefaultMessage("Production Run Quantity is missing")
    String manufacturingProductionRunQuantityMissing();
    @DefaultMessage("Production Run Quantity field is not formatted correctly")
    String manufacturingProductionRunQuantityNotCorrect();
    @DefaultMessage("Production Run Start Date is missing")
    String manufacturingProductionRunStartDateMissing();
    @DefaultMessage("the Start Date field is incorrect, format must be AAAA-mm-jj HH:mm:ss")
    String manufacturingProductionRunStartDateNotCorrect();
    @DefaultMessage("Production Run status changed successfully.")
    String manufacturingProductionRunStatusChanged();
    @DefaultMessage("Production Run Status Not Changed")
    String manufacturingProductionRunStatusNotChanged();
    @DefaultMessage("Production Run Status Not Changed Mandatory Production Run Found")
    String manufacturingProductionRunStatusNotChangedMandatoryProductionRunFound();
    @DefaultMessage("Production Run Status Not Changed Mandatory Production Run Not Completed")
    String manufacturingProductionRunStatusNotChangedMandatoryProductionRunNotCompleted();
    @DefaultMessage("Production Run Task Cannot Start Docs Not Printed")
    String manufacturingProductionRunTaskCannotStartDocsNotPrinted();
    @DefaultMessage("Production Run Task Cannot Start Prev Tasks Not Completed")
    String manufacturingProductionRunTaskCannotStartPrevTasksNotCompleted();
    @DefaultMessage("Production Run Task Not Exists")
    String manufacturingProductionRunTaskNotExists();
    @DefaultMessage("Production Run Task Not Running")
    String manufacturingProductionRunTaskNotRunning();
    @DefaultMessage("Production Run Task Status Changed")
    String manufacturingProductionRunTaskStatusChanged();
    @DefaultMessage("Production Run Tasks")
    String manufacturingProductionRunTasks();
    @DefaultMessage("Production Runs")
    String manufacturingProductionRuns();
    @DefaultMessage("Products Components")
    String manufacturingProductsComponents();
    @DefaultMessage("Products Stacks")
    String manufacturingProductsStacks();
    @DefaultMessage("Proposed Order")
    String manufacturingProposedOrder();
    @DefaultMessage("Square meters")
    String manufacturingQtyM2();
    @DefaultMessage("Quantity")
    String manufacturingQuantity();
    @DefaultMessage("Quantity Minimum")
    String manufacturingQuantityMinimum();
    @DefaultMessage("Produced")
    String manufacturingQuantityProduced();
    @DefaultMessage("Quantity produced cannot be greater than the quantity declared.")
    String manufacturingQuantityProducedIsHigherThanQuantityDeclared();
    @DefaultMessage("Rejected")
    String manufacturingQuantityRejected();
    @DefaultMessage("Remaining")
    String manufacturingQuantityRemaining();
    @DefaultMessage("Qty To Produce")
    String manufacturingQuantityToProduce();
    @DefaultMessage("Quick Close")
    String manufacturingQuickClose();
    @DefaultMessage("Quick Complete")
    String manufacturingQuickComplete();
    @DefaultMessage("Quick Run All Tasks")
    String manufacturingQuickRunAllTasks();
    @DefaultMessage("Quick Run Task")
    String manufacturingQuickRunTask();
    @DefaultMessage("Quick Start All Tasks")
    String manufacturingQuickStartAllTasks();
    @DefaultMessage("Reason")
    String manufacturingReason();
    @DefaultMessage("Reference")
    String manufacturingReference();
    @DefaultMessage("Released")
    String manufacturingReleased();
    @DefaultMessage("Released/Note")
    String manufacturingReleasedNote();
    @DefaultMessage("Reports")
    String manufacturingReports();
    @DefaultMessage("Requester")
    String manufacturingRequester();
    @DefaultMessage("Requirement By Date")
    String manufacturingRequirementByDate();
    @DefaultMessage("Requirement Id")
    String manufacturingRequirementId();
    @DefaultMessage("Requirement Non Deleted")
    String manufacturingRequirementNotDeleted();
    @DefaultMessage("Requirement Non Exists")
    String manufacturingRequirementNotExists();
    @DefaultMessage("Requirement Non Updated")
    String manufacturingRequirementNotUpdated();
    @DefaultMessage("Requirement Start Date")
    String manufacturingRequirementStartDate();
    @DefaultMessage("Return Unused Materials To Warehouse")
    String manufacturingReturnMaterials();
    @DefaultMessage("Returned")
    String manufacturingReturnedQuantity();
    @DefaultMessage("Routing")
    String manufacturingRouting();
    @DefaultMessage("Routing has no Routing Task")
    String manufacturingRoutingHasNoRoutingTask();
    @DefaultMessage("Routing Id")
    String manufacturingRoutingId();
    @DefaultMessage("RoutingId is missing")
    String manufacturingRoutingIdMissing();
    @DefaultMessage("Routing Name")
    String manufacturingRoutingName();
    @DefaultMessage("The Routing Seq Id format is not correct")
    String manufacturingRoutingSeqIdFormatNotCorrect();
    @DefaultMessage("Routing SeqId is Missing")
    String manufacturingRoutingSeqIdMissing();
    @DefaultMessage("Routing Task")
    String manufacturingRoutingTask();
    @DefaultMessage("Routing Task association creation successfull")
    String manufacturingRoutingTaskAssocCreateSuccessfully();
    @DefaultMessage("Routing Task copied Successfully")
    String manufacturingRoutingTaskCopiedSuccessfully();
    @DefaultMessage("Routing Task Costs")
    String manufacturingRoutingTaskCosts();
    @DefaultMessage("Fixed Assets")
    String manufacturingRoutingTaskFixedAssets();
    @DefaultMessage("Routing Task Id")
    String manufacturingRoutingTaskId();
    @DefaultMessage("Routing Task Id Missing")
    String manufacturingRoutingTaskIdMissing();
    @DefaultMessage("Routing Task Not Exists")
    String manufacturingRoutingTaskNotExists();
    @DefaultMessage("Routing Task Seq Id Already Exists")
    String manufacturingRoutingTaskSeqIdAlreadyExist();
    @DefaultMessage("Routing Task Start Date Before Production Run")
    String manufacturingRoutingTaskStartDateBeforePRun();
    @DefaultMessage("Routing Task To is Missing")
    String manufacturingRoutingTaskToMissing();
    @DefaultMessage("Routing Tasks")
    String manufacturingRoutingTasks();
    @DefaultMessage("Routings")
    String manufacturingRoutings();
    @DefaultMessage("Run MRP")
    String manufacturingRunMrp();
    @DefaultMessage("Schedule")
    String manufacturingSchedule();
    @DefaultMessage("Scrap Factor %")
    String manufacturingScrapFactor();
    @DefaultMessage("Selected Features")
    String manufacturingSelectedFeatures();
    @DefaultMessage("Ship To")
    String manufacturingShipTo();
    @DefaultMessage("Shipment Id")
    String manufacturingShipmentId();
    @DefaultMessage("Shipment Plan Stock Report")
    String manufacturingShipmentPlanStockReport();
    @DefaultMessage("Shipment Plans")
    String manufacturingShipmentPlans();
    @DefaultMessage("Shipment WorkEffort Tasks")
    String manufacturingShipmentWorkEffortTasks();
    @DefaultMessage("Shop Order")
    String manufacturingShopOrder();
    @DefaultMessage("Show BOM")
    String manufacturingShowBOMAssocs();
    @DefaultMessage("Start Date")
    String manufacturingStartDate();
    @DefaultMessage("Start")
    String manufacturingStartProductionRunTask();
    @DefaultMessage("Start Time")
    String manufacturingStartTime();
    @DefaultMessage("Summarized Breakdown")
    String manufacturingSummarizedPartBreakdown();
    @DefaultMessage("Actual Time")
    String manufacturingTaskActualMilliSeconds();
    @DefaultMessage("Actual Setup Time")
    String manufacturingTaskActualSetupMillis();
    @DefaultMessage("Task Components")
    String manufacturingTaskComponents();
    @DefaultMessage("Estimated Unit Run Time")
    String manufacturingTaskEstimatedMilliSeconds();
    @DefaultMessage("Estimated Setup Time")
    String manufacturingTaskEstimatedSetupMillis();
    @DefaultMessage("Estimated Total Run Time")
    String manufacturingTaskEstimatedTotalMilliSeconds();
    @DefaultMessage("Routing Task Fixed Assets")
    String manufacturingTaskFixedAssets();
    @DefaultMessage("Task ID")
    String manufacturingTaskId();
    @DefaultMessage("Routing Task Name")
    String manufacturingTaskName();
    @DefaultMessage("Task Type")
    String manufacturingTaskPurpose();
    @DefaultMessage("Task Run Time")
    String manufacturingTaskRunTime();
    @DefaultMessage("Task Setup Time")
    String manufacturingTaskSetupTime();
    @DefaultMessage("Tasks Report")
    String manufacturingTasksReport();
    @DefaultMessage("Tech. Data")
    String manufacturingTechData();
    @DefaultMessage("TechDataCalendar does not exist")
    String manufacturingTechDataCalendarNotExist();
    @DefaultMessage("TechDataCalendarWeek does not exist")
    String manufacturingTechDataCalendarWeekNotExist();
    @DefaultMessage("Time Period")
    String manufacturingTimePeriod();
    @DefaultMessage("To Date")
    String manufacturingToDate();
    @DefaultMessage("Total Quantity")
    String manufacturingTotalQuantity();
    @DefaultMessage("Two routing task with same SeqId and same period")
    String manufacturingTwoRoutingTaskWithSameSeqId();
    @DefaultMessage("Update Calendar")
    String manufacturingUpdateCalendar();
    @DefaultMessage("Update Week")
    String manufacturingUpdateCalendarWeek();
    @DefaultMessage("Update Fixed Asset Group")
    String manufacturingUpdateMachineGroup();
    @DefaultMessage("Security Error: to run this operation you must have the MANUFACTURING_UPDATE or MANUFACTURING_ADMIN permission")
    String manufacturingUpdatePermissionError();
    @DefaultMessage("You do not have permission to view this page. (\"MANUFACTURING_VIEW\" or \"MANUFACTURING_ADMIN\" needed)")
    String manufacturingViewPermissionError();
    @DefaultMessage("Tree visit Algorithm")
    String manufacturingVisitType();
    @DefaultMessage("Will be set to now if empty")
    String manufacturingWillBeSetToNow();
    @DefaultMessage("Work Center")
    String manufacturingWorkCenter();
    @DefaultMessage("WorkEffortAssoc does not exist")
    String manufacturingWorkEffortAssocNotExist();
    @DefaultMessage("The selected fixed asset is already associated with this production run task")
    String manufacturingWorkEffortFixedAssetAsgAlreadyExist();
    @DefaultMessage("The selected fixed asset type is already associated with this routing task")
    String manufacturingWorkEffortFixedAssetStdAlreadyExist();
    @DefaultMessage("WorkEffortGoodStandard table does not exist")
    String manufacturingWorkEffortGoodStandardNotExist();
    @DefaultMessage("workEffortIdFrom does not exist")
    String manufacturingWorkEffortIdFromNotExist();
    @DefaultMessage("WorkEffort does not exist")
    String manufacturingWorkEffortNotExist();
    @DefaultMessage("Shipment Plans")
    String manufacturingWorkWithShipmentPlans();
    @DefaultMessage("Worker")
    String manufacturingWorker();
    @DefaultMessage("Marketing")
    String marketing();
    @DefaultMessage("Campaign Name")
    String marketingCampaignName();
    @DefaultMessage("Conversion Rate")
    String marketingConversionRate();
    @DefaultMessage("Order Amount")
    String marketingOrderAmount();
    @DefaultMessage("Orders")
    String marketingOrders();
    @DefaultMessage("Tracking Code")
    String marketingTrackingCode();
    @DefaultMessage("Visits")
    String marketingVisits();
    @DefaultMessage("RTF Rich Text")
    String mimeType_description_application_rtf();
    @DefaultMessage("My Portal")
    String myPortal();
    @DefaultMessage("New Contact")
    String newContact();
    @DefaultMessage("Nederlands")
    String nl();
    @DefaultMessage("OFBiz Site")
    String oFBiz_Site();
    @DefaultMessage("Oagis")
    String oagis();
    @DefaultMessage("opentaps")
    String opentaps();
    @DefaultMessage("Accept")
    String opentapsAccept();
    @DefaultMessage("Account Number")
    String opentapsAccountNumber();
    @DefaultMessage("Add Existing")
    String opentapsAddExisting();
    @DefaultMessage("Add New")
    String opentapsAddNew();
    @DefaultMessage("Add New Term")
    String opentapsAddNewAgreementTerm();
    @DefaultMessage("Address")
    String opentapsAddress();
    @DefaultMessage("Address Book")
    String opentapsAddressBook();
    @DefaultMessage("Adjustment ID")
    String opentapsAdjustmentId();
    @DefaultMessage("Advanced Search")
    String opentapsAdvancedSearch();
    @DefaultMessage("Commission Agreement")
    String opentapsAgreementCommission();
    @DefaultMessage("Customer Agreement")
    String opentapsAgreementCustomer();
    @DefaultMessage("Partner Agreement")
    String opentapsAgreementPartner();
    @DefaultMessage("Partner Sales Agreement")
    String opentapsAgreementPartnerSales();
    @DefaultMessage("Purchase Agreement")
    String opentapsAgreementPurchase();
    @DefaultMessage("Party Class")
    String opentapsAgreementTermClsGroupId();
    @DefaultMessage("Currency")
    String opentapsAgreementTermCurrency();
    @DefaultMessage("Days")
    String opentapsAgreementTermDays();
    @DefaultMessage("Description")
    String opentapsAgreementTermDescription();
    @DefaultMessage("Server return empty response. Can''t display agreement terms.")
    String opentapsAgreementTermEmptyResponse();
    @DefaultMessage("Max")
    String opentapsAgreementTermMaxQty();
    @DefaultMessage("Min")
    String opentapsAgreementTermMinQty();
    @DefaultMessage("Max")
    String opentapsAgreementTermName_maxQuantity();
    @DefaultMessage("Min")
    String opentapsAgreementTermName_minQuantity();
    @DefaultMessage("Party Class")
    String opentapsAgreementTermName_partyClassificationGroupId();
    @DefaultMessage("Party")
    String opentapsAgreementTermName_partyId();
    @DefaultMessage("Category")
    String opentapsAgreementTermName_productCategoryId();
    @DefaultMessage("Product")
    String opentapsAgreementTermName_productId();
    @DefaultMessage("Type")
    String opentapsAgreementTermName_roleTypeId();
    @DefaultMessage("Days")
    String opentapsAgreementTermName_termDays();
    @DefaultMessage("Value")
    String opentapsAgreementTermName_termValue();
    @DefaultMessage("Agreement Term Not Implemented!")
    String opentapsAgreementTermNotImplemented();
    @DefaultMessage("Party")
    String opentapsAgreementTermPartyId();
    @DefaultMessage("Category")
    String opentapsAgreementTermProdCatId();
    @DefaultMessage("Product")
    String opentapsAgreementTermProductId();
    @DefaultMessage("Role")
    String opentapsAgreementTermRoleTypeId();
    @DefaultMessage("Text Value")
    String opentapsAgreementTermText();
    @DefaultMessage("Term Value")
    String opentapsAgreementTermValue();
    @DefaultMessage("All Open Orders")
    String opentapsAllOpenOrders();
    @DefaultMessage("Approve")
    String opentapsApprove();
    @DefaultMessage("Approve All")
    String opentapsApproveAll();
    @DefaultMessage("Approved Orders Only")
    String opentapsApprovedOrdersOnly();
    @DefaultMessage("Are you sure?")
    String opentapsAreYouSure();
    @DefaultMessage("Area Code")
    String opentapsAreaCode();
    @DefaultMessage("As of date")
    String opentapsAsOfDate();
    @DefaultMessage("Assign to me")
    String opentapsAssignToMe();
    @DefaultMessage("No match found")
    String opentapsAutocompletionNoMatch();
    @DefaultMessage("Begins With")
    String opentapsBeginsWith();
    @DefaultMessage("Billing Address")
    String opentapsBillingAddress();
    @DefaultMessage("Browse and Search")
    String opentapsBrowseAndSearch();
    @DefaultMessage("Cancel")
    String opentapsCancel();
    @DefaultMessage("Cancel Order")
    String opentapsCancelOrder();
    @DefaultMessage("Carrier")
    String opentapsCarrier();
    @DefaultMessage("Active Cash Drawers")
    String opentapsCashDrawerActive();
    @DefaultMessage("Cancel Close")
    String opentapsCashDrawerCancelClose();
    @DefaultMessage("Closing Comments")
    String opentapsCashDrawerCloseComments();
    @DefaultMessage("Close Drawer")
    String opentapsCashDrawerCloseDrawer();
    @DefaultMessage("Closed")
    String opentapsCashDrawerClosed();
    @DefaultMessage("Closed By")
    String opentapsCashDrawerClosedBy();
    @DefaultMessage("Current Balance")
    String opentapsCashDrawerCurrent();
    @DefaultMessage("Final")
    String opentapsCashDrawerFinal();
    @DefaultMessage("Final Cash Amount")
    String opentapsCashDrawerFinalCashAmount();
    @DefaultMessage("Find Past Cash Drawers")
    String opentapsCashDrawerFindPast();
    @DefaultMessage("Force Close")
    String opentapsCashDrawerForceClose();
    @DefaultMessage("Forced Closed?")
    String opentapsCashDrawerForcedClosed();
    @DefaultMessage("Initial")
    String opentapsCashDrawerInitial();
    @DefaultMessage("Initial Cash Amount")
    String opentapsCashDrawerInitialAmount();
    @DefaultMessage("Manage Cash Drawers")
    String opentapsCashDrawerManage();
    @DefaultMessage("Open Cash Drawer")
    String opentapsCashDrawerOpen();
    @DefaultMessage("Opening Comments")
    String opentapsCashDrawerOpenComments();
    @DefaultMessage("Opened At")
    String opentapsCashDrawerOpenTime();
    @DefaultMessage("Opened")
    String opentapsCashDrawerOpened();
    @DefaultMessage("Opened By")
    String opentapsCashDrawerOpenedBy();
    @DefaultMessage("User")
    String opentapsCashDrawerUser();
    @DefaultMessage("Variance")
    String opentapsCashDrawerVariance();
    @DefaultMessage("Change Password")
    String opentapsChangePassword();
    @DefaultMessage("Check All")
    String opentapsCheckAll();
    @DefaultMessage("&#x2713;")
    String opentapsCheckmark();
    @DefaultMessage("Choose")
    String opentapsChoose();
    @DefaultMessage("City / State / Country")
    String opentapsCityStateCountry();
    @DefaultMessage("City / State / Zip")
    String opentapsCityStateZip();
    @DefaultMessage("Clear Items")
    String opentapsClearItems();
    @DefaultMessage("Closed Cash Drawers")
    String opentapsClosedCashDrawers();
    @DefaultMessage("Company Name")
    String opentapsCompanyName();
    @DefaultMessage("Company/Personal Name")
    String opentapsCompanyOrPersonalName();
    @DefaultMessage("Complete")
    String opentapsComplete();
    @DefaultMessage("Compose Message")
    String opentapsComposeMessage();
    @DefaultMessage("Compose New")
    String opentapsComposeNew();
    @DefaultMessage("Configuration")
    String opentapsConfiguration();
    @DefaultMessage("Confirm Merge")
    String opentapsConfirmMerge();
    @DefaultMessage("A file with the same name is already associated to this order, do you want to overwrite it?")
    String opentapsConfirmOverwriteContent();
    @DefaultMessage("Confirm Password")
    String opentapsConfirmPassword();
    @DefaultMessage("Confirmed")
    String opentapsConfirmed();
    @DefaultMessage("Contains")
    String opentapsContains();
    @DefaultMessage("Classification")
    String opentapsContentClassification();
    @DefaultMessage("MS Word")
    String opentapsContentType_ApplicationMSWord();
    @DefaultMessage("PDF")
    String opentapsContentType_ApplicationPDF();
    @DefaultMessage("HTML")
    String opentapsContentType_TextHtml();
    @DefaultMessage("Text")
    String opentapsContentType_TextPlain();
    @DefaultMessage("XML")
    String opentapsContentType_TextXML();
    @DefaultMessage("Country")
    String opentapsCountry();
    @DefaultMessage("State / Country")
    String opentapsCountryState();
    @DefaultMessage("Create Address")
    String opentapsCreateAddress();
    @DefaultMessage("Create Catalog Request")
    String opentapsCreateCatalogRequest();
    @DefaultMessage("Create Email")
    String opentapsCreateEmail();
    @DefaultMessage("Create Note")
    String opentapsCreateNote();
    @DefaultMessage("Create Order")
    String opentapsCreateOrder();
    @DefaultMessage("Create Partner")
    String opentapsCreatePartner();
    @DefaultMessage("Create Partner Sales Agreement")
    String opentapsCreatePartnerSalesAgreement();
    @DefaultMessage("Create Phone Number")
    String opentapsCreatePhoneNumber();
    @DefaultMessage("Create Web Url")
    String opentapsCreateWebUrl();
    @DefaultMessage("Customer")
    String opentapsCustomer();
    @DefaultMessage("Data as of")
    String opentapsDataAsOf();
    @DefaultMessage("Date Requested")
    String opentapsDateRequested();
    @DefaultMessage("Default")
    String opentapsDefault();
    @DefaultMessage("Select action...")
    String opentapsDefaultActionPrompt();
    @DefaultMessage("...")
    String opentapsDefaultActionSeparator();
    @DefaultMessage("Difference")
    String opentapsDifference();
    @DefaultMessage("Direction")
    String opentapsDirection();
    @DefaultMessage("This customer is flagged as \"Do not Ship\"")
    String opentapsDoNotShipCustomer();
    @DefaultMessage("DO NOT SOLICIT")
    String opentapsDoNotSolicit();
    @DefaultMessage("Done")
    String opentapsDone();
    @DefaultMessage("Edit Shipping Account")
    String opentapsEditShippingAccount();
    @DefaultMessage("Edit Tax Id")
    String opentapsEditTaxId();
    @DefaultMessage("Forward")
    String opentapsEmailForward();
    @DefaultMessage("View Email")
    String opentapsEmailViewEmail();
    @DefaultMessage("Equals")
    String opentapsEquals();
    @DefaultMessage("OpentapsError_AgreementCurrencyNotSet")
    String opentapsError_AgreementCurrencyNotSet(String agreementId);
    @DefaultMessage("OpentapsError_AgreementItemNotValid")
    String opentapsError_AgreementItemNotValid(String agreementItemTypeId, String agreementId);
    @DefaultMessage("OpentapsError_AgreementItemsMaxAllow")
    String opentapsError_AgreementItemsMaxAllow(String agreementItemTypeId, String agreementId);
    @DefaultMessage("OpentapsError_AgreementNotFound")
    String opentapsError_AgreementNotFound(String agreementId);
    @DefaultMessage("OpentapsError_AgreementNotFoundForParties")
    String opentapsError_AgreementNotFoundForParties(String partnerName);
    @DefaultMessage("OpentapsError_AgreementNotFoundOrExpired")
    String opentapsError_AgreementNotFoundOrExpired(String agreementId);
    @DefaultMessage("OpentapsError_AgreementTermCurrencyMismatch")
    String opentapsError_AgreementTermCurrencyMismatch(String agreementId);
    @DefaultMessage("It''s impossible to display calendar, periods aren''t defined.")
    String opentapsError_CalendarFail();
    @DefaultMessage("OpentapsError_CannotAddItem")
    String opentapsError_CannotAddItem(String message);
    @DefaultMessage("OpentapsError_CannotPrintOrderOrganizationPartyId")
    String opentapsError_CannotPrintOrderOrganizationPartyId(String orderId);
    @DefaultMessage("OpentapsError_CarrierReturnServiceNotFound")
    String opentapsError_CarrierReturnServiceNotFound(String carrierReturnServiceId);
    @DefaultMessage("OpentapsError_CarrierShipmentMethodNotFound")
    String opentapsError_CarrierShipmentMethodNotFound(String partyId, String shipmentMethodTypeId);
    @DefaultMessage("OpentapsError_CashDrawerNotFound")
    String opentapsError_CashDrawerNotFound(String cashDrawerId);
    @DefaultMessage("OpentapsError_CashDrawerTrans_skipInvalidMethodType")
    String opentapsError_CashDrawerTrans_skipInvalidMethodType(String paymentId, String paymentMethodTypeId);
    @DefaultMessage("OpentapsError_CashDrawerTrans_skipInvalidPaymentType")
    String opentapsError_CashDrawerTrans_skipInvalidPaymentType(String paymentId, String paymentTypeId);
    @DefaultMessage("OpentapsError_CashDrawerTrans_skipMissingPaymentCurrency")
    String opentapsError_CashDrawerTrans_skipMissingPaymentCurrency(String paymentId);
    @DefaultMessage("OpentapsError_CashDrawerTrans_skipNoOpenDrawerForCurrency")
    String opentapsError_CashDrawerTrans_skipNoOpenDrawerForCurrency(String paymentId, String userLoginId, String currencyUomId);
    @DefaultMessage("OpentapsError_CashDrawerVarianceExists")
    String opentapsError_CashDrawerVarianceExists(String cashDrawerId, String cashVariance);
    @DefaultMessage("Error closing cash drawer")
    String opentapsError_CloseCashDrawerFail();
    @DefaultMessage("OpentapsError_CreateAgreementFailSinceRole")
    String opentapsError_CreateAgreementFailSinceRole(String agreementTypeId, String roleTypeId);
    @DefaultMessage("Error opening cash drawer")
    String opentapsError_CreateCashDrawerFail();
    @DefaultMessage("Error recording cash drawer transaction")
    String opentapsError_CreateCashDrawerTransFail();
    @DefaultMessage("Failed to create invoice email:")
    String opentapsError_CreateInvoiceEmailFail();
    @DefaultMessage("Error creating merge form category")
    String opentapsError_CreateMergeFormCategoryFail();
    @DefaultMessage("Error creating merge form")
    String opentapsError_CreateMergeFormFail();
    @DefaultMessage("Error creating note")
    String opentapsError_CreateNoteFail();
    @DefaultMessage("Failed to create purchase order email:")
    String opentapsError_CreatePurchasingOrderEmailFail();
    @DefaultMessage("Failed to create quote email:")
    String opentapsError_CreateQuoteEmailFail();
    @DefaultMessage("Failed to create sales order email:")
    String opentapsError_CreateSalesOrderEmailFail();
    @DefaultMessage("Error deleting merge form category")
    String opentapsError_DeleteMergeFormCategoryFail();
    @DefaultMessage("Error deleting merge form")
    String opentapsError_DeleteMergeFormFail();
    @DefaultMessage("Error deleting note")
    String opentapsError_DeleteNoteFail();
    @DefaultMessage("Error editing note")
    String opentapsError_EditNoteFail();
    @DefaultMessage("There is already an owner for this email address")
    String opentapsError_EmailOwnerExist();
    @DefaultMessage("OpentapsError_ErrorSavingFileToPath")
    String opentapsError_ErrorSavingFileToPath(String path);
    @DefaultMessage("An error occured during the form generation. Please review your form for errors.")
    String opentapsError_FormGeneration();
    @DefaultMessage("Unable to generate Form from XSL-FO")
    String opentapsError_FormGenerationBadXslFo();
    @DefaultMessage("Unable to generate. Invalid Form.")
    String opentapsError_FormGenerationInvalidForm();
    @DefaultMessage("OpentapsError_FormGenerationNoContext")
    String opentapsError_FormGenerationNoContext(String serviceName);
    @DefaultMessage("Unable to write to browser OutputStream")
    String opentapsError_FormGenerationStreamError();
    @DefaultMessage("OpentapsError_FreemarkerUtilImportError")
    String opentapsError_FreemarkerUtilImportError(String location);
    @DefaultMessage("OpentapsError_FreemarkerUtilParseError")
    String opentapsError_FreemarkerUtilParseError(String location);
    @DefaultMessage("OpentapsError_FreemarkerUtilReadError")
    String opentapsError_FreemarkerUtilReadError(String location);
    @DefaultMessage("OpentapsError_GoodIdentificationDupe")
    String opentapsError_GoodIdentificationDupe(String idValue);
    @DefaultMessage("OpentapsError_IgnoringInternalOrg")
    String opentapsError_IgnoringInternalOrg(String partyId);
    @DefaultMessage("There was an internal error while processing your request.  Please contact a System Administrator for assistance.")
    String opentapsError_Internal();
    @DefaultMessage("Message body is required.")
    String opentapsError_InternalMessageBodyRequired();
    @DefaultMessage("OpentapsError_InternalMessageNoRecipientPermission")
    String opentapsError_InternalMessageNoRecipientPermission(String partyId);
    @DefaultMessage("Failed to receive requested messages")
    String opentapsError_InternalMessageNoRecipients();
    @DefaultMessage("OpentapsError_InternalMessageNoSenderPermission")
    String opentapsError_InternalMessageNoSenderPermission(String partyIdFrom);
    @DefaultMessage("OpentapsError_InventoryItemNotFound")
    String opentapsError_InventoryItemNotFound(String inventoryItemId);
    @DefaultMessage("OpentapsError_InventoryItemValueHistory_UnitCostNotChanged")
    String opentapsError_InventoryItemValueHistory_UnitCostNotChanged(String inventoryItemId);
    @DefaultMessage("OpentapsError_InventoryItemValueHistory_UnitCostZero")
    String opentapsError_InventoryItemValueHistory_UnitCostZero(String inventoryItemId);
    @DefaultMessage("This invoice cannot be printed")
    String opentapsError_InvoiceCannotPrint();
    @DefaultMessage("OpentapsError_InvoiceCurrencyNotSet")
    String opentapsError_InvoiceCurrencyNotSet(String invoiceId);
    @DefaultMessage("OpentapsError_InvoiceNotFound")
    String opentapsError_InvoiceNotFound(String invoiceId);
    @DefaultMessage("Failed to merge parties:")
    String opentapsError_MergePartiesFail();
    @DefaultMessage("Cannot create order, a payment method must be supplied.")
    String opentapsError_MissingOrderPaymentMethod();
    @DefaultMessage("<div class=\"errortooltip\">Unable to fetch data because session has expired.  Please reload this page.</div>")
    String opentapsError_MissingPaginator();
    @DefaultMessage("No items to process.")
    String opentapsError_NoItemsToProcess();
    @DefaultMessage("No prepared statement has been configured for Query")
    String opentapsError_NoPreparedStatement();
    @DefaultMessage("OpentapsError_NoSupplierRole")
    String opentapsError_NoSupplierRole(String partyId);
    @DefaultMessage("OpentapsError_NoSuppliersForProductAndQty")
    String opentapsError_NoSuppliersForProductAndQty(String quantity, String productId);
    @DefaultMessage("OpentapsError_OrderNotApproved")
    String opentapsError_OrderNotApproved(String orderId);
    @DefaultMessage("OpentapsError_OrderNotApprovedLong")
    String opentapsError_OrderNotApprovedLong(String orderId, String statusDescription);
    @DefaultMessage("OpentapsError_OrderNotFound")
    String opentapsError_OrderNotFound(String orderId);
    @DefaultMessage("OpentapsError_OrderNotPurchaseOrder")
    String opentapsError_OrderNotPurchaseOrder(String orderId);
    @DefaultMessage("OpentapsError_OrderNotSalesOrder")
    String opentapsError_OrderNotSalesOrder(String orderId);
    @DefaultMessage("No Organization was selected.")
    String opentapsError_OrganizationNotSet();
    @DefaultMessage("Origin phone number is required for UPS return service shipments")
    String opentapsError_OriginPhoneNumberRequiredForUPSReturnShipments();
    @DefaultMessage("Origin postal address is required for UPS return service shipments")
    String opentapsError_OriginPostalAddressRequiredForUPSReturnShipments();
    @DefaultMessage("OpentapsError_PartyAlreadyAssigned")
    String opentapsError_PartyAlreadyAssigned(String partyId);
    @DefaultMessage("OpentapsError_PartyCarrierAccountNotFound")
    String opentapsError_PartyCarrierAccountNotFound(String partyId, String carrierPartyId);
    @DefaultMessage("OpentapsError_PartyDeactivated")
    String opentapsError_PartyDeactivated(String partyId);
    @DefaultMessage("OpentapsError_PartyNotFound")
    String opentapsError_PartyNotFound(String partyId);
    @DefaultMessage("This payment cannot be printed")
    String opentapsError_PaymentCannotPrint();
    @DefaultMessage("OpentapsError_PaymentMethodNotFound")
    String opentapsError_PaymentMethodNotFound(String paymentMethodId);
    @DefaultMessage("OpentapsError_PaymentNotFound")
    String opentapsError_PaymentNotFound(String paymentId);
    @DefaultMessage("OpentapsError_PerformedItemsToInvoiceNotFound")
    String opentapsError_PerformedItemsToInvoiceNotFound(String orderId);
    @DefaultMessage("Sorry, you do not have permission to perform this action.")
    String opentapsError_PermissionDenied();
    @DefaultMessage("OpentapsError_ProductCannotBeMarkPerformed")
    String opentapsError_ProductCannotBeMarkPerformed(String productId);
    @DefaultMessage("OpentapsError_ProductNotFound")
    String opentapsError_ProductNotFound(String productId);
    @DefaultMessage("OpentapsError_ProductPriceNotFound")
    String opentapsError_ProductPriceNotFound(String productId, String currencyUomId);
    @DefaultMessage("OpentapsError_ProductStoreHaveNoCatalogs")
    String opentapsError_ProductStoreHaveNoCatalogs(String productStoreId);
    @DefaultMessage("OpentapsError_ProductStoreNotFound")
    String opentapsError_ProductStoreNotFound(String productStoreId);
    @DefaultMessage("OpentapsError_ProductUpcCodeNotUnique")
    String opentapsError_ProductUpcCodeNotUnique(String goodIdentificationTypeId, String idValue, String productId);
    @DefaultMessage("OpentapsError_ProductUpcCodeNotValid")
    String opentapsError_ProductUpcCodeNotValid(String idValue);
    @DefaultMessage("OpentapsError_PropertyNotConfigured")
    String opentapsError_PropertyNotConfigured(String propertyName, String resource);
    @DefaultMessage("OpentapsError_QuoteNotFound")
    String opentapsError_QuoteNotFound(String quoteId);
    @DefaultMessage("Error receiving offline payment")
    String opentapsError_ReceiveOfflinePayment();
    @DefaultMessage("OpentapsError_ReportDesignError")
    String opentapsError_ReportDesignError(String message);
    @DefaultMessage("OpentapsError_ReportNotFound")
    String opentapsError_ReportNotFound(String location);
    @DefaultMessage("Requested quantity of product is greater than was reserved. Service doesn''t support this operation.")
    String opentapsError_ReservedMoreThanRequested();
    @DefaultMessage("OpentapsError_ReturnNotFound")
    String opentapsError_ReturnNotFound(String returnId);
    @DefaultMessage("Security Error : to run copyOrganizationLedgerSetup service you must have the ORG_CONFIG permission")
    String opentapsError_SecurityErrorToRunCopyOrganizationLedgerSetup();
    @DefaultMessage("OpentapsError_ServiceErrorRequiredTagNotFound")
    String opentapsError_ServiceErrorRequiredTagNotFound(String tagName);
    @DefaultMessage("OpentapsError_ShipGroupNotFound")
    String opentapsError_ShipGroupNotFound(String shipGroupSeqId, String orderId);
    @DefaultMessage("OpentapsError_ShipmentNotFound")
    String opentapsError_ShipmentNotFound(String shipmentId);
    @DefaultMessage("No known recepient for this shipment.  Please edit it manually and set the Party Id To field to the correct customer partyId")
    String opentapsError_ShipmentRecepientNotFound();
    @DefaultMessage("OpentapsError_ShipmentRouteSegmentNotFound")
    String opentapsError_ShipmentRouteSegmentNotFound(String shipmentRouteSegmentId, String shipmentId);
    @DefaultMessage("OpentapsError_ShippingMethodInvalid")
    String opentapsError_ShippingMethodInvalid(String shipmentMethodTypeId, String productStoreId);
    @DefaultMessage("You must choose a valid shipping method and shipping address.")
    String opentapsError_ShippingMethodOrAddressMissing();
    @DefaultMessage("The Thru Date must be after the From Date")
    String opentapsError_ThruDateAfterFromDate();
    @DefaultMessage("OpentapsError_UnablePrintService")
    String opentapsError_UnablePrintService(String printerName);
    @DefaultMessage("Error updating merge form category")
    String opentapsError_UpdateMergeFormCategoryFail();
    @DefaultMessage("Error updating merge form")
    String opentapsError_UpdateMergeFormFail();
    @DefaultMessage("OpentapsError_UserLoginNotFound")
    String opentapsError_UserLoginNotFound(String userLoginId);
    @DefaultMessage("OpentapsError_ViewPrefNotFound")
    String opentapsError_ViewPrefNotFound(String viewPrefTypeId, String userLoginId);
    @DefaultMessage("Weight and weight units are required for all UPS shipments")
    String opentapsError_WeightRequiredForUPSShipments();
    @DefaultMessage("Estimate")
    String opentapsEstimate();
    @DefaultMessage("Export to Excel")
    String opentapsExportToExcel();
    @DefaultMessage("OpentapsFieldError_BadDateFormat")
    String opentapsFieldError_BadDateFormat(String format);
    @DefaultMessage("This field must be a number.")
    String opentapsFieldError_BadDoubleFormat();
    @DefaultMessage("This field is required.")
    String opentapsFieldError_Required();
    @DefaultMessage("Finalize Order")
    String opentapsFinalizeOrder();
    @DefaultMessage("Find a Person")
    String opentapsFindAPerson();
    @DefaultMessage("Find By")
    String opentapsFindBy();
    @DefaultMessage("Find Message")
    String opentapsFindMessage();
    @DefaultMessage("Find Order")
    String opentapsFindOrder();
    @DefaultMessage("Find Orders")
    String opentapsFindOrders();
    @DefaultMessage("Find Partners")
    String opentapsFindPartners();
    @DefaultMessage("Find a Party by Name")
    String opentapsFindPartyByName();
    @DefaultMessage("Find Product Category")
    String opentapsFindProductCategory();
    @DefaultMessage("Find Purchase Order")
    String opentapsFindPurch();
    @DefaultMessage("Find Sales Order")
    String opentapsFindSalesOrder();
    @DefaultMessage("Find Suppliers")
    String opentapsFindSuppliers();
    @DefaultMessage("Force Complete")
    String opentapsForceComplete();
    @DefaultMessage("Force Create")
    String opentapsForceCreate();
    @DefaultMessage("Force Issue")
    String opentapsForceIssue();
    @DefaultMessage("Force Update")
    String opentapsForceUpdate();
    @DefaultMessage("Form")
    String opentapsForm();
    @DefaultMessage("Form Name")
    String opentapsFormName();
    @DefaultMessage("Form Text")
    String opentapsFormText();
    @DefaultMessage("Forward")
    String opentapsForward();
    @DefaultMessage("Free Shipping")
    String opentapsFreeShipping();
    @DefaultMessage("From Party")
    String opentapsFromParty();
    @DefaultMessage("Full View")
    String opentapsFullView();
    @DefaultMessage("Generate Form")
    String opentapsGenerateForm();
    @DefaultMessage("Generate Letter")
    String opentapsGenerateFormLetter();
    @DefaultMessage("Get help from an opentaps Partner")
    String opentapsGetHelpFromAnOpentapsPartner();
    @DefaultMessage("Go Back")
    String opentapsGoBack();
    @DefaultMessage("Grid View")
    String opentapsGridView();
    @DefaultMessage("Gross Value")
    String opentapsGrossValue();
    @DefaultMessage("Gross value does not include tax, shipping, promotions or other adjustments.")
    String opentapsGrossValueDisclaimer();
    @DefaultMessage("Help")
    String opentapsHelp();
    @DefaultMessage("Shortcuts")
    String opentapsHelpShortcuts();
    @DefaultMessage("Hide Full Text")
    String opentapsHideTextData();
    @DefaultMessage("Insert Tags")
    String opentapsHtmlEditorInsertTagsLabel();
    @DefaultMessage("Ignore Case")
    String opentapsIgnoreCase();
    @DefaultMessage("OpentapsInfo_UpdatePartySupplimentalData")
    String opentapsInfo_UpdatePartySupplimentalData(String partyId);
    @DefaultMessage("Instructions")
    String opentapsInstructions();
    @DefaultMessage("OpentapsInvoiceEmailSubject")
    String opentapsInvoiceEmailSubject(String invoiceId);
    @DefaultMessage("Is Empty")
    String opentapsIsEmpty();
    @DefaultMessage("Incorporated?")
    String opentapsIsIncorporated();
    @DefaultMessage("Item ID")
    String opentapsItemID();
    @DefaultMessage("Keyboard Shortcuts")
    String opentapsKeyboardShortcuts();
    @DefaultMessage("Global")
    String opentapsKeyboardShortcutsGlobal();
    @DefaultMessage("Specific to this application")
    String opentapsKeyboardShortcutsSpecificToApp();
    @DefaultMessage("Specific to this page")
    String opentapsKeyboardShortcutsSpecificToPage();
    @DefaultMessage("OpentapsLastUpdatedAt")
    String opentapsLastUpdatedAt(String lastUpdatedStamp);
    @DefaultMessage("Latest News")
    String opentapsLatestNews();
    @DefaultMessage("Live help for this page on opentaps Wiki")
    String opentapsLiveHelp();
    @DefaultMessage("opentaps Login")
    String opentapsLoginGreeting();
    @DefaultMessage("Is Default?")
    String opentapsMakeDefault();
    @DefaultMessage("Map It")
    String opentapsMapIt();
    @DefaultMessage("Merge")
    String opentapsMerge();
    @DefaultMessage("Warning! You are merging the following two parties. Please confirm that this is correct. After the merge, the From party will be deleted.")
    String opentapsMergePartiesConfirmMessage();
    @DefaultMessage("Mini-Catalog")
    String opentapsMiniCatalog();
    @DefaultMessage("Move")
    String opentapsMove();
    @DefaultMessage("Move To")
    String opentapsMoveTo();
    @DefaultMessage("My Home")
    String opentapsMyHome();
    @DefaultMessage("My Messages")
    String opentapsMyMessages();
    @DefaultMessage("N/A")
    String opentapsNA();
    @DefaultMessage("Name")
    String opentapsName();
    @DefaultMessage("OpentapsNavHistoryAgreement")
    String opentapsNavHistoryAgreement(String agreementTypeName, String agreementId, String partyNameTo);
    @DefaultMessage("Last Viewed")
    String opentapsNavHistoryTitle();
    @DefaultMessage("…")
    String opentapsNavHistoryTruncMark();
    @DefaultMessage("Needed")
    String opentapsNeeded();
    @DefaultMessage("new messages")
    String opentapsNewMessages();
    @DefaultMessage("You have")
    String opentapsNewMessagesPrefix();
    @DefaultMessage("New Team Member")
    String opentapsNewTeamMember();
    @DefaultMessage("Customer and sales analysis reports have to be used in conjunction with opentaps Analytics. Ensure analytics is installed and data loaded.")
    String opentapsNoAnalyticsCaution();
    @DefaultMessage("You have no new messages.")
    String opentapsNoNewMessages();
    @DefaultMessage("<No subject>")
    String opentapsNoSubjectSubjectMessage();
    @DefaultMessage("Full text is not available.")
    String opentapsNoTextData();
    @DefaultMessage("Not Available")
    String opentapsNotAvailable();
    @DefaultMessage("Notes")
    String opentapsNotes();
    @DefaultMessage("This order has nothing to invoice.")
    String opentapsNothingToInvoice();
    @DefaultMessage("This order has nothing to mark as performed.")
    String opentapsNothingToMarkAsPerformed();
    @DefaultMessage("of")
    String opentapsOf();
    @DefaultMessage("Ok")
    String opentapsOk();
    @DefaultMessage("Use only for this order")
    String opentapsOnlyThisOrder();
    @DefaultMessage("Open")
    String opentapsOpen();
    @DefaultMessage("Open Amount")
    String opentapsOpenAmount();
    @DefaultMessage("Option")
    String opentapsOption();
    @DefaultMessage("OpentapsOrderAddedItem")
    String opentapsOrderAddedItem(String quantity, String productId, String shipGroupSeqId);
    @DefaultMessage("Order adjustments were not changed because some adjustments have already been invoiced.")
    String opentapsOrderAdustementsNotChangedForAlreadyInvoiced();
    @DefaultMessage("Edit or Add Items")
    String opentapsOrderEditAddItem();
    @DefaultMessage("Edit Order")
    String opentapsOrderEditOrder();
    @DefaultMessage("Order Name")
    String opentapsOrderName();
    @DefaultMessage("Order Name and ID")
    String opentapsOrderNameID();
    @DefaultMessage("Net")
    String opentapsOrderNetOrdered();
    @DefaultMessage("Recalculate Order")
    String opentapsOrderRecalcOrder();
    @DefaultMessage("Return to Order")
    String opentapsOrderReturnToOrder();
    @DefaultMessage("Order Settings")
    String opentapsOrderSettings();
    @DefaultMessage("Please Wait")
    String opentapsOrderSubmittingLabel();
    @DefaultMessage("Orders")
    String opentapsOrders();
    @DefaultMessage("Output")
    String opentapsOutput();
    @DefaultMessage("Owner")
    String opentapsOwner();
    @DefaultMessage("PO #")
    String opentapsPONumber();
    @DefaultMessage("Page")
    String opentapsPage();
    @DefaultMessage("Excel")
    String opentapsPaginationExportExcelButtonLabel();
    @DefaultMessage("OpentapsPaginationWithTotal")
    String opentapsPaginationWithTotal(String beginIndex, String endIndex, String totalResultSize);
    @DefaultMessage("OpentapsPaginationWithoutTotal")
    String opentapsPaginationWithoutTotal(String beginIndex, String endIndex);
    @DefaultMessage("OpentapsPaidPercentageDescr")
    String opentapsPaidPercentageDescr(String paidPercents);
    @DefaultMessage("Partner")
    String opentapsPartner();
    @DefaultMessage("Partner ID")
    String opentapsPartnerId();
    @DefaultMessage("Partner Invoice")
    String opentapsPartnerInvoice();
    @DefaultMessage("Partner Name")
    String opentapsPartnerName();
    @DefaultMessage("Partners")
    String opentapsPartners();
    @DefaultMessage("PayPal Account")
    String opentapsPayPalAccount();
    @DefaultMessage("Payment ID")
    String opentapsPaymentId();
    @DefaultMessage("Check/Ref Num")
    String opentapsPaymentRefNum();
    @DefaultMessage("Payments Received")
    String opentapsPaymentsReceived();
    @DefaultMessage("Person to Ask For")
    String opentapsPhoneAskForName();
    @DefaultMessage("Phone Number")
    String opentapsPhoneNumber();
    @DefaultMessage("Phone Numbers")
    String opentapsPhoneNumbers();
    @DefaultMessage("Postal Code")
    String opentapsPostalCode();
    @DefaultMessage("OpentapsProductIsDiscontinued")
    String opentapsProductIsDiscontinued(String productName, String productId);
    @DefaultMessage("OpentapsProductIsNotIntroduced")
    String opentapsProductIsNotIntroduced(String productName, String productId);
    @DefaultMessage("Opentaps Open Source ERP + CRM")
    String opentapsProductName();
    @DefaultMessage("Promised By")
    String opentapsPromisedDate();
    @DefaultMessage("OpentapsPurchaseOrderEmailSubject")
    String opentapsPurchaseOrderEmailSubject(String orderId);
    @DefaultMessage("Purchase Orders")
    String opentapsPurchaseOrders();
    @DefaultMessage("Purchased From")
    String opentapsPurchasedFrom();
    @DefaultMessage("QOH")
    String opentapsQOH();
    @DefaultMessage("Qty Back Ordered")
    String opentapsQtyBackOrdered();
    @DefaultMessage("Qty Ordered")
    String opentapsQtyOrdered();
    @DefaultMessage("Qty to Invoice")
    String opentapsQtyToInvoice();
    @DefaultMessage("Qty to Purchase")
    String opentapsQtyToPurchase();
    @DefaultMessage("Qty to Receive")
    String opentapsQtyToReceive();
    @DefaultMessage("Quick Create")
    String opentapsQuickCreate();
    @DefaultMessage("OpentapsQuoteEmailSubject")
    String opentapsQuoteEmailSubject(String quoteId);
    @DefaultMessage("Quote Type")
    String opentapsQuoteType();
    @DefaultMessage("Rate Not Available")
    String opentapsRateNotAvailable();
    @DefaultMessage("Re-reserve")
    String opentapsReReserve();
    @DefaultMessage("Re-reserve product")
    String opentapsReReserveProduct();
    @DefaultMessage("Read all")
    String opentapsReadMore();
    @DefaultMessage("Received")
    String opentapsReceived();
    @DefaultMessage("Reference")
    String opentapsReference();
    @DefaultMessage("Region")
    String opentapsRegion();
    @DefaultMessage("1.5.0")
    String opentapsReleaseVersion();
    @DefaultMessage("Reply")
    String opentapsReply();
    @DefaultMessage("Report")
    String opentapsReport();
    @DefaultMessage("The data source have no records to fill out the report. Please check if the report parameters are correct.")
    String opentapsReportDatasourceEmpty();
    @DefaultMessage("Report Format")
    String opentapsReportFormat();
    @DefaultMessage("Available reports")
    String opentapsReportList();
    @DefaultMessage("Comma-separated values (*.csv)")
    String opentapsReportOptionCsv();
    @DefaultMessage("HTML (*.html)")
    String opentapsReportOptionHtml();
    @DefaultMessage("Portable Document (*.pdf)")
    String opentapsReportOptionPdf();
    @DefaultMessage("On Screen")
    String opentapsReportOptionScreen();
    @DefaultMessage("Excel Spreadsheet (*.xls)")
    String opentapsReportOptionXls();
    @DefaultMessage("Upload new report")
    String opentapsReportUpload();
    @DefaultMessage("Reports")
    String opentapsReports();
    @DefaultMessage("Requires 1099?")
    String opentapsRequires1099();
    @DefaultMessage("Reserved On")
    String opentapsReservationSequence();
    @DefaultMessage("Resume Order")
    String opentapsResumeOrder();
    @DefaultMessage("Run Report")
    String opentapsRunReport();
    @DefaultMessage("Run Report as:")
    String opentapsRunReportIn();
    @DefaultMessage("OpentapsSalesOrderEmailSubject")
    String opentapsSalesOrderEmailSubject(String orderId);
    @DefaultMessage("Select Organization")
    String opentapsSelectOrganization();
    @DefaultMessage("Select Printer")
    String opentapsSelectPrinter();
    @DefaultMessage("Send message")
    String opentapsSendMessage();
    @DefaultMessage("Ship After")
    String opentapsShipAfter();
    @DefaultMessage("Ship Before")
    String opentapsShipBefore();
    @DefaultMessage("OpentapsShipGroupNotFound")
    String opentapsShipGroupNotFound(String shipGroupSeqId, String orderId);
    @DefaultMessage("Ship Via")
    String opentapsShipVia();
    @DefaultMessage("Shipping Address")
    String opentapsShippingAddress();
    @DefaultMessage("Same as Billing")
    String opentapsShippingSameAsBilling();
    @DefaultMessage("Shortcuts")
    String opentapsShortcuts();
    @DefaultMessage("Show/Hide Details")
    String opentapsShowHideDetails();
    @DefaultMessage("Show read?")
    String opentapsShowRead();
    @DefaultMessage("Subject")
    String opentapsSubject();
    @DefaultMessage("Supplier Name")
    String opentapsSupplierName();
    @DefaultMessage("Tax Id")
    String opentapsTaxAuthPartyId();
    @DefaultMessage("Tax IDs")
    String opentapsTaxIds();
    @DefaultMessage("Team Member")
    String opentapsTeamMember();
    @DefaultMessage("Team Members")
    String opentapsTeamMembers();
    @DefaultMessage("Template")
    String opentapsTemplate();
    @DefaultMessage("Template Name")
    String opentapsTemplateName();
    @DefaultMessage("Term of Item")
    String opentapsTermOfItem();
    @DefaultMessage("Full Text")
    String opentapsTextData();
    @DefaultMessage("Full Text Not Available")
    String opentapsTextDataNotAvailable();
    @DefaultMessage("To learn more about opentaps, follow us on")
    String opentapsToLearnMoreAboutOpentapsFollowUsOn();
    @DefaultMessage("Top Level Only")
    String opentapsTopLevelOnly();
    @DefaultMessage("Tracking Codes")
    String opentapsTrackingCodes();
    @DefaultMessage("Tracking Number")
    String opentapsTrackingNumber();
    @DefaultMessage("UPC")
    String opentapsUPC();
    @DefaultMessage("Unassign")
    String opentapsUnassign();
    @DefaultMessage("Uncheck All")
    String opentapsUncheckAll();
    @DefaultMessage("Unknown")
    String opentapsUnknown();
    @DefaultMessage("Unset")
    String opentapsUnset();
    @DefaultMessage("Edit Profile")
    String opentapsUpdateProfile();
    @DefaultMessage("Uploading... Please Wait")
    String opentapsUploadingPleaseWait();
    @DefaultMessage("User")
    String opentapsUser();
    @DefaultMessage("My Language")
    String opentapsUserLocale();
    @DefaultMessage("View All")
    String opentapsViewAll();
    @DefaultMessage("View Message")
    String opentapsViewMessage();
    @DefaultMessage("Partner Details")
    String opentapsViewPartner();
    @DefaultMessage("View Purchase Order")
    String opentapsViewPurchaseOrder();
    @DefaultMessage("View Full Text")
    String opentapsViewTextData();
    @DefaultMessage("Warehouse")
    String opentapsWarehouse();
    @DefaultMessage("Web URL")
    String opentapsWebUrl();
    @DefaultMessage("Order")
    String order();
    @DefaultMessage("A Product Store MUST be selected for a Sales Order.")
    String orderAProductStoreMustBeSelectedForASalesOrder();
    @DefaultMessage("Actions")
    String orderActions();
    @DefaultMessage("Add All to Cart")
    String orderAddAllToCart();
    @DefaultMessage("Add Checked to Cart")
    String orderAddCheckedToCart();
    @DefaultMessage("Add Code")
    String orderAddCode();
    @DefaultMessage("Add Gift Certificate")
    String orderAddGiftCertificate();
    @DefaultMessage("Add Note")
    String orderAddNote();
    @DefaultMessage("Add Order Items to Shopping List")
    String orderAddOrderToShoppingList();
    @DefaultMessage("to Order")
    String orderAddQntToOrder();
    @DefaultMessage("Add to Cart")
    String orderAddToCart();
    @DefaultMessage("Add To Order")
    String orderAddToOrder();
    @DefaultMessage("Add to Shopping List")
    String orderAddToShoppingList();
    @DefaultMessage("Added item to order:")
    String orderAddedItemToOrder();
    @DefaultMessage("Address")
    String orderAddress();
    @DefaultMessage("Address Verification (AVS)")
    String orderAddressVerification();
    @DefaultMessage("Adjustment")
    String orderAdjustment();
    @DefaultMessage("Adjustment Type")
    String orderAdjustmentType();
    @DefaultMessage("Adjustments")
    String orderAdjustments();
    @DefaultMessage("Affiliate")
    String orderAffiliate();
    @DefaultMessage("Order Agent")
    String orderAgent();
    @DefaultMessage("(allow solicitation?)")
    String orderAllowSolicitation();
    @DefaultMessage("Allow Split")
    String orderAllowSplit();
    @DefaultMessage("Always List")
    String orderAlwaysList();
    @DefaultMessage("Amount")
    String orderAmount();
    @DefaultMessage("Amount Already Credited")
    String orderAmountAlreadyCredited();
    @DefaultMessage("Amount Already Refunded")
    String orderAmountAlreadyRefunded();
    @DefaultMessage("OrderAnAlternateGwpProductIdWasInPlaceButWasEitherNotValidOrIsNoLongerInStockForId")
    String orderAnAlternateGwpProductIdWasInPlaceButWasEitherNotValidOrIsNoLongerInStockForId(String alternateGwpProductId);
    @DefaultMessage("OrderAnUnSupportedProductPromoCondCondition")
    String orderAnUnSupportedProductPromoCondCondition(String operatorEnumId);
    @DefaultMessage("OrderAnUnSupportedProductPromoCondInputParameterLhs")
    String orderAnUnSupportedProductPromoCondInputParameterLhs(String inputParamEnumId);
    @DefaultMessage("An unit price can''t be lesser than zero")
    String orderAnUnitPriceCantBeLesserThanZero();
    @DefaultMessage("Anonymous")
    String orderAnonymous();
    @DefaultMessage("Any Order Status")
    String orderAnyOrderStatus();
    @DefaultMessage("Any Order Type")
    String orderAnyOrderType();
    @DefaultMessage("Approve Order")
    String orderApproveOrder();
    @DefaultMessage("Approve Requirements")
    String orderApproveRequirements();
    @DefaultMessage("Approved")
    String orderApproved();
    @DefaultMessage("Approved Product Requirements")
    String orderApprovedProductRequirements();
    @DefaultMessage("Associated Products")
    String orderAssociatedProducts();
    @DefaultMessage("Auth Service")
    String orderAuthService();
    @DefaultMessage("Auto Assign")
    String orderAutoAssign();
    @DefaultMessage("Auto Create Adjustments")
    String orderAutoCreateQuoteAdjustments();
    @DefaultMessage("Average Rating")
    String orderAverageRating();
    @DefaultMessage("AVS")
    String orderAvs();
    @DefaultMessage("Backordered")
    String orderBackOrdered();
    @DefaultMessage("Backorders")
    String orderBackOrders();
    @DefaultMessage("Back to order")
    String orderBackToOrder();
    @DefaultMessage("Back to Shopping Cart")
    String orderBacktoShoppingCart();
    @DefaultMessage("Be sure to include your order")
    String orderBeSureIncludeOrder();
    @DefaultMessage("Bill Up To")
    String orderBillUpTo();
    @DefaultMessage("Billing Address")
    String orderBillingAddress();
    @DefaultMessage("Box Number")
    String orderBoxNumber();
    @DefaultMessage("COD")
    String orderCOD();
    @DefaultMessage("Calculated Markup")
    String orderCalculatedMarkup();
    @DefaultMessage("Calculated Offline")
    String orderCalculatedOffline();
    @DefaultMessage("Click here For Calendar")
    String orderCalendarClickHereForCalendar();
    @DefaultMessage("Cancel all Items")
    String orderCancelAllItems();
    @DefaultMessage("Cancel Order")
    String orderCancelOrder();
    @DefaultMessage("Cancel Remaining PO Items")
    String orderCancelRemainingPOItems();
    @DefaultMessage("Cancel Selected Items")
    String orderCancelSelectedItems();
    @DefaultMessage("Cancelled")
    String orderCancelled();
    @DefaultMessage("Cancelled item to order:")
    String orderCancelledItemToOrder();
    @DefaultMessage("My Cancelled Customer Requests")
    String orderCancelledMyCustomerRequests();
    @DefaultMessage("(cannot be changed without clearing order.)")
    String orderCannotBeChanged();
    @DefaultMessage("You cannot cancel this customer request, work has already started on it.")
    String orderCannotCancelRequestAlreadyWorkedOn();
    @DefaultMessage("OrderCannotChangeQuantityInPromotion")
    String orderCannotChangeQuantityInPromotion(String productName, String productId);
    @DefaultMessage("Cannot get order header :")
    String orderCannotGetOrderHeader();
    @DefaultMessage("Cannot read the order item entity")
    String orderCannotReadTheOrderItemEntity();
    @DefaultMessage("Cannot remove items once return is approved")
    String orderCannotRemoveItemsOnceReturnIsApproved();
    @DefaultMessage("Cannot update; No available group(s) to change")
    String orderCannotUpdateNoAvailableGroupsToChange();
    @DefaultMessage("OrderCannotUpdateNullOrderHeader")
    String orderCannotUpdateNullOrderHeader(String orderId);
    @DefaultMessage("Cannot update; Problem getting OrderShipmentPreference")
    String orderCannotUpdateProblemGettingOrderShipmentPreference();
    @DefaultMessage("Cannot update; Problem setting OrderShipmentPreference")
    String orderCannotUpdateProblemSettingOrderShipmentPreference();
    @DefaultMessage("Service capture")
    String orderCaptureService();
    @DefaultMessage("Card Security Code")
    String orderCardSecurityCode();
    @DefaultMessage("Cart Item Use in Promotions")
    String orderCartItemUseinPromotions();
    @DefaultMessage("OrderCartShipGroupNotFound")
    String orderCartShipGroupNotFound(String groupIndex);
    @DefaultMessage("Cart Summary")
    String orderCartSummary();
    @DefaultMessage("Cart Total")
    String orderCartTotal();
    @DefaultMessage("Cartons")
    String orderCartons();
    @DefaultMessage("Caught exception on cart update.")
    String orderCaughtExceptionOnCartUpdate();
    @DefaultMessage("Caught generic service exception while getting order Id")
    String orderCaughtGenericServiceExceptionWhileGettingOrderId();
    @DefaultMessage("Caught number format exception on cart update.")
    String orderCaughtNumberFormatExceptionOnCartUpdate();
    @DefaultMessage("Caught parse exception on cart update.")
    String orderCaughtParseExceptionOnCartUpdate();
    @DefaultMessage("OrderCheckCustRequest")
    String orderCheckCustRequest(String custRequest_statusId);
    @DefaultMessage("OrderCheckCustRequestDraftStatusForDelete")
    String orderCheckCustRequestDraftStatusForDelete(String custRequest_statusId);
    @DefaultMessage("Check out")
    String orderCheckout();
    @DefaultMessage("Quick Checkout")
    String orderCheckoutQuick();
    @DefaultMessage("Choose Amount")
    String orderChooseAmount();
    @DefaultMessage("Choose Another Gift")
    String orderChooseAnotherGift();
    @DefaultMessage("You may choose a facility instead of the default one")
    String orderChooseFacilityDifferentDefault();
    @DefaultMessage("You may also choose one of the following for your gift")
    String orderChooseFollowingForGift();
    @DefaultMessage("Choose Variations")
    String orderChooseVariations();
    @DefaultMessage("Clear Order")
    String orderClearOrder();
    @DefaultMessage("Clear Search History")
    String orderClearSearchHistory();
    @DefaultMessage("Clear Search History Note")
    String orderClearSearchHistoryNote();
    @DefaultMessage("You may add other comma separated email addresses here that will be used only for the current order")
    String orderCommaSeperatedEmailAddresses();
    @DefaultMessage("OFBiz: Order Manager")
    String orderCompanyName();
    @DefaultMessage("Part of the Open For Business Family of Open Source Software")
    String orderCompanySubtitle();
    @DefaultMessage("Complete Order")
    String orderCompleteOrder();
    @DefaultMessage("Completed")
    String orderCompleted();
    @DefaultMessage("My Completed customer requests")
    String orderCompletedMyCustomerRequests();
    @DefaultMessage("Configure")
    String orderConfigure();
    @DefaultMessage("Contact Information")
    String orderContactInformation();
    @DefaultMessage("Contains BackOrders")
    String orderContainsBackOrders();
    @DefaultMessage("Content")
    String orderContent();
    @DefaultMessage("Continue to Final Order Review")
    String orderContinueToFinalOrderReview();
    @DefaultMessage("Duplicate Request Item")
    String orderCopyCustRequestItem();
    @DefaultMessage("Duplicate Quote")
    String orderCopyQuote();
    @DefaultMessage("OrderCouldNotFindOrderHeaderForOrderIdInGetProductStoreFromOrderReturningNull")
    String orderCouldNotFindOrderHeaderForOrderIdInGetProductStoreFromOrderReturningNull(String orderId);
    @DefaultMessage("OrderCouldNotFindRelatedFixedAssetForTheProduct")
    String orderCouldNotFindRelatedFixedAssetForTheProduct(String productId);
    @DefaultMessage("OrderCouldNotGetAgreement")
    String orderCouldNotGetAgreement(String agreementId);
    @DefaultMessage("OrderCouldNotGetAgreementItemsThrough")
    String orderCouldNotGetAgreementItemsThrough(String agreementId);
    @DefaultMessage("OrderCouldNotGetAgreementTermsThrough")
    String orderCouldNotGetAgreementTermsThrough(String agreementId);
    @DefaultMessage("Could not init an empty purchase order.")
    String orderCouldNotInitPurchaseOrder();
    @DefaultMessage("Could not locate the selected party.")
    String orderCouldNotLocateTheSelectedParty();
    @DefaultMessage("Could not select alternate gift, alternateGwpLine is not a valid number.")
    String orderCouldNotSelectAlternateGiftAlternateGwpLineIsNotAValidNumber();
    @DefaultMessage("Could not select alternate gift, no alternateGwpLine passed.")
    String orderCouldNotSelectAlternateGiftNoAlternateGwpLinePassed();
    @DefaultMessage("Could not select alternate gift, no alternateGwpProductId passed.")
    String orderCouldNotSelectAlternateGiftNoAlternateGwpProductIdPassed();
    @DefaultMessage("OrderCouldNotSelectAlternateGiftNoCartLineItemFoundFor")
    String orderCouldNotSelectAlternateGiftNoCartLineItemFoundFor(String alternateGwpLine);
    @DefaultMessage("Create As New Order")
    String orderCreateAsNewOrder();
    @DefaultMessage("Create Communication Event Product Permission Error")
    String orderCreateCommunicationEventProductPermissionError();
    @DefaultMessage("Create a Request For Quote")
    String orderCreateCustRequestFromCart();
    @DefaultMessage("Create a Request For Quote")
    String orderCreateCustRequestFromShoppingList();
    @DefaultMessage("Create Exchange Order")
    String orderCreateExchangeOrder();
    @DefaultMessage("Create new return")
    String orderCreateNewReturn();
    @DefaultMessage("Create Order")
    String orderCreateOrder();
    @DefaultMessage("Create New Quote")
    String orderCreateOrderQuote();
    @DefaultMessage("Create Manual Adjustment")
    String orderCreateOrderQuoteAdjustment();
    @DefaultMessage("Create New Quote Attribute")
    String orderCreateOrderQuoteAttribute();
    @DefaultMessage("Create New Quote Coefficient")
    String orderCreateOrderQuoteCoefficient();
    @DefaultMessage("Create New Quote Item")
    String orderCreateOrderQuoteItem();
    @DefaultMessage("Create New Quote Role")
    String orderCreateOrderQuoteRole();
    @DefaultMessage("Create Quote Work Efforts")
    String orderCreateOrderQuoteWorkEfforts();
    @DefaultMessage("Create New Quote From Cart")
    String orderCreateQuoteFromCart();
    @DefaultMessage("Create Quote from request")
    String orderCreateQuoteFromRequest();
    @DefaultMessage("Create New Quote")
    String orderCreateQuoteFromShoppingList();
    @DefaultMessage("Create new Quote Workeffort")
    String orderCreateQuoteWorkEffort();
    @DefaultMessage("Create Replacement Order")
    String orderCreateReplacementOrder();
    @DefaultMessage("Create Return")
    String orderCreateReturn();
    @DefaultMessage("OrderCreateReturnAdjustment")
    String orderCreateReturnAdjustment(String seqId);
    @DefaultMessage("Failed to store returnAdjustment")
    String orderCreateReturnAdjustmentFailed();
    @DefaultMessage("OrderCreateReturnAdjustmentNotFoundOrderAdjustment")
    String orderCreateReturnAdjustmentNotFoundOrderAdjustment(String orderAdjustmentId);
    @DefaultMessage("Create return shipment")
    String orderCreateReturnShipment();
    @DefaultMessage("Create New Shipping Address")
    String orderCreateShippingAddress();
    @DefaultMessage("Cubic Measurement")
    String orderCubicMeasurement();
    @DefaultMessage("Current Status")
    String orderCurrentStatus();
    @DefaultMessage("Customer Request Completed Notification Mai")
    String orderCustRequestNotificationMailCompleted();
    @DefaultMessage("Customer Request Creation Notification Mail")
    String orderCustRequestNotificationMailCreation();
    @DefaultMessage("Customer Request Note added Notification")
    String orderCustRequestNotificationMailNoteAdded();
    @DefaultMessage("Customer Request should have a ''Name'' if not in the draft status")
    String orderCustRequestShouldHaveCustRequestNameIfNotDraft();
    @DefaultMessage("Customer Request should have a ''from'' partyId if not in the draft status")
    String orderCustRequestShouldHaveFromPartyIdIfNotDraft();
    @DefaultMessage("Customer Request Status List")
    String orderCustRequestStatusList();
    @DefaultMessage("Customer")
    String orderCustomer();
    @DefaultMessage("Customer PO#")
    String orderCustomerPo();
    @DefaultMessage("Customer Reviews")
    String orderCustomerReviews();
    @DefaultMessage("Customer Tax ID")
    String orderCustomerTaxId();
    @DefaultMessage("Order Date")
    String orderDate();
    @DefaultMessage("Date Ordered")
    String orderDateOrdered();
    @DefaultMessage("Delivery Schedule Info")
    String orderDeliveryScheduleInfo();
    @DefaultMessage("NOTE: This is a DEMO store-front.  Orders placed here will NOT be billed, and will NOT be fulfilled")
    String orderDemoFrontNote();
    @DefaultMessage("Desired Delivery Date")
    String orderDesiredDeliveryDate();
    @DefaultMessage("Destination")
    String orderDestination();
    @DefaultMessage("Digital Product Files")
    String orderDigitalProductFiles();
    @DefaultMessage("Dispatcher or Delegator or Cart argument is null")
    String orderDispatcherOrDelegatorOrCartArgumentIsNull();
    @DefaultMessage("Distributor")
    String orderDistributor();
    @DefaultMessage("OrderDoNotHaveEnoughProducts")
    String orderDoNotHaveEnoughProducts(String requestedQuantity, String productName, String productId);
    @DefaultMessage("Do Not Include")
    String orderDoNotInclude();
    @DefaultMessage("Run Promotions")
    String orderDoPromotions();
    @DefaultMessage("does not appear to be a valid promotional gift.")
    String orderDoesNotAppearToBeAValidPromotionalGift();
    @DefaultMessage("Download Files Title")
    String orderDownloadFilesTitle();
    @DefaultMessage("Drop Shipped")
    String orderDropShipped();
    @DefaultMessage("Ecommerce")
    String orderEcommerce();
    @DefaultMessage("Edit Items")
    String orderEditItems();
    @DefaultMessage("Edit Requirement")
    String orderEditRequirement();
    @DefaultMessage("Edit Shipment Info")
    String orderEditShipmentInfo();
    @DefaultMessage("has been accepted. Your order will be processed, and you will receive an email notification once the item(s) have shipped.Thank you for your order!")
    String orderEmailAccepted();
    @DefaultMessage("Customer Service")
    String orderEmailCustomerService();
    @DefaultMessage("Email Fulfillment type not yet implemented")
    String orderEmailFulfillmentTypeNotYetImplemented();
    @DefaultMessage("This email is to inform you that your payment for order #")
    String orderEmailPaymentOK();
    @DefaultMessage("At this time your order has been cancelled and will not be processed. Please contact customer service if you have any questions.")
    String orderEmailProblemCancelledNotProcessed();
    @DefaultMessage("This email is to inform you there was a problem with your payment method for order #")
    String orderEmailProblemWithYourPaymentMethod();
    @DefaultMessage("Your order will be sent to the following email addresses")
    String orderEmailSentToFollowingAddresses();
    @DefaultMessage("Sorry, there was a problem with this email, please contact customer service for information regarding your order #")
    String orderEmailSorry();
    @DefaultMessage("Entered Codes")
    String orderEnteredPromoCodes();
    @DefaultMessage("Entity Exception See Logs")
    String orderEntityExceptionSeeLogs();
    @DefaultMessage("Entry Date")
    String orderEntryDate();
    @DefaultMessage("ERROR :")
    String orderError();
    @DefaultMessage("OrderErrorAllItemsOfOrderAreAlreadyVerified")
    String orderErrorAllItemsOfOrderAreAlreadyVerified(String orderId);
    @DefaultMessage("OrderErrorAttemptToVerifyOrderFailed")
    String orderErrorAttemptToVerifyOrderFailed(String orderId);
    @DefaultMessage("Error calling countProductQuantityOrdered service :")
    String orderErrorCallingCountProductQuantityOrderedService();
    @DefaultMessage("Error calling createOrderAdjustment service")
    String orderErrorCallingCreateOrderAdjustmentService();
    @DefaultMessage("OrderErrorCannotCancelItemItemNotFound")
    String orderErrorCannotCancelItemItemNotFound(String itemMsgInfo);
    @DefaultMessage("ERROR : Cannot change item status; item not found.")
    String orderErrorCannotChangeItemStatusItemNotFound();
    @DefaultMessage("ERROR : Cannot check for fulfillment; item not found.")
    String orderErrorCannotCheckForFulfillmentItemNotFound();
    @DefaultMessage("ERROR: Cannot check for fulfillment; product not found.")
    String orderErrorCannotCheckForFulfillmentProductNotFound();
    @DefaultMessage("ERROR : Cannot create adjustment")
    String orderErrorCannotCreateAdjustment();
    @DefaultMessage("ERROR : Cannot get OrderHeader entity :")
    String orderErrorCannotGetOrderHeaderEntity();
    @DefaultMessage("OrderErrorCannotGetOrderItemAssocEntity")
    String orderErrorCannotGetOrderItemAssocEntity(String itemMsgInfo);
    @DefaultMessage("ERROR: Cannot get OrderItem entity :")
    String orderErrorCannotGetOrderItemEntity();
    @DefaultMessage("OrderErrorCannotGetOrderRoleEntity")
    String orderErrorCannotGetOrderRoleEntity(String itemMsgInfo);
    @DefaultMessage("ERROR : Cannot get Product entity :")
    String orderErrorCannotGetProductEntity();
    @DefaultMessage("Error:  Cannot  Have  Uom  Without  Default  Uom")
    String orderErrorCannotHaveUomWithoutDefaultUom();
    @DefaultMessage("OrderErrorCannotResetOrderTotals")
    String orderErrorCannotResetOrderTotals(String orderId, String resetResult);
    @DefaultMessage("ERROR : Cannot store status changes :")
    String orderErrorCannotStoreStatusChanges();
    @DefaultMessage("ERROR: Could not change item status :")
    String orderErrorCouldNotChangeItemStatus();
    @DefaultMessage("ERROR : Could not change order status (")
    String orderErrorCouldNotChangeOrderStatus();
    @DefaultMessage("ERROR : Could not change order status; order cannot be found.")
    String orderErrorCouldNotChangeOrderStatusOrderCannotBeFound();
    @DefaultMessage("ERROR : Could not change order status; status is not a valid change.")
    String orderErrorCouldNotChangeOrderStatusStatusIsNotAValidChange();
    @DefaultMessage("ERROR : Could not create OrderPaymentPreference (id generation failure)")
    String orderErrorCouldNotCreateOrderPaymentPreferenceIdGenerationFailure();
    @DefaultMessage("ERROR : Could not create order (write error :")
    String orderErrorCouldNotCreateOrderWriteError();
    @DefaultMessage("Error  Could  Not  Find  Conversion")
    String orderErrorCouldNotFindConversion();
    @DefaultMessage("OrderErrorCouldNotFindProductStoreWithID")
    String orderErrorCouldNotFindProductStoreWithID(String productStoreId);
    @DefaultMessage("ERROR : Could not get next sequence id for OrderAdjustment, cannot create order.")
    String orderErrorCouldNotGetNextSequenceIdForOrderAdjustmentCannotCreateOrder();
    @DefaultMessage("ERROR : Could not get next sequence id for OrderItemPriceInfo, cannot create order.")
    String orderErrorCouldNotGetNextSequenceIdForOrderItemPriceInfoCannotCreateOrder();
    @DefaultMessage("ERROR : Could not get order information (")
    String orderErrorCouldNotGetOrderInformation();
    @DefaultMessage("OrderErrorCustRequestWithIdDoesntExist")
    String orderErrorCustRequestWithIdDoesntExist(String custRequestId);
    @DefaultMessage("Error : the facility does not have addresses")
    String orderErrorFacilityHaveNoAdress();
    @DefaultMessage("Error getting next order Id while creating order")
    String orderErrorGettingNextOrderIdWhileCreatingOrder();
    @DefaultMessage("Error getting order header information; null")
    String orderErrorGettingOrderHeaderInformationNull();
    @DefaultMessage("Error getting ReturnHeader/Item information")
    String orderErrorGettingReturnHeaderItemInformation();
    @DefaultMessage("OrderErrorInvalidOrderTypeWithID")
    String orderErrorInvalidOrderTypeWithID(String orderTypeId);
    @DefaultMessage("ERROR : No order items found.")
    String orderErrorNoOrderItemsFound();
    @DefaultMessage("ERROR: No promotion found with ID")
    String orderErrorNoPromotionFoundWithID();
    @DefaultMessage("OrderErrorNoValidOrderHeaderFoundForOrderId")
    String orderErrorNoValidOrderHeaderFoundForOrderId(String orderId);
    @DefaultMessage("OrderErrorOrderHasBeenAlreadyVerified")
    String orderErrorOrderHasBeenAlreadyVerified(String orderId);
    @DefaultMessage("OrderErrorOrderIdNotFound")
    String orderErrorOrderIdNotFound(String orderId);
    @DefaultMessage("ERROR : OrderItem and/or OrderHeader don''t exist")
    String orderErrorOrderItemAndOrOrderHeaderDontExist();
    @DefaultMessage("ERROR : OrderItem can''t be modified")
    String orderErrorOrderItemCantBeModified();
    @DefaultMessage("OrderErrorOrderItemNotFound")
    String orderErrorOrderItemNotFound(String orderId, String orderItemSeqId);
    @DefaultMessage("OrderErrorOrderNotApprovedForPacking")
    String orderErrorOrderNotApprovedForPacking(String orderId);
    @DefaultMessage("OrderErrorOrderNotApprovedForPicking")
    String orderErrorOrderNotApprovedForPicking(String orderId);
    @DefaultMessage("OrderErrorOrderNotPurchaseOrder")
    String orderErrorOrderNotPurchaseOrder(String orderId);
    @DefaultMessage("OrderErrorOrderNotVerified")
    String orderErrorOrderNotVerified(String orderId);
    @DefaultMessage("OrderErrorOrderNotVerifiedForPacking")
    String orderErrorOrderNotVerifiedForPacking(String orderId);
    @DefaultMessage("ERROR : OrderType lookup failed :")
    String orderErrorOrderTypeLookupFailed();
    @DefaultMessage("Error processing offline payments.")
    String orderErrorProcessingOfflinePayments();
    @DefaultMessage("OrderErrorReturnHeaderItemStatusNotChangedIsNotAValidChange")
    String orderErrorReturnHeaderItemStatusNotChangedIsNotAValidChange(String statusId, String statusIdTo);
    @DefaultMessage("Error : Select  Customer")
    String orderErrorSelectCustomer();
    @DefaultMessage("ERROR: Shopping cart empty, please start over")
    String orderErrorShoppingCartEmpty();
    @DefaultMessage("ERROR: The productStoreId can only be null for purchase orders")
    String orderErrorTheProductStoreIdCanOnlyBeNullForPurchaseOrders();
    @DefaultMessage("ERROR : Unable to create ReturnStatus history")
    String orderErrorUnableToCreateReturnStatusHistory();
    @DefaultMessage("ERROR : Unable to find order header.")
    String orderErrorUnableToFindOrderHeader();
    @DefaultMessage("ERROR : Unable to get order adjustments from item")
    String orderErrorUnableToGetOrderAdjustmentsFromItem();
    @DefaultMessage("OrderErrorUnableToGetOrderHeaderForOrderId")
    String orderErrorUnableToGetOrderHeaderForOrderId(String orderId);
    @DefaultMessage("ERROR : Unable to get OrderHeader from ReturnItem")
    String orderErrorUnableToGetOrderHeaderFromReturnItem();
    @DefaultMessage("ERROR : Unable to get order information.")
    String orderErrorUnableToGetOrderInformation();
    @DefaultMessage("ERROR : Unable to get order item information.")
    String orderErrorUnableToGetOrderItemInformation();
    @DefaultMessage("OrderErrorUnableToGetOrderItemListForOrderId")
    String orderErrorUnableToGetOrderItemListForOrderId(String orderId);
    @DefaultMessage("OrderErrorUnableToGetReturnHeaderForID")
    String orderErrorUnableToGetReturnHeaderForID(String returnId);
    @DefaultMessage("ERROR : Unable to get return header from item")
    String orderErrorUnableToGetReturnHeaderFromItem();
    @DefaultMessage("ERROR : Unable to get return item information")
    String orderErrorUnableToGetReturnItemInformation();
    @DefaultMessage("ERROR : Unable to get ReturnItem records from ReturnHeader")
    String orderErrorUnableToGetReturnItemRecordsFromReturnHeader();
    @DefaultMessage("ERROR : Unable to get the item returnable product.")
    String orderErrorUnableToGetTheItemReturnableProduct();
    @DefaultMessage("ERROR : Unable to get the item returnable quantity.")
    String orderErrorUnableToGetTheItemReturnableQuantity();
    @DefaultMessage("Error with createBillingAccount :")
    String orderErrorWithCreateBillingAccount();
    @DefaultMessage("Error with createBillingAccountRole :")
    String orderErrorWithCreateBillingAccountRole();
    @DefaultMessage("Error writing record(s) to the database")
    String orderErrorWritingRecordsToTheDatabase();
    @DefaultMessage("Estimated Ready Date")
    String orderEstimatedReadyDate();
    @DefaultMessage("Estimated Ship Date")
    String orderEstimatedShipDate();
    @DefaultMessage("Exclude Categories")
    String orderExcludeCategories();
    @DefaultMessage("Exempt Amount")
    String orderExemptAmount();
    @DefaultMessage("External ID")
    String orderExternalId();
    @DefaultMessage("Failed")
    String orderFailed();
    @DefaultMessage("Failed to invoke the wfAcceptRoleAssignment service.")
    String orderFailedToInvokeTheWfAcceptRoleAssignmentService();
    @DefaultMessage("Failed to invoke the wfDelegateAndAcceptAssignment service.")
    String orderFailedToInvokeTheWfDelegateAndAcceptAssignmentService();
    @DefaultMessage("Authorisation Problems")
    String orderFilterAuthProblems();
    @DefaultMessage("Inventory problems")
    String orderFilterInventoryProblems();
    @DefaultMessage("Filter on")
    String orderFilterOn();
    @DefaultMessage("Filter On Inventory Problems")
    String orderFilterOnInventoryProblems();
    @DefaultMessage("purchase orders")
    String orderFilterPOs();
    @DefaultMessage("open past their ETA")
    String orderFilterPOsOpenPastTheirETA();
    @DefaultMessage("with rejected items")
    String orderFilterPOsWithRejectedItems();
    @DefaultMessage("partially received")
    String orderFilterPartiallyReceivedPOs();
    @DefaultMessage("Final Checkout Review")
    String orderFinalCheckoutReview();
    @DefaultMessage("Finalize Order")
    String orderFinalizeOrder();
    @DefaultMessage("Finalize Order With Default Options")
    String orderFinalizeOrderDefault();
    @DefaultMessage("Find Orders")
    String orderFindOrder();
    @DefaultMessage("Find Quote")
    String orderFindQuote();
    @DefaultMessage("Find Quotes")
    String orderFindQuotes();
    @DefaultMessage("Find Requests")
    String orderFindRequests();
    @DefaultMessage("Find Requirements")
    String orderFindRequirements();
    @DefaultMessage("Find Requirements For Supplier")
    String orderFindRequirementsForSupplier();
    @DefaultMessage("Find Returns")
    String orderFindReturn();
    @DefaultMessage("OrderFixedAssetNotFoundFixedAssetId")
    String orderFixedAssetNotFoundFixedAssetId(String fixedAssetId);
    @DefaultMessage("Force Complete Purchase Order")
    String orderForceCompletePurchaseOrder();
    @DefaultMessage("Frequency or interval was not specified")
    String orderFrequencyOrIntervalWasNotSpecified();
    @DefaultMessage("From Monday To Tuesday")
    String orderFromMondayToTuesday();
    @DefaultMessage("Gift")
    String orderGift();
    @DefaultMessage("Gift Card")
    String orderGiftCard();
    @DefaultMessage("Gift Message")
    String orderGiftMessage();
    @DefaultMessage("Gift Wrap All Items?")
    String orderGiftWrapAllItems();
    @DefaultMessage("Grand Total")
    String orderGrandTotal();
    @DefaultMessage("Gross Dollar Amounts (includes adjustments and pending orders)")
    String orderGrossDollarAmountsIncludesAdjustmentsAndPendingOrders();
    @DefaultMessage("Gross Items Sold (includes promotions and pending orders)")
    String orderGrossItemsSoldIncludesPromotionsAndPendingOrders();
    @DefaultMessage("You might also be interested in :")
    String orderHelpAlsoInterestedIn();
    @DefaultMessage("History not available")
    String orderHistoryNotAvailable();
    @DefaultMessage("Hold Order")
    String orderHold();
    @DefaultMessage("How shall we ship it")
    String orderHowShallWeShipIt();
    @DefaultMessage("How shall you pay")
    String orderHowShallYouPay();
    @DefaultMessage("Order Id already exists please choose another")
    String orderIdAlreadyExistsPleaseChooseAnother();
    @DefaultMessage("Illegal character in selectedItem field")
    String orderIllegalCharacterInSelectedItemField();
    @DefaultMessage("OrderIllegalReturnItemTypePassed")
    String orderIllegalReturnItemTypePassed(String orderId, String orderItemSeqId);
    @DefaultMessage("Image")
    String orderImage();
    @DefaultMessage("In Production")
    String orderInProduction();
    @DefaultMessage("In Progress")
    String orderInProgress();
    @DefaultMessage("or any sub-category")
    String orderIncludeSubCategories();
    @DefaultMessage("Includes")
    String orderIncludes();
    @DefaultMessage("Incoming customer requests")
    String orderIncomingCustRequests();
    @DefaultMessage("Information about you")
    String orderInformationAboutYou();
    @DefaultMessage("Purchase Order Quick Entry")
    String orderInputQuickPurchaseOrder();
    @DefaultMessage("Instructions")
    String orderInstructions();
    @DefaultMessage("Internal Code")
    String orderInternalCode();
    @DefaultMessage("Internal Note")
    String orderInternalNote();
    @DefaultMessage("If yes is selected, this note doesn''t appear on the print documents")
    String orderInternalNoteMessage();
    @DefaultMessage("OrderInvalidAmountSetForBillingAccount")
    String orderInvalidAmountSetForBillingAccount(String billingAccountId);
    @DefaultMessage("OrderInvalidCancelQuantityCannotCancel")
    String orderInvalidCancelQuantityCannotCancel(String thisCancelQty);
    @DefaultMessage("Invalid date format for fromDate")
    String orderInvalidDateFormatForFromDate();
    @DefaultMessage("Invalid Desired Delivery Date : Syntax Error")
    String orderInvalidDesiredDeliveryDateSyntaxError();
    @DefaultMessage("Invalid frequency for shopping list recurrence")
    String orderInvalidFrequencyForShoppingListRecurrence();
    @DefaultMessage("Invoiced")
    String orderInvoiced();
    @DefaultMessage("Invoices")
    String orderInvoices();
    @DefaultMessage("Is A Promotional Item")
    String orderIsAPromotionalItem();
    @DefaultMessage("Is Gift")
    String orderIsGift();
    @DefaultMessage("Is This a Gift?")
    String orderIsThisGift();
    @DefaultMessage("Issued to Shipment Item")
    String orderIssuedToShipmentItem();
    @DefaultMessage("Issued Without a Shipment (Immediate, Physical Store)")
    String orderIssuedWithoutShipment();
    @DefaultMessage("Item")
    String orderItem();
    @DefaultMessage("Discontinued")
    String orderItemDiscontinued();
    @DefaultMessage("Item Groups")
    String orderItemGroups();
    @DefaultMessage("Item #")
    String orderItemN();
    @DefaultMessage("Item Status")
    String orderItemStatus();
    @DefaultMessage("OrderItemStatusNotChangedIsNotAValidChange")
    String orderItemStatusNotChangedIsNotAValidChange(String orderStatusId, String statusId);
    @DefaultMessage("Item Total")
    String orderItemTotal();
    @DefaultMessage("Items")
    String orderItems();
    @DefaultMessage("Items Backordered")
    String orderItemsBackOrdered();
    @DefaultMessage("Items Ordered")
    String orderItemsOrdered();
    @DefaultMessage("Items Returned")
    String orderItemsReturned();
    @DefaultMessage("Items SubTotal")
    String orderItemsSubTotal();
    @DefaultMessage("Jurisdiction")
    String orderJurisdiction();
    @DefaultMessage("Last Ordered Date")
    String orderLastOrderedDate();
    @DefaultMessage("Last Searches")
    String orderLastSearches();
    @DefaultMessage("OrderLimitPerCustomer")
    String orderLimitPerCustomer(String limit);
    @DefaultMessage("OrderLimitPerOrder")
    String orderLimitPerOrder(String limit);
    @DefaultMessage("OrderLimitPerPromotion")
    String orderLimitPerPromotion(String limit);
    @DefaultMessage("Linked from order item")
    String orderLinkedFromOrderItem();
    @DefaultMessage("Linked to order item")
    String orderLinkedToOrderItem();
    @DefaultMessage("Linked to quote")
    String orderLinkedToQuote();
    @DefaultMessage("Linked to requirement")
    String orderLinkedToRequirement();
    @DefaultMessage("List Type")
    String orderListType();
    @DefaultMessage("Lookup Order(s)")
    String orderLookupOrder();
    @DefaultMessage("Lookup Return(s)")
    String orderLookupReturn();
    @DefaultMessage("MTD")
    String orderMTD();
    @DefaultMessage("Make Booking")
    String orderMakeBooking();
    @DefaultMessage("Order Manager")
    String orderManager();
    @DefaultMessage("Order Manager Application")
    String orderManagerApplication();
    @DefaultMessage("Manual Promotions")
    String orderManualPromotions();
    @DefaultMessage("Mark Viewed")
    String orderMarkViewed();
    @DefaultMessage("Marketing Package Composed by:")
    String orderMarketingPackageComposedBy();
    @DefaultMessage("Method")
    String orderMethod();
    @DefaultMessage("Mail Check/Money Order")
    String orderMoneyOrder();
    @DefaultMessage("More options available in drop down")
    String orderMoreOptionsAvailable();
    @DefaultMessage("OrderMoreThenOneWorkflowFoundForDefinedOrder")
    String orderMoreThenOneWorkflowFoundForDefinedOrder(String orderId);
    @DefaultMessage("Move Qty")
    String orderMoveQty();
    @DefaultMessage("NOTE: Multiple shipments exist, use Split Shipment.")
    String orderNOTEMultipleShipmentsExist();
    @DefaultMessage("#")
    String orderNbr();
    @DefaultMessage("Nbr Persons")
    String orderNbrPersons();
    @DefaultMessage("Net Amount")
    String orderNetAmount();
    @DefaultMessage("Net Price HT")
    String orderNetPriceHT();
    @DefaultMessage("New Drop Shipment For Ship Group")
    String orderNewDropShipmentForShipGroup();
    @DefaultMessage("New order")
    String orderNewOrder();
    @DefaultMessage("New quantity")
    String orderNewQuantity();
    @DefaultMessage("New quote")
    String orderNewQuote();
    @DefaultMessage("New Quote Attribute")
    String orderNewQuoteAttribute();
    @DefaultMessage("New Quote Item")
    String orderNewQuoteItem();
    @DefaultMessage("New Receipt")
    String orderNewReceipt();
    @DefaultMessage("New Request")
    String orderNewRequest();
    @DefaultMessage("New Request Item")
    String orderNewRequestItem();
    @DefaultMessage("New Requirement")
    String orderNewRequirement();
    @DefaultMessage("New Shipment")
    String orderNewShipment();
    @DefaultMessage("New Shipment For Ship Group")
    String orderNewShipmentForShipGroup();
    @DefaultMessage("New Shipping Address")
    String orderNewShippingAddress();
    @DefaultMessage("New Shopping List")
    String orderNewShoppingList();
    @DefaultMessage("No Addresses Available")
    String orderNoAddressesAvailable();
    @DefaultMessage("No Agreement Found With Id Not Doing Promotions")
    String orderNoAgreementFoundWithIdNotDoingPromotions();
    @DefaultMessage("No Agreement Item Found With Id Not Doing Promotions")
    String orderNoAgreementItemFoundForAgreementWithIdNotDoingPromotions();
    @DefaultMessage("No agreement specified")
    String orderNoAgreementSpecified();
    @DefaultMessage("No available billing account")
    String orderNoAvailableBillingAccount();
    @DefaultMessage("No available fin account")
    String orderNoAvailableFinAccount();
    @DefaultMessage("No category specified to add from.")
    String orderNoCategorySpecifiedToAddFrom();
    @DefaultMessage("No Channel")
    String orderNoChannel();
    @DefaultMessage("OrderNoComboTaxRateInField")
    String orderNoComboTaxRateInField(String fieldName, String zipCode, String city, String itemAmount);
    @DefaultMessage("No Gift Certificates Found")
    String orderNoGiftCertificatesFound();
    @DefaultMessage("No Gift Wrap")
    String orderNoGiftWrap();
    @DefaultMessage("No items found to add.")
    String orderNoItemsFoundToAdd();
    @DefaultMessage("No notes for this order")
    String orderNoNotes();
    @DefaultMessage("No Notes For This Request Item")
    String orderNoNotesForThisRequestItem();
    @DefaultMessage("No adjustments on this order.")
    String orderNoOrderAdjustments();
    @DefaultMessage("No Orders Found")
    String orderNoOrderFound();
    @DefaultMessage("No orders found for partyId")
    String orderNoOrderFoundForParty();
    @DefaultMessage("No order header, cannot create payment")
    String orderNoOrderHeaderCannotCreatePayment();
    @DefaultMessage("No order items to display.")
    String orderNoOrderItemsToDisplay();
    @DefaultMessage("No payment preferences with this order.")
    String orderNoOrderPaymentPreferences();
    @DefaultMessage("OrderNoPayToPartyIdSetOnProductStore")
    String orderNoPayToPartyIdSetOnProductStore(String productStoreId);
    @DefaultMessage("No product store, cannot create payment")
    String orderNoProductStoreCannotCreatePayment();
    @DefaultMessage("No Product Store FinAcccount Settings found")
    String orderNoProductStoreFinAccountSettingsFound();
    @DefaultMessage("No Purchase Order Specified")
    String orderNoPurchaseOrderSpecified();
    @DefaultMessage("No Purchase Payment Method Information Found.")
    String orderNoPurchasePaymentMethod();
    @DefaultMessage("No Purchased Product Information Found.")
    String orderNoPurchaseProduct();
    @DefaultMessage("No Purchase Order was specified")
    String orderNoPurchaseSpecified();
    @DefaultMessage("No Quotes Found")
    String orderNoQuoteFound();
    @DefaultMessage("No Request Found")
    String orderNoRequestFound();
    @DefaultMessage("No return found.")
    String orderNoReturnFound();
    @DefaultMessage("No return found with return ID")
    String orderNoReturnFoundWithId();
    @DefaultMessage("No item(s) in return.")
    String orderNoReturnItemsFound();
    @DefaultMessage("No return quantity available; previous returns may exist.")
    String orderNoReturnQuantityAvailablePreviousReturnsMayExist();
    @DefaultMessage("No returnable items found for order")
    String orderNoReturnableItems();
    @DefaultMessage("No Roles Associated With This Customer Request")
    String orderNoRolesAssociatedRequest();
    @DefaultMessage("No sendTo email address found")
    String orderNoSendToEmailAddressFound();
    @DefaultMessage("No ship groups defined")
    String orderNoShipGroupsDefined();
    @DefaultMessage("No shopping list available")
    String orderNoShoppingListAvailable();
    @DefaultMessage("OrderNoStoreFoundWithIdNotDoingPromotions")
    String orderNoStoreFoundWithIdNotDoingPromotions(String producStoreId);
    @DefaultMessage("No Supplier Found For This Product")
    String orderNoSupplierFoundForThisProduct();
    @DefaultMessage("OrderNoTaxEntryFoundFor")
    String orderNoTaxEntryFoundFor(String zipCode, String city, String itemAmount);
    @DefaultMessage("No userLogin found for userLoginId :")
    String orderNoUserLoginFoundForUserLoginId();
    @DefaultMessage("OrderNoWFFoundForOrderId")
    String orderNoWFFoundForOrderId(String orderId);
    @DefaultMessage("No  settings  Found")
    String orderNosettingsFound();
    @DefaultMessage("Not A Gift")
    String orderNotAGift();
    @DefaultMessage("OrderNotApplyingGwpBecauseProductIdIsOutOfStockForProductPromoAction")
    String orderNotApplyingGwpBecauseProductIdIsOutOfStockForProductPromoAction(String productId, String productPromoAction);
    @DefaultMessage("Internal Note (Not Printed)")
    String orderNotPrintableNote();
    @DefaultMessage("Not Shipped")
    String orderNotShipped();
    @DefaultMessage("Not Used For Purchase Orders")
    String orderNotUsedForPurchase();
    @DefaultMessage("Not Used For Sales Orders")
    String orderNotUsedForSales();
    @DefaultMessage("Not Yet Known")
    String orderNotYetKnown();
    @DefaultMessage("Not Yet Ordered")
    String orderNotYetOrdered();
    @DefaultMessage("Note")
    String orderNote();
    @DefaultMessage("Notes")
    String orderNotes();
    @DefaultMessage("Create New")
    String orderNotesCreateNew();
    @DefaultMessage("Notes For Request Item")
    String orderNotesForRequestItem();
    @DefaultMessage("Make Private")
    String orderNotesPrivate();
    @DefaultMessage("Make Public")
    String orderNotesPublic();
    @DefaultMessage("Nothing To DoHere")
    String orderNothingToDoHere();
    @DefaultMessage("Number of persons")
    String orderNumberOfPersons();
    @DefaultMessage("Number of persons should be ''one'' or larger")
    String orderNumberOfPersonsShouldBeOneOrLarger();
    @DefaultMessage("Of Promotion")
    String orderOfPromotion();
    @DefaultMessage("Offline: Check Money")
    String orderOfflineCheckMoney();
    @DefaultMessage("On Friday")
    String orderOnFriday();
    @DefaultMessage("On Order")
    String orderOnOrder();
    @DefaultMessage("On Sale")
    String orderOnSale();
    @DefaultMessage("OrderOnUserChangePromoCodeWasRemovedBecause")
    String orderOnUserChangePromoCodeWasRemovedBecause(String checkResult);
    @DefaultMessage("Online UPS Shipping estimates based on weight and dimensions of packages")
    String orderOnlineUPSShippingEstimates();
    @DefaultMessage("Only Include")
    String orderOnlyInclude();
    @DefaultMessage("Open Customer requests from my Colleques")
    String orderOpenCollequeCustomerRequests();
    @DefaultMessage("Other Customer Requests from the same company")
    String orderOpenCompanyCustomerRequests();
    @DefaultMessage("My Open Customer Requests")
    String orderOpenMyCustomerRequests();
    @DefaultMessage("Opportunities")
    String orderOpportunities();
    @DefaultMessage("Order options")
    String orderOptions();
    @DefaultMessage("Order")
    String orderOrder();
    @DefaultMessage("Bill From Party")
    String orderOrderBillFromParty();
    @DefaultMessage("Bill To Party")
    String orderOrderBillToParty();
    @DefaultMessage("Order Confirmation")
    String orderOrderConfirmation();
    @DefaultMessage("Order creation failed; please notify customer service.")
    String orderOrderCreationFailedPleaseNotifyCustomerService();
    @DefaultMessage("Order Date")
    String orderOrderDate();
    @DefaultMessage("Order Entry")
    String orderOrderEntry();
    @DefaultMessage("Enter Order Currency, Agreements, and Ship Dates")
    String orderOrderEntryCurrencyAgreementShipDates();
    @DefaultMessage("Order Entry Customer Info")
    String orderOrderEntryCustomerInfo();
    @DefaultMessage("Internal Organization")
    String orderOrderEntryInternalOrganization();
    @DefaultMessage("Order Entry Order Terms")
    String orderOrderEntryOrderTerms();
    @DefaultMessage("Order Entry Payment Settings")
    String orderOrderEntryPaymentSettings();
    @DefaultMessage("Order Entry Ship-To Settings")
    String orderOrderEntryShipToSettings();
    @DefaultMessage("Order for")
    String orderOrderFor();
    @DefaultMessage("Order(s) Found")
    String orderOrderFound();
    @DefaultMessage("Order Header Info")
    String orderOrderHeaderInfo();
    @DefaultMessage("Order History")
    String orderOrderHistory();
    @DefaultMessage("Order Id")
    String orderOrderId();
    @DefaultMessage("Include")
    String orderOrderInclude();
    @DefaultMessage("Item Type")
    String orderOrderItemType();
    @DefaultMessage("Order item type not exist")
    String orderOrderItemTypeNotExist();
    @DefaultMessage("Order Items")
    String orderOrderItems();
    @DefaultMessage("Order List")
    String orderOrderList();
    @DefaultMessage("Order Name")
    String orderOrderName();
    @DefaultMessage("Orders Needing Attention")
    String orderOrderNeedingAttention();
    @DefaultMessage("Order Number")
    String orderOrderNumber();
    @DefaultMessage("Order Option Settings")
    String orderOrderOptionSettings();
    @DefaultMessage("Order Purchase To Be Scheduled")
    String orderOrderPurchaseToBeScheduled();
    @DefaultMessage("Order Qty")
    String orderOrderQty();
    @DefaultMessage("Quote")
    String orderOrderQuote();
    @DefaultMessage("Quote Adjustment Id")
    String orderOrderQuoteAdjustmentId();
    @DefaultMessage("Quote Adjustment Type")
    String orderOrderQuoteAdjustmentType();
    @DefaultMessage("Quote Adjustment Type Id")
    String orderOrderQuoteAdjustmentTypeId();
    @DefaultMessage("Adjustments")
    String orderOrderQuoteAdjustments();
    @DefaultMessage("Attribute Name")
    String orderOrderQuoteAttributeName();
    @DefaultMessage("Attribute Value")
    String orderOrderQuoteAttributeValue();
    @DefaultMessage("Quote Attributes")
    String orderOrderQuoteAttributes();
    @DefaultMessage("Average Cost")
    String orderOrderQuoteAverageCost();
    @DefaultMessage("Coeff. Name")
    String orderOrderQuoteCoeffName();
    @DefaultMessage("Coeff. Value")
    String orderOrderQuoteCoeffValue();
    @DefaultMessage("Quote Coefficients")
    String orderOrderQuoteCoefficients();
    @DefaultMessage("Cost to Price")
    String orderOrderQuoteCostToPrice();
    @DefaultMessage("Default Unit Price")
    String orderOrderQuoteDefaultUnitPrice();
    @DefaultMessage("Deliverable Type Id")
    String orderOrderQuoteDeliverableTypeId();
    @DefaultMessage("Edit Quote")
    String orderOrderQuoteEdit();
    @DefaultMessage("Edit Quote Adjustments")
    String orderOrderQuoteEditAdjustments();
    @DefaultMessage("Edit Quote Attributes")
    String orderOrderQuoteEditAttributes();
    @DefaultMessage("Edit Quote Coefficients")
    String orderOrderQuoteEditCoefficients();
    @DefaultMessage("Edit Quote Items")
    String orderOrderQuoteEditItems();
    @DefaultMessage("Edit Quote Report Mail")
    String orderOrderQuoteEditReportMail();
    @DefaultMessage("Edit Quote Roles")
    String orderOrderQuoteEditRoles();
    @DefaultMessage("Edit Quote Work Efforts")
    String orderOrderQuoteEditWorkEfforts();
    @DefaultMessage("Enter existing WorkEffort Id below")
    String orderOrderQuoteEnterWorkEffortId();
    @DefaultMessage("OR add new WorkEffort data below to create new entity (leave WorkEffort Id empty)")
    String orderOrderQuoteEnterWorkEffortIdNew();
    @DefaultMessage("Estimated Delivery Date")
    String orderOrderQuoteEstimatedDeliveryDate();
    @DefaultMessage("Quote Id")
    String orderOrderQuoteId();
    @DefaultMessage("Quote Issue Date")
    String orderOrderQuoteIssueDate();
    @DefaultMessage("Quote Item")
    String orderOrderQuoteItem();
    @DefaultMessage("Quote Item Seq Id")
    String orderOrderQuoteItemSeqId();
    @DefaultMessage("Quote Items")
    String orderOrderQuoteItems();
    @DefaultMessage("List Quote Adjustments")
    String orderOrderQuoteListAdjustments();
    @DefaultMessage("List Quote Attributes")
    String orderOrderQuoteListAttributes();
    @DefaultMessage("List Quote Coefficients")
    String orderOrderQuoteListCoefficients();
    @DefaultMessage("List Quote Items")
    String orderOrderQuoteListItems();
    @DefaultMessage("List Quote Roles")
    String orderOrderQuoteListRoles();
    @DefaultMessage("Manual Unit Price")
    String orderOrderQuoteManualUnitPrice();
    @DefaultMessage("Quote Name")
    String orderOrderQuoteName();
    @DefaultMessage("Quote Percentage Profit")
    String orderOrderQuotePercProfit();
    @DefaultMessage("Quote Percent")
    String orderOrderQuotePercent();
    @DefaultMessage("Quote Prices")
    String orderOrderQuotePrices();
    @DefaultMessage("Quote Profit")
    String orderOrderQuoteProfit();
    @DefaultMessage("Quote Report")
    String orderOrderQuoteReport();
    @DefaultMessage("Quote Roles")
    String orderOrderQuoteRoles();
    @DefaultMessage("Quote Skill Type Id")
    String orderOrderQuoteSkillTypeId();
    @DefaultMessage("Quote Type")
    String orderOrderQuoteType();
    @DefaultMessage("Quote Type Id")
    String orderOrderQuoteTypeId();
    @DefaultMessage("Quote Unit Price")
    String orderOrderQuoteUnitPrice();
    @DefaultMessage("Quote Uom Id")
    String orderOrderQuoteUomId();
    @DefaultMessage("View Quote Profit")
    String orderOrderQuoteViewProfit();
    @DefaultMessage("View Request")
    String orderOrderQuoteViewRequest();
    @DefaultMessage("Quote Work Effort Id")
    String orderOrderQuoteWorkEffortId();
    @DefaultMessage("Quote Work Efforts")
    String orderOrderQuoteWorkEfforts();
    @DefaultMessage("Quotes")
    String orderOrderQuotes();
    @DefaultMessage("Order Received On")
    String orderOrderReceivedOn();
    @DefaultMessage("Return")
    String orderOrderReturn();
    @DefaultMessage("Returns")
    String orderOrderReturns();
    @DefaultMessage("Shortcuts")
    String orderOrderShortcuts();
    @DefaultMessage("Order Statistics Page")
    String orderOrderStatisticsPage();
    @DefaultMessage("Order Tasks")
    String orderOrderTasks();
    @DefaultMessage("Term Days")
    String orderOrderTermDays();
    @DefaultMessage("OrderOrderTermDaysError")
    String orderOrderTermDaysError(String orderTermDays);
    @DefaultMessage("Order Term Days is required for this term type.")
    String orderOrderTermDaysIsRequired();
    @DefaultMessage("Term Type")
    String orderOrderTermType();
    @DefaultMessage("Order Term Type is required.")
    String orderOrderTermTypeIsRequired();
    @DefaultMessage("Term Value")
    String orderOrderTermValue();
    @DefaultMessage("OrderOrderTermValueError")
    String orderOrderTermValueError(String orderTermValue);
    @DefaultMessage("Order Terms")
    String orderOrderTerms();
    @DefaultMessage("Order Total")
    String orderOrderTotal();
    @DefaultMessage("Order Type")
    String orderOrderType();
    @DefaultMessage("Order type not exist")
    String orderOrderTypeNotExist();
    @DefaultMessage("Ordered")
    String orderOrdered();
    @DefaultMessage("Orders")
    String orderOrders();
    @DefaultMessage("Orders Item Counts")
    String orderOrdersItemCounts();
    @DefaultMessage("Orders Pending")
    String orderOrdersPending();
    @DefaultMessage("Orders Totals")
    String orderOrdersTotals();
    @DefaultMessage("Origin Facility")
    String orderOriginFacility();
    @DefaultMessage("Other Orders")
    String orderOtherOrders();
    @DefaultMessage("Outstanding")
    String orderOutstanding();
    @DefaultMessage("Override Price")
    String orderOverridePrice();
    @DefaultMessage("Overview")
    String orderOverview();
    @DefaultMessage("PO Number")
    String orderPONumber();
    @DefaultMessage("Pack Shipment For Ship Group")
    String orderPackShipmentForShipGroup();
    @DefaultMessage("Paid Dollar Amounts (includes adjustments)")
    String orderPaidDollarAmountsIncludesAdjustments();
    @DefaultMessage("Paid Items Sold (includes promotions)")
    String orderPaidItemsSoldIncludesPromotions();
    @DefaultMessage("I do not wish to add additional parties.")
    String orderPartyDontWish();
    @DefaultMessage("partyId and/or roleTypeId not defined.")
    String orderPartyIdAndOrRoleTypeIdNotDefined();
    @DefaultMessage("Name Not Found")
    String orderPartyNameNotFound();
    @DefaultMessage("Select Role For Party")
    String orderPartySelectRoleForParty();
    @DefaultMessage("Pay By")
    String orderPayBy();
    @DefaultMessage("Pay Method Type")
    String orderPayMethodType();
    @DefaultMessage("Payment Add New Setting")
    String orderPaymentAddNewSetting();
    @DefaultMessage("Payment Config")
    String orderPaymentConfig();
    @DefaultMessage("Max Amount")
    String orderPaymentMaximumAmount();
    @DefaultMessage("Offline Payment: Check/Money Order")
    String orderPaymentOfflineCheckMoney();
    @DefaultMessage("Processor Auth Service")
    String orderPaymentProcessorAuthService();
    @DefaultMessage("Processor Capture Service")
    String orderPaymentProcessorCaptureService();
    @DefaultMessage("Processor Properties URL")
    String orderPaymentProcessorPropertiesURL();
    @DefaultMessage("Processor Re Auth Service")
    String orderPaymentProcessorReAuthService();
    @DefaultMessage("Processor Refund Service")
    String orderPaymentProcessorRefundService();
    @DefaultMessage("Processor Setup")
    String orderPaymentProcessorSetup();
    @DefaultMessage("Payment Setup")
    String orderPaymentSetup();
    @DefaultMessage("Payment Type")
    String orderPaymentType();
    @DefaultMessage("Payment Update Setting")
    String orderPaymentUpdateSetting();
    @DefaultMessage("Pending Payment Dollar Amounts (includes adjustments)")
    String orderPendingPaymentDollarAmountsIncludesAdjustments();
    @DefaultMessage("Pending Payment Items Sold (includes promotions)")
    String orderPendingPaymentItemsSoldIncludesPromotions();
    @DefaultMessage("Percentage Markup")
    String orderPercentageMarkup();
    @DefaultMessage("Pick Orders")
    String orderPickOrders();
    @DefaultMessage("Picked By")
    String orderPickedBy();
    @DefaultMessage("Pieces")
    String orderPieces();
    @DefaultMessage("Received quantity")
    String orderPlannedInReceive();
    @DefaultMessage("Planned in Shipment")
    String orderPlannedInShipment();
    @DefaultMessage("Rejected quantity")
    String orderPlannedRejected();
    @DefaultMessage("Please contact customer service; payment return code unknown.")
    String orderPleaseContactCustomerServicePaymentReturnCodeUnknown();
    @DefaultMessage("Please select either sale or purchase order.")
    String orderPleaseSelectEitherSaleOrPurchaseOrder();
    @DefaultMessage("Please ship items I ordered as they become available (you may incur additional shipping charges)")
    String orderPleaseShipItemsBecomeAvailable();
    @DefaultMessage("Please wait until the entire order is ready before shipping")
    String orderPleaseWaitUntilBeforeShipping();
    @DefaultMessage("PO Number")
    String orderPoNumber();
    @DefaultMessage("Prepare Order")
    String orderPrepareOrder();
    @DefaultMessage("Price")
    String orderPrice();
    @DefaultMessage("Public Note (Printed)")
    String orderPrintableNote();
    @DefaultMessage("Problem creating FinAccountRole record")
    String orderProblemCreatingFinAccountRoleRecord();
    @DefaultMessage("Problem creating FinAccountTrans record")
    String orderProblemCreatingFinAccountTransRecord();
    @DefaultMessage("Problem creating PaymentApplication record")
    String orderProblemCreatingPaymentApplicationRecord();
    @DefaultMessage("Problem creating Payment record")
    String orderProblemCreatingPaymentRecord();
    @DefaultMessage("Problem creating ReturnItemResponse record")
    String orderProblemCreatingReturnItemResponseRecord();
    @DefaultMessage("Problem creating the note, no noteId returned.")
    String orderProblemCreatingTheNoteNoNoteIdReturned();
    @DefaultMessage("OrderProblemGettingItemDesiredDeliveryDateFor")
    String orderProblemGettingItemDesiredDeliveryDateFor(String productId);
    @DefaultMessage("OrderProblemGettingItemShipAfterDateFor")
    String orderProblemGettingItemShipAfterDateFor(String productId);
    @DefaultMessage("OrderProblemGettingItemShipBeforeDateFor")
    String orderProblemGettingItemShipBeforeDateFor(String productId);
    @DefaultMessage("Problem getting OrderItem records")
    String orderProblemGettingOrderItemRecords();
    @DefaultMessage("Problem getting ProductStore records")
    String orderProblemGettingProductStoreRecords();
    @DefaultMessage("Problem getting the Record Iterator")
    String orderProblemGettingTheRecordIterator();
    @DefaultMessage("Problem occurred in tax service")
    String orderProblemOccurredInTaxService();
    @DefaultMessage("Problem sending email")
    String orderProblemSendingEmail();
    @DefaultMessage("Problem storing received payment information.")
    String orderProblemStoringReceivedPaymentInformation();
    @DefaultMessage("Problem storing ReturnItem updates")
    String orderProblemStoringReturnItemUpdates();
    @DefaultMessage("Problem updating ReturnItem (returnItemResponseId)")
    String orderProblemUpdatingReturnItemReturnItemResponseId();
    @DefaultMessage("Problem with entity lookup")
    String orderProblemWithEntityLookup();
    @DefaultMessage("Problem with entity lookup, see error log")
    String orderProblemWithEntityLookupSeeErrorLog();
    @DefaultMessage("Problem with invoice creation; digital items not fulfilled.")
    String orderProblemWithInvoiceCreationDigitalItemsNotFulfilled();
    @DefaultMessage("Problem with invoice creation service items")
    String orderProblemWithInvoiceCreationServiceItems();
    @DefaultMessage("Problems adding item from list to cart")
    String orderProblemsAddingItemFromListToCart();
    @DefaultMessage("Problems creating billing account")
    String orderProblemsCreatingBillingAccount();
    @DefaultMessage("Problems creating FinAccount for Store")
    String orderProblemsCreatingFinAccountForStore();
    @DefaultMessage("Problems creating ReturnItemResponse entity")
    String orderProblemsCreatingReturnItemResponseEntity();
    @DefaultMessage("Problems getting contact mech from order contact mech")
    String orderProblemsGettingContactMechFromOrderContactMech();
    @DefaultMessage("Problems getting order contact mechs")
    String orderProblemsGettingOrderContactMechs();
    @DefaultMessage("OrderProblemsGettingOrderItemTypeFor")
    String orderProblemsGettingOrderItemTypeFor(String orderItemTypeId);
    @DefaultMessage("Problems getting Party record")
    String orderProblemsGettingPartyRecord();
    @DefaultMessage("Problems getting the cart item by index")
    String orderProblemsGettingTheCartItemByIndex();
    @DefaultMessage("Problems invoking the complete assignment service")
    String orderProblemsInvokingTheCompleteAssignmentService();
    @DefaultMessage("Problems payment parsing amount.")
    String orderProblemsPaymentParsingAmount();
    @DefaultMessage("Problems reading order header information.")
    String orderProblemsReadingOrderHeaderInformation();
    @DefaultMessage("Problems storing order email contact information")
    String orderProblemsStoringOrderEmailContactInformation();
    @DefaultMessage("Problems with check payment amount for refund")
    String orderProblemsWithCheckPaymentAmountForRefund();
    @DefaultMessage("Problems with getting PartyAcctgPreference.")
    String orderProblemsWithGetPartyAcctgPreferences();
    @DefaultMessage("Problems with getting return amount by order")
    String orderProblemsWithGetReturnAmountByOrder();
    @DefaultMessage("Problems with PaymentType lookup.")
    String orderProblemsWithPaymentTypeLookup();
    @DefaultMessage("Problems with the refund; see logs")
    String orderProblemsWithTheRefundSeeLogs();
    @DefaultMessage("Process Order")
    String orderProcessOrder();
    @DefaultMessage("This order is currently in a ''Active'' state.")
    String orderProcessingInActive();
    @DefaultMessage("This order is currently in a ''Hold'' state. The activity has been suspended.")
    String orderProcessingInHold();
    @DefaultMessage("** Note: If this state is a result of an automated activity, releasing may not have an effect until all conditions are met.")
    String orderProcessingInHoldNote();
    @DefaultMessage("Processing Status")
    String orderProcessingStatus();
    @DefaultMessage("Processing Transitions")
    String orderProcessingTransitions();
    @DefaultMessage("Product")
    String orderProduct();
    @DefaultMessage("Product not exist")
    String orderProductNotExist();
    @DefaultMessage("Product not found !")
    String orderProductNotFound();
    @DefaultMessage("Product Store")
    String orderProductStore();
    @DefaultMessage("Product store not exist")
    String orderProductStoreNotExist();
    @DefaultMessage("Products For Promotion")
    String orderProductsForPromotion();
    @DefaultMessage("Promotion")
    String orderPromotion();
    @DefaultMessage("Promotion Categories")
    String orderPromotionCategories();
    @DefaultMessage("Promotion/Coupon Codes")
    String orderPromotionCouponCodes();
    @DefaultMessage("Promotion Details")
    String orderPromotionDetails();
    @DefaultMessage("Promotion Information")
    String orderPromotionInformation();
    @DefaultMessage("Promotion Products In Categories")
    String orderPromotionProductsInCategories();
    @DefaultMessage("Promotions Applied")
    String orderPromotionsApplied();
    @DefaultMessage("Order history for orders send to you")
    String orderPurchaseHistory();
    @DefaultMessage("Purchase Order")
    String orderPurchaseOrder();
    @DefaultMessage("Purchase Order Number")
    String orderPurchaseOrderNumber();
    @DefaultMessage("Order Purchase Report Options")
    String orderPurchaseReportOptions();
    @DefaultMessage("Purchased From")
    String orderPurchasedFrom();
    @DefaultMessage("Qty")
    String orderQty();
    @DefaultMessage("Qty Cancelled")
    String orderQtyCanceled();
    @DefaultMessage("Qty Ordered")
    String orderQtyOrdered();
    @DefaultMessage("Qty Picked")
    String orderQtyPicked();
    @DefaultMessage("Qty Shipped")
    String orderQtyShipped();
    @DefaultMessage("Quantity")
    String orderQuantity();
    @DefaultMessage("Qty Cncld")
    String orderQuantityCancelled();
    @DefaultMessage("Item Quantity History")
    String orderQuantityHistory();
    @DefaultMessage("In Group")
    String orderQuantityInShipGroup();
    @DefaultMessage("Total In Group")
    String orderQuantityInShipGroupTotal();
    @DefaultMessage("Qty Purch")
    String orderQuantityPurchase();
    @DefaultMessage("Shipped")
    String orderQuantityShipped();
    @DefaultMessage("Qty Sold")
    String orderQuantitySold();
    @DefaultMessage("Unity of measure")
    String orderQuantityUom();
    @DefaultMessage("Quick Add")
    String orderQuickAdd();
    @DefaultMessage("Order Item Quick Add")
    String orderQuickAddOrderItem();
    @DefaultMessage("Quick  Add  Order  Item")
    String orderQuickAddOrderItemError();
    @DefaultMessage("Quick Finalize Order")
    String orderQuickFinalizeOrder();
    @DefaultMessage("Quick Lookup")
    String orderQuickLookup();
    @DefaultMessage("Quick Receive Purchase Order")
    String orderQuickReceivePurchaseOrder();
    @DefaultMessage("Quick Refund Entire Order")
    String orderQuickRefundEntireOrder();
    @DefaultMessage("Quick Ship Entire Order")
    String orderQuickShipEntireOrder();
    @DefaultMessage("Quote")
    String orderQuote();
    @DefaultMessage("Quote Percent")
    String orderQuotePercent();
    @DefaultMessage("Quote Price Permission Error")
    String orderQuotePricePermissionError();
    @DefaultMessage("Ranking")
    String orderRanking();
    @DefaultMessage("Rate")
    String orderRate();
    @DefaultMessage("Ratings")
    String orderRatings();
    @DefaultMessage("Re Auth Service")
    String orderReAuthService();
    @DefaultMessage("Reason")
    String orderReason();
    @DefaultMessage("Recalculate Order")
    String orderRecalculateOrder();
    @DefaultMessage("Receipt Information")
    String orderReceiptInformation();
    @DefaultMessage("Receive Offline Payment(s)")
    String orderReceiveOfflinePayments();
    @DefaultMessage("Receive Return")
    String orderReceiveReturn();
    @DefaultMessage("On Other Delivery Order")
    String orderReceivedInOtherReceive();
    @DefaultMessage("OrderReceivedNullForOrderItemRecordsOrderId")
    String orderReceivedNullForOrderItemRecordsOrderId(String orderId);
    @DefaultMessage("Received Quantity History")
    String orderReceivedQtyHistory();
    @DefaultMessage("Recipient''s Email:")
    String orderRecipientEmailAdd();
    @DefaultMessage("Recipient''s Name:")
    String orderRecipientName();
    @DefaultMessage("Reference")
    String orderReference();
    @DefaultMessage("Refund Amount Exceeds Order Total")
    String orderRefundAmountExceedsOrderTotal();
    @DefaultMessage("Refund Service")
    String orderRefundService();
    @DefaultMessage("Reject Order")
    String orderRejectOrder();
    @DefaultMessage("Rejected")
    String orderRejected();
    @DefaultMessage("Release Hold")
    String orderRelease();
    @DefaultMessage("Remaining")
    String orderRemaining();
    @DefaultMessage("Remaining SubTotal")
    String orderRemainingSubTotal();
    @DefaultMessage("Remove Communication Event Order Permission Error")
    String orderRemoveCommunicationEventOrderPermissionError();
    @DefaultMessage("Remove Selected")
    String orderRemoveSelected();
    @DefaultMessage("Rental order items in the order, however no workEfforts with start/end date and number of persons")
    String orderRentalOrderItems();
    @DefaultMessage("From Date(Order Date>=)")
    String orderReportFromDate();
    @DefaultMessage("Open Order Items Report")
    String orderReportOpenOrderItems();
    @DefaultMessage("Purchases by Organization Report")
    String orderReportPurchasesByOrganization();
    @DefaultMessage("Purchases by Payment Method Report")
    String orderReportPurchasesByPaymentMethod();
    @DefaultMessage("Purchases by Product Report")
    String orderReportPurchasesByProduct();
    @DefaultMessage("Sales by Store Report")
    String orderReportSalesByStore();
    @DefaultMessage("Thru Date(Order Date<)")
    String orderReportThruDate();
    @DefaultMessage("Order Reports")
    String orderReports();
    @DefaultMessage("Request")
    String orderRequest();
    @DefaultMessage("Content")
    String orderRequestContent();
    @DefaultMessage("Created Date")
    String orderRequestCreatedDate();
    @DefaultMessage("Request created from shopping cart")
    String orderRequestCreatedFromShoppingCart();
    @DefaultMessage("Request Date")
    String orderRequestDate();
    @DefaultMessage("Request Item")
    String orderRequestItem();
    @DefaultMessage("Notes")
    String orderRequestItemNotes();
    @DefaultMessage("Quotes")
    String orderRequestItemQuotes();
    @DefaultMessage("Request Item WorkEffort")
    String orderRequestItemWorkEffort();
    @DefaultMessage("Request Items")
    String orderRequestItems();
    @DefaultMessage("Last Modified Date")
    String orderRequestLastModifiedDate();
    @DefaultMessage("Customer Request List")
    String orderRequestList();
    @DefaultMessage("Request Manager")
    String orderRequestManager();
    @DefaultMessage("Maximum Amount")
    String orderRequestMaximumAmount();
    @DefaultMessage("Request Name")
    String orderRequestName();
    @DefaultMessage("Overview")
    String orderRequestOverview();
    @DefaultMessage("Request Return")
    String orderRequestReturn();
    @DefaultMessage("Request Roles")
    String orderRequestRoles();
    @DefaultMessage("Request Taker")
    String orderRequestTaker();
    @DefaultMessage("Requested Response")
    String orderRequestedResponse();
    @DefaultMessage("OrderRequestedReturnQuantityNotAvailablePreviousReturnsMayExist")
    String orderRequestedReturnQuantityNotAvailablePreviousReturnsMayExist(String parameters_returnQuantity, String returnableQuantity);
    @DefaultMessage("Requesting Party")
    String orderRequestingParty();
    @DefaultMessage("Requests")
    String orderRequests();
    @DefaultMessage("Required for SO")
    String orderRequiredForSO();
    @DefaultMessage("Requirement")
    String orderRequirement();
    @DefaultMessage("Manufacturing Requirement By Date")
    String orderRequirementByDate();
    @DefaultMessage("RequirementId")
    String orderRequirementId();
    @DefaultMessage("Number of Products")
    String orderRequirementNumberOfProducts();
    @DefaultMessage("Manufacturing Requirement Start Date")
    String orderRequirementStartDate();
    @DefaultMessage("Order Requirement Status Id")
    String orderRequirementStatusId();
    @DefaultMessage("Requirements")
    String orderRequirements();
    @DefaultMessage("Requirements For Request Item")
    String orderRequirementsForRequestItem();
    @DefaultMessage("Requirement List")
    String orderRequirementsList();
    @DefaultMessage("Requires code to use.")
    String orderRequiresCodeToUse();
    @DefaultMessage("Reservation length should be a positive number")
    String orderReservationLengthShouldBeAPositiveNumber();
    @DefaultMessage("Accept Return")
    String orderReturnAccept();
    @DefaultMessage("Return Order Adjustment(s) From Order")
    String orderReturnAdjustments();
    @DefaultMessage("This cannot be changed without re-creating the Return.")
    String orderReturnCannotBeChanged();
    @DefaultMessage("Could not find Return with ID")
    String orderReturnCannotBeFound();
    @DefaultMessage("Destination Facility")
    String orderReturnDestinationFacility();
    @DefaultMessage("Return Enum Id")
    String orderReturnEnumId();
    @DefaultMessage("Return(s) Found")
    String orderReturnFound();
    @DefaultMessage("Return From Address")
    String orderReturnFromAddress();
    @DefaultMessage("Return Item(s) From Order")
    String orderReturnFromOrder();
    @DefaultMessage("Return From Party")
    String orderReturnFromParty();
    @DefaultMessage("Return Header")
    String orderReturnHeader();
    @DefaultMessage("Return History")
    String orderReturnHistory();
    @DefaultMessage("Return ID")
    String orderReturnId();
    @DefaultMessage("Inventory Status")
    String orderReturnItemInventoryStatus();
    @DefaultMessage("Return Items")
    String orderReturnItems();
    @DefaultMessage("Return Item(s) From Order")
    String orderReturnItemsFromOrder();
    @DefaultMessage("Return shipping label email successfully sent")
    String orderReturnLabelEmailSuccessful();
    @DefaultMessage("Load order items for return")
    String orderReturnLoadItems();
    @DefaultMessage("Manual Return Adjustment For Order")
    String orderReturnManualAdjustment();
    @DefaultMessage("If this is Y then the return will be automatically Completed when it is Accepted, skipping the Received status and process.")
    String orderReturnNecessaryReceiveInventoryMessage();
    @DefaultMessage("Auto-Receive On ACCEPT")
    String orderReturnNeedsAutoReceive();
    @DefaultMessage("No returnable items found for order")
    String orderReturnNoReturnableItems();
    @DefaultMessage("A payment method must be set for this type of return")
    String orderReturnPaymentMethodNeededForThisTypeOfReturn();
    @DefaultMessage("Return Price")
    String orderReturnPrice();
    @DefaultMessage("OrderReturnPriceCannotExceedTheOrderTotal")
    String orderReturnPriceCannotExceedTheOrderTotal(String returnTotal, String orderTotal);
    @DefaultMessage("OrderReturnPriceCannotExceedThePurchasePrice")
    String orderReturnPriceCannotExceedThePurchasePrice(String parameters_returnPrice, String returnablePrice);
    @DefaultMessage("Return Price History")
    String orderReturnPriceHistory();
    @DefaultMessage("Price not includes tax  adjustments")
    String orderReturnPriceNotIncludeTax();
    @DefaultMessage("Return Qty")
    String orderReturnQty();
    @DefaultMessage("Return Quantity History")
    String orderReturnQtyHistory();
    @DefaultMessage("OrderReturnQuantityCannotExceedTheOrderedQuantity")
    String orderReturnQuantityCannotExceedTheOrderedQuantity(String parameters_returnQuantity, String orderItem_quantity);
    @DefaultMessage("Reason")
    String orderReturnReason();
    @DefaultMessage("Return Reason History")
    String orderReturnReasonHistory();
    @DefaultMessage("Receive Return")
    String orderReturnReceive();
    @DefaultMessage("Response")
    String orderReturnResponse();
    @DefaultMessage("Return Selected Item(s)")
    String orderReturnSelectedItems();
    @DefaultMessage("Please select a ship from address")
    String orderReturnShipFromAddress();
    @DefaultMessage("Return Summary")
    String orderReturnSummary();
    @DefaultMessage("Return To Address")
    String orderReturnToAddress();
    @DefaultMessage("Return To Facility")
    String orderReturnToFacility();
    @DefaultMessage("Return Total")
    String orderReturnTotal();
    @DefaultMessage("OrderReturnTotalCannotLessThanZero")
    String orderReturnTotalCannotLessThanZero(String returnTotalAmount);
    @DefaultMessage("Type")
    String orderReturnType();
    @DefaultMessage("Return Type History")
    String orderReturnTypeHistory();
    @DefaultMessage("Returned")
    String orderReturned();
    @DefaultMessage("Current Returns")
    String orderReturnsCurrent();
    @DefaultMessage("Review Order")
    String orderReviewOrder();
    @DefaultMessage("Run Action")
    String orderRunAction();
    @DefaultMessage("Run service [getInventoryAvailableByFacility] error :")
    String orderRunServiceGetInventoryAvailableByFacilityError();
    @DefaultMessage("Run service [getSuppliersForProduct] error :")
    String orderRunServiceGetSuppliersForProductError();
    @DefaultMessage("Run Store Promotions")
    String orderRunStorePromotions();
    @DefaultMessage("Sales Channel")
    String orderSalesChannel();
    @DefaultMessage("Order history for orders entered by you")
    String orderSalesHistory();
    @DefaultMessage("Sales Order")
    String orderSalesOrder();
    @DefaultMessage("Sales Order Lookup Failed")
    String orderSalesOrderLookupFailed();
    @DefaultMessage("Sales Tax")
    String orderSalesTax();
    @DefaultMessage("Of which Sales Tax included")
    String orderSalesTaxIncluded();
    @DefaultMessage("Save")
    String orderSave();
    @DefaultMessage("Schedule Delivery")
    String orderScheduleDelivery();
    @DefaultMessage("Score")
    String orderScore();
    @DefaultMessage("Security Error: to run addPaymentMethodToOrder you must have the ORDERMGR_CREATE or ORDERMGR_ADMIN permission")
    String orderSecurityErrorToRunAddPaymentMethodToOrder();
    @DefaultMessage("Security Error To Run Auto Create Order Adjustments")
    String orderSecurityErrorToRunAutoCreateOrderAdjustments();
    @DefaultMessage("Security Error To Run Auto Create Quote Adjustments")
    String orderSecurityErrorToRunAutoCreateQuoteAdjustments();
    @DefaultMessage("Security Error : to run autoUpdateQuotePrice you must have the ORDERMGR_CREATE or ORDERMGR_ADMIN permission")
    String orderSecurityErrorToRunAutoUpdateQuotePrice();
    @DefaultMessage("Security Error : to run cancelReturnItems you must have the ORDERMGR_DELETE or ORDERMGR_ADMIN permission")
    String orderSecurityErrorToRunCancelReturnItems();
    @DefaultMessage("Security Error : to run createCustRequest you must have the ORDERMGR_CRQ_CREATE or ORDERMGR_ADMIN permission")
    String orderSecurityErrorToRunCheckCreateCustRequest();
    @DefaultMessage("Security Error : to run checkCreateOrderRequirement you must have the ORDERMGR_CREATE or ORDERMGR_ADMIN permission")
    String orderSecurityErrorToRunCheckCreateOrderRequirement();
    @DefaultMessage("Security Error: to run createOrderRequirementCommitment you must have ORDERMGR_CREATE or ORDERMGR_ADMIN permission")
    String orderSecurityErrorToRunCheckCreateOrderRequirementCommitment();
    @DefaultMessage("Security Error : to run checkCreateStockRequirement you must have the ORDERMGR_CREATE or ORDERMGR_ADMIN permission")
    String orderSecurityErrorToRunCheckCreateStockRequirement();
    @DefaultMessage("Security Error To Run Check Update Quote Status")
    String orderSecurityErrorToRunCheckUpdateQuoteStatus();
    @DefaultMessage("Security Error To Run Copy Cust Request Item")
    String orderSecurityErrorToRunCopyCustRequestItem();
    @DefaultMessage("Security Error To Run Copy Quote")
    String orderSecurityErrorToRunCopyQuote();
    @DefaultMessage("Security Error To Run Copy Quote Item")
    String orderSecurityErrorToRunCopyQuoteItem();
    @DefaultMessage("Security Error To Run Create Cust Request")
    String orderSecurityErrorToRunCreateCustRequest();
    @DefaultMessage("Security Error : to run createOrderAdjustment you must have the ORDERMGR_CREATE or ORDERMGR_ADMIN permission")
    String orderSecurityErrorToRunCreateOrderAdjustement();
    @DefaultMessage("Security Error: to run createOrderContactMech you must have the ORDERMGR_CREATE or ORDERMGR_ADMIN permission")
    String orderSecurityErrorToRunCreateOrderContactMech();
    @DefaultMessage("Security Error : to run createOrderShipment you must have the ORDERMGR_CREATE or ORDERMGR_ADMIN permission")
    String orderSecurityErrorToRunCreateOrderShipment();
    @DefaultMessage("Security Error To Run Create Order Term")
    String orderSecurityErrorToRunCreateOrderTerm();
    @DefaultMessage("Security Error To Run Create Quantity Break")
    String orderSecurityErrorToRunCreateQuantityBreak();
    @DefaultMessage("Security Error : to run createQuote you must have the ORDERMGR_CREATE or ORDERMGR_ADMIN permission")
    String orderSecurityErrorToRunCreateQuote();
    @DefaultMessage("Security Error To Run Create Quote Adjustment")
    String orderSecurityErrorToRunCreateQuoteAdjustment();
    @DefaultMessage("Security Error : to run createQuoteAndQuoteItemForRequest you must have the ORDERMGR_CREATE or ORDERMGR_ADMIN permission")
    String orderSecurityErrorToRunCreateQuoteAndQuoteItemForRequest();
    @DefaultMessage("Security Error : to run createQuoteAttribute you must have the ORDERMGR_CREATE or ORDERMGR_ADMIN permission")
    String orderSecurityErrorToRunCreateQuoteAttribute();
    @DefaultMessage("Security Error : to run createQuoteCoefficient you must have the ORDERMGR_CREATE or ORDERMGR_ADMIN permission")
    String orderSecurityErrorToRunCreateQuoteCoefficient();
    @DefaultMessage("Security Error To Run Create Quote From Cart")
    String orderSecurityErrorToRunCreateQuoteFromCart();
    @DefaultMessage("Security Error To Run Create Quote From Cust Request")
    String orderSecurityErrorToRunCreateQuoteFromCustRequest();
    @DefaultMessage("Security Error : to run createQuoteItem you must have the ORDERMGR_CREATE or ORDERMGR_ADMIN permission")
    String orderSecurityErrorToRunCreateQuoteItem();
    @DefaultMessage("Security Error: to run createRequirementFromItemATP you must have the ORDERMGR_CREATE or ORDERMGR_ADMIN permission")
    String orderSecurityErrorToRunCreateRequirementFromItemATP();
    @DefaultMessage("Security Error : to run createReturnHeader you must have the ORDERMGR_CREATE or ORDERMGR_ADMIN permission")
    String orderSecurityErrorToRunCreateReturnHeader();
    @DefaultMessage("Security Error : to run createReturnItem you must have the ORDERMGR_CREATE or ORDERMGR_ADMIN permission")
    String orderSecurityErrorToRunCreateReturnItem();
    @DefaultMessage("Security Error To Run Create Return Item Shipment")
    String orderSecurityErrorToRunCreateReturnItemShipment();
    @DefaultMessage("Security Error : to run createShoppingList for another party you must have the PARTYMGR_CREATE or PARTYMGR_ADMIN permission")
    String orderSecurityErrorToRunCreateShoppingListForAnotherParty();
    @DefaultMessage("Security Error : to run createTaxRate you must have the TAXRATE_CREATE or TAXRATE_ADMIN permission")
    String orderSecurityErrorToRunCreateTaxRate();
    @DefaultMessage("Security Error : to run deleteOrderAdjustment you must have the ORDERMGR_DELETE or ORDERMGR_ADMIN permission")
    String orderSecurityErrorToRunDeleteOrderAdjustement();
    @DefaultMessage("Security Error : to run deleteOrderShipment you must have the ORDERMGR_DELETE or ORDERMGR_ADMIN permission")
    String orderSecurityErrorToRunDeleteOrderShipment();
    @DefaultMessage("OrderSecurityErrorToRunForAnotherParty")
    String orderSecurityErrorToRunForAnotherParty(String parentMethodName, String permissionAction);
    @DefaultMessage("Security Error : to run quickReturnFromOrder you must have the ORDERMGR_CREATE or ORDERMGR_ADMIN permission")
    String orderSecurityErrorToRunQuickReturnFromOrder();
    @DefaultMessage("Security Error: to run removeOrderContactMech you must have the ORDERMGR_DELETE or ORDERMGR_ADMIN permission")
    String orderSecurityErrorToRunRemoveOrderContactMech();
    @DefaultMessage("Security Error while running removeOrderTerm")
    String orderSecurityErrorToRunRemoveOrderTerm();
    @DefaultMessage("Security Error while running removeQuantityBreak")
    String orderSecurityErrorToRunRemoveQuantityBreak();
    @DefaultMessage("Security Error while running removeQuoteAdjustment")
    String orderSecurityErrorToRunRemoveQuoteAdjustment();
    @DefaultMessage("Security Error : to run removeQuoteAttribute you must have the ORDERMGR_CREATE or ORDERMGR_ADMIN permission")
    String orderSecurityErrorToRunRemoveQuoteAttribute();
    @DefaultMessage("Security Error : to run removeQuoteCoefficient you must have the ORDERMGR_CREATE or ORDERMGR_ADMIN permission")
    String orderSecurityErrorToRunRemoveQuoteCoefficient();
    @DefaultMessage("Security Error : to run removeQuoteItem you must have the ORDERMGR_CREATE or ORDERMGR_ADMIN permission")
    String orderSecurityErrorToRunRemoveQuoteItem();
    @DefaultMessage("Security Error : to run removeReturnItem you must have the ORDERMGR_DELETE or ORDERMGR_ADMIN permission")
    String orderSecurityErrorToRunRemoveReturnItem();
    @DefaultMessage("Security Error : to run RemoveTaxRate you must have the TAXRATE_DELETE or TAXRATE_ADMIN permission")
    String orderSecurityErrorToRunRemoveTaxRate();
    @DefaultMessage("Security Error : to run updateOrderAdjustment you must have the ORDERMGR_UPDATE or ORDERMGR_ADMIN permission")
    String orderSecurityErrorToRunUpdateOrderAdjustement();
    @DefaultMessage("Security Error: to run updateOrderContactMech you must have the ORDERMGR_UPDATE or ORDERMGR_ADMIN permission")
    String orderSecurityErrorToRunUpdateOrderContactMech();
    @DefaultMessage("Security Error: to run updateOrderItemShipGroup you must have the ORDERMGR_UPDATE or ORDERMGR_ADMIN permission")
    String orderSecurityErrorToRunUpdateOrderItemShipGroup();
    @DefaultMessage("Error in toggling notes to Private/Public")
    String orderSecurityErrorToRunUpdateOrderNote();
    @DefaultMessage("Security Error : to run updateOrderStatusFromReceipt you must have the ORDERMGR_UPDATE or ORDERMGR_ADMIN permission")
    String orderSecurityErrorToRunUpdateOrderStatusFromReceipt();
    @DefaultMessage("Security Error while running service updateOrderTerm")
    String orderSecurityErrorToRunUpdateOrderTerm();
    @DefaultMessage("Security Error while running service updateQuantityBreak")
    String orderSecurityErrorToRunUpdateQuantityBreak();
    @DefaultMessage("Security Error : to run updateQuote you must have the ORDERMGR_CREATE or ORDERMGR_ADMIN permission")
    String orderSecurityErrorToRunUpdateQuote();
    @DefaultMessage("Security Error while running service updateQuoteAdjustment")
    String orderSecurityErrorToRunUpdateQuoteAdjustment();
    @DefaultMessage("Security Error : to run updateQuoteAttribute you must have the ORDERMGR_CREATE or ORDERMGR_ADMIN permission")
    String orderSecurityErrorToRunUpdateQuoteAttribute();
    @DefaultMessage("Security Error : to run updateQuoteCoefficient you must have the ORDERMGR_CREATE or ORDERMGR_ADMIN permission")
    String orderSecurityErrorToRunUpdateQuoteCoefficient();
    @DefaultMessage("Security Error : to run updateQuoteItem you must have the ORDERMGR_CREATE or ORDERMGR_ADMIN permission")
    String orderSecurityErrorToRunUpdateQuoteItem();
    @DefaultMessage("Security Error : to run")
    String orderSecurityErrorToRunUpdateReturnHeader();
    @DefaultMessage("Sel. amount")
    String orderSelAmount();
    @DefaultMessage("Select A Shipping Address")
    String orderSelectAShippingAddress();
    @DefaultMessage("Select A Suplier Or A Product")
    String orderSelectASuplierOrAProduct();
    @DefaultMessage("Select Address First")
    String orderSelectAddressFirst();
    @DefaultMessage("Select an agreement for this order")
    String orderSelectAgreement();
    @DefaultMessage("Select order agreement Roles")
    String orderSelectAgreementRoles();
    @DefaultMessage("Set a currency for this order")
    String orderSelectCurrency();
    @DefaultMessage("Or set a currency for this order")
    String orderSelectCurrencyOr();
    @DefaultMessage("Select The Gift Amount")
    String orderSelectGiftAmount();
    @DefaultMessage("Select Only Supplier Or Product")
    String orderSelectOnlySupplierOrProduct();
    @DefaultMessage("Select type of party to associate to order")
    String orderSelectPartyToOrder();
    @DefaultMessage("Select Payment Method")
    String orderSelectPaymentMethod();
    @DefaultMessage("Please select a ship from address")
    String orderSelectShipFromAddress();
    @DefaultMessage("Select Shipping Address")
    String orderSelectShippingAddress();
    @DefaultMessage("Select Shipping Method")
    String orderSelectShippingMethod();
    @DefaultMessage("Select Supplier")
    String orderSelectSupplier();
    @DefaultMessage("Select Variant")
    String orderSelectVariant();
    @DefaultMessage("Selected Gift Wrap is not available for all items. The items which are available have been selected, the others remain unchanged.")
    String orderSelectedGiftNotAvailableForAll();
    @DefaultMessage("Send a confirmation email")
    String orderSendConfirmationEmail();
    @DefaultMessage("BCC To")
    String orderSendConfirmationEmailBCCTo();
    @DefaultMessage("Body")
    String orderSendConfirmationEmailBody();
    @DefaultMessage("CC To")
    String orderSendConfirmationEmailCCTo();
    @DefaultMessage("Content-Type")
    String orderSendConfirmationEmailContentType();
    @DefaultMessage("Note")
    String orderSendConfirmationEmailNote();
    @DefaultMessage("Send To")
    String orderSendConfirmationEmailSendTo();
    @DefaultMessage("Subject")
    String orderSendConfirmationEmailSubject();
    @DefaultMessage("Send Email")
    String orderSendEmail();
    @DefaultMessage("SendMail service failed :")
    String orderSendMailServiceFailed();
    @DefaultMessage("Send me this every month")
    String orderSendMeThisEveryMonth();
    @DefaultMessage("Please Send Payment To")
    String orderSendPaymentTo();
    @DefaultMessage("Sender''s Name:")
    String orderSenderName();
    @DefaultMessage("Service exception; see logs")
    String orderServiceExceptionSeeLogs();
    @DefaultMessage("Service not yet implemented")
    String orderServiceNotYetImplemented();
    @DefaultMessage("Set currency error :")
    String orderSetCurrencyError();
    @DefaultMessage("Ship After Date")
    String orderShipAfterDate();
    @DefaultMessage("Default Ship After Date")
    String orderShipAfterDateDefault();
    @DefaultMessage("Ship all at once, or ''as available''")
    String orderShipAllAtOnce();
    @DefaultMessage("Ship All Items Together")
    String orderShipAllItemsTogether();
    @DefaultMessage("Ship Before Date")
    String orderShipBeforeDate();
    @DefaultMessage("Default Ship Before Date")
    String orderShipBeforeDateDefault();
    @DefaultMessage("Ship Group")
    String orderShipGroup();
    @DefaultMessage("Ship Group Seq Id")
    String orderShipGroupSeqId();
    @DefaultMessage("To Ship Group")
    String orderShipGroupTo();
    @DefaultMessage("Ship Groups")
    String orderShipGroups();
    @DefaultMessage("Ship Items When Available")
    String orderShipItemsWhenAvailable();
    @DefaultMessage("Ship Request")
    String orderShipRequest();
    @DefaultMessage("Ship To")
    String orderShipTo();
    @DefaultMessage("Ship to Another Party")
    String orderShipToAnotherParty();
    @DefaultMessage("Ship to Country")
    String orderShipToCountry();
    @DefaultMessage("Ship to Party")
    String orderShipToParty();
    @DefaultMessage("Ship Via")
    String orderShipVia();
    @DefaultMessage("Shipment Information")
    String orderShipmentInformation();
    @DefaultMessage("Shipment Method History")
    String orderShipmentMethodHistory();
    @DefaultMessage("Shipment Received")
    String orderShipmentReceived();
    @DefaultMessage("Shipper")
    String orderShipper();
    @DefaultMessage("Shipping Address")
    String orderShippingAddress();
    @DefaultMessage("Shipping and Handling")
    String orderShippingAndHandling();
    @DefaultMessage("Shipping Information")
    String orderShippingInformation();
    @DefaultMessage("Shipping Notes")
    String orderShippingNotes();
    @DefaultMessage("Shipment Date Hope")
    String orderShippmentDateHope();
    @DefaultMessage("Shopping Cart")
    String orderShoppingCart();
    @DefaultMessage("Shopping Cart Empty")
    String orderShoppingCartEmpty();
    @DefaultMessage("Shortfalled")
    String orderShortfalled();
    @DefaultMessage("Show All Notes")
    String orderShowAllNotes();
    @DefaultMessage("Show This Item''s Notes")
    String orderShowThisItemsNotes();
    @DefaultMessage("Sizes Available")
    String orderSizeAvailableMultiple();
    @DefaultMessage("Size")
    String orderSizeAvailableSingle();
    @DefaultMessage("Skids Pallets")
    String orderSkidsPallets();
    @DefaultMessage("Special Instructions")
    String orderSpecialInstructions();
    @DefaultMessage("Special Offers")
    String orderSpecialOffers();
    @DefaultMessage("The specified order was not found, please try again")
    String orderSpecifiedNotFound();
    @DefaultMessage("Split Into Multiple Shipments")
    String orderSplitIntoMultipleShipments();
    @DefaultMessage("Split Shipment")
    String orderSplitShipment();
    @DefaultMessage("Splitting Preference")
    String orderSplittingPreference();
    @DefaultMessage("Start Date/Time")
    String orderStartDateTime();
    @DefaultMessage("Status Changes")
    String orderStatusChanges();
    @DefaultMessage("Status History")
    String orderStatusHistory();
    @DefaultMessage("Status id not exist")
    String orderStatusIdNotExist();
    @DefaultMessage("Stock event planned")
    String orderStockEventPlanned();
    @DefaultMessage("Sub Total")
    String orderSubTotal();
    @DefaultMessage("Submit Order")
    String orderSubmitOrder();
    @DefaultMessage("Please Wait, Processing Order...")
    String orderSubmittingOrder();
    @DefaultMessage("Supplier Data")
    String orderSupplierData();
    @DefaultMessage("SupplierData")
    String orderSupplierDataError();
    @DefaultMessage("Supplier Financial Data")
    String orderSupplierFinancialData();
    @DefaultMessage("Supplier Financial Data")
    String orderSupplierFinancialDataError();
    @DefaultMessage("Survey")
    String orderSurvey();
    @DefaultMessage("The  Open  Hours  To  Receive  Products  Are")
    String orderTheOpenHoursToReceiveProductsAre();
    @DefaultMessage("OrderTheQuoteIsAlreadyInTheCartNotAdding")
    String orderTheQuoteIsAlreadyInTheCartNotAdding(String quoteId);
    @DefaultMessage("OrderTheRequirementIsAlreadyInTheCartNotAdding")
    String orderTheRequirementIsAlreadyInTheCartNotAdding(String requirementId);
    @DefaultMessage("This  Cannot  Be  Changed  Without Recreating The Setting")
    String orderThisCannotBeChangedWithoutRecreatingTheSetting();
    @DefaultMessage("This order is a gift")
    String orderThisIsGift();
    @DefaultMessage("This order is not a gift")
    String orderThisIsNotGift();
    @DefaultMessage("This order does not have shipping instructions")
    String orderThisOrderDoesNotHaveShippingInstructions();
    @DefaultMessage("This order is a gift")
    String orderThisOrderGift();
    @DefaultMessage("This order is not a gift")
    String orderThisOrderNotGift();
    @DefaultMessage("To Add Selected Items To Shopping List")
    String orderToAddSelectedItemsToShoppingList();
    @DefaultMessage("To Cart")
    String orderToCart();
    @DefaultMessage("Total")
    String orderTotal();
    @DefaultMessage("Total Cubic Size")
    String orderTotalCubicSize();
    @DefaultMessage("Total Due")
    String orderTotalDue();
    @DefaultMessage("Total No. of Items")
    String orderTotalNoOfItems();
    @DefaultMessage("Total Other Order Adjustments")
    String orderTotalOtherOrderAdjustments();
    @DefaultMessage("Total Qty")
    String orderTotalQty();
    @DefaultMessage("Total quantity accepted")
    String orderTotalQuantityAccepted();
    @DefaultMessage("Total quantity not received")
    String orderTotalQuantityNotReceived();
    @DefaultMessage("Total quantity ordered")
    String orderTotalQuantityOrdered();
    @DefaultMessage("Total quantity received")
    String orderTotalQuantityReceive();
    @DefaultMessage("Total quantity rejected")
    String orderTotalQuantityRejected();
    @DefaultMessage("Total Sales Tax")
    String orderTotalSalesTax();
    @DefaultMessage("Total Shipping and Handling")
    String orderTotalShippingAndHandling();
    @DefaultMessage("Total  Weight")
    String orderTotalWeight();
    @DefaultMessage("Tracking Code")
    String orderTrackingCode();
    @DefaultMessage("Tracking Number")
    String orderTrackingNumber();
    @DefaultMessage("OrderTriedToSetOrderStatusWithTheSameStatusIdforOrderWithId")
    String orderTriedToSetOrderStatusWithTheSameStatusIdforOrderWithId(String statusId, String orderId);
    @DefaultMessage("Trouble getting ItemIssuance(s)")
    String orderTroubleGettingItemIssuances();
    @DefaultMessage("Trouble Getting Order Item Ship Grp Inv Res List")
    String orderTroubleGettingOrderItemShipGrpInvResList();
    @DefaultMessage("OrderUnableToAddItemToShoppingList")
    String orderUnableToAddItemToShoppingList(String shoppingListId);
    @DefaultMessage("Unable to cancel item inventory reservation")
    String orderUnableToCancelItemInventoryReservation();
    @DefaultMessage("Unable to cancel order Item :")
    String orderUnableToCancelOrderItem();
    @DefaultMessage("OrderUnableToCancelOrderLine")
    String orderUnableToCancelOrderLine(String itemMsgInfo);
    @DefaultMessage("Unable to create new shopping list")
    String orderUnableToCreateNewShoppingList();
    @DefaultMessage("OrderUnableToCreateShoppingListRecurrenceInformation")
    String orderUnableToCreateShoppingListRecurrenceInformation(String shoppingListId);
    @DefaultMessage("Unable to find OrderHeader; cannot get shipping amount")
    String orderUnableToFindOrderHeaderCannotGetShippingAmount();
    @DefaultMessage("OrderUnableToLoadOrderReadHelper")
    String orderUnableToLoadOrderReadHelper(String orderId);
    @DefaultMessage("OrderUnableToLocateOrder")
    String orderUnableToLocateOrder(String orderId);
    @DefaultMessage("OrderUnableToLocateRuleFileFromLocation")
    String orderUnableToLocateRuleFileFromLocation(String ruleFileLocation);
    @DefaultMessage("OrderUnableToLocateTaxFileAtLocation")
    String orderUnableToLocateTaxFileAtLocation(String taxFileLocation);
    @DefaultMessage("Unable to read ZipSales DataFile")
    String orderUnableToReadZipSalesDataFile();
    @DefaultMessage("Unable to remove SALES_TAX adjustments")
    String orderUnableToRemoveSalesTaxAdjustments();
    @DefaultMessage("Unable to reserve inventory")
    String orderUnableToReserveInventory();
    @DefaultMessage("Unable to reset order grand total")
    String orderUnableToResetOrderGrandTotal();
    @DefaultMessage("Unable to retrieve SALES_TAX adjustments")
    String orderUnableToRetrieveSalesTaxAdjustments();
    @DefaultMessage("OrderUnableToSetCancelQuantity")
    String orderUnableToSetCancelQuantity(String itemMsgInfo);
    @DefaultMessage("Unable to store auto-save cart")
    String orderUnableToStoreAutoSaveCart();
    @DefaultMessage("Unable to update cancel quantity of item")
    String orderUnableToUpdateCancelQuantityOfItem();
    @DefaultMessage("Unable to update comments of item")
    String orderUnableToUpdateCommentsOfItem();
    @DefaultMessage("OrderUnableToUpdateInventoryReservations")
    String orderUnableToUpdateInventoryReservations(String itemMsgInfo);
    @DefaultMessage("Unable to update item''s estimated delivery date")
    String orderUnableToUpdateItemsEstimatedDeliveryDate();
    @DefaultMessage("OrderUnableToUpdateOrderTaxInformation")
    String orderUnableToUpdateOrderTaxInformation(String orderId);
    @DefaultMessage("Unable to update ordered quantity of item")
    String orderUnableToUpdateOrderedQuantityOfItem();
    @DefaultMessage("OrderUnableToUpdateShoppingListInformation")
    String orderUnableToUpdateShoppingListInformation(String shoppinListId);
    @DefaultMessage("Unable to update unit price of item")
    String orderUnableToUpdateUnitPriceOfItem();
    @DefaultMessage("Unit / List")
    String orderUnitList();
    @DefaultMessage("Unit Price")
    String orderUnitPrice();
    @DefaultMessage("Unit  Price  HT")
    String orderUnitPriceHT();
    @DefaultMessage("Item Unit Price History")
    String orderUnitPriceHistory();
    @DefaultMessage("OrderUnitPriceOrQuantityAreNullUsingForTheItemBasePrice")
    String orderUnitPriceOrQuantityAreNullUsingForTheItemBasePrice(String getOrderItemTotal);
    @DefaultMessage("Units  Pieces")
    String orderUnitsPieces();
    @DefaultMessage("Unplanned")
    String orderUnplanned();
    @DefaultMessage("Your may update these in your")
    String orderUpdateEmailAddress();
    @DefaultMessage("Update Items")
    String orderUpdateItems();
    @DefaultMessage("OrderUpdateReturnAdjustment")
    String orderUpdateReturnAdjustment(String returnAdjustmentId, String amount);
    @DefaultMessage("Use Default: No other shipping methods available")
    String orderUseDefault();
    @DefaultMessage("Use as default comment for next entry")
    String orderUseDefaultComment();
    @DefaultMessage("Use as default desired delivery date for next entry")
    String orderUseDefaultDesiredDeliveryDate();
    @DefaultMessage("Value Purch")
    String orderValuePurchase();
    @DefaultMessage("Value Sold")
    String orderValueSold();
    @DefaultMessage("# Products")
    String orderVendorRequirementCount();
    @DefaultMessage("Verify Configuration")
    String orderVerifyConfiguration();
    @DefaultMessage("View All Promotions")
    String orderViewAllPromotions();
    @DefaultMessage("View Cart")
    String orderViewCart();
    @DefaultMessage("View/Edit Delivery")
    String orderViewEditDelivery();
    @DefaultMessage("View/Edit Delivery Schedule Info")
    String orderViewEditDeliveryScheduleInfo();
    @DefaultMessage("View Image")
    String orderViewImage();
    @DefaultMessage("View Order")
    String orderViewOrder();
    @DefaultMessage("View Order History")
    String orderViewOrderHistory();
    @DefaultMessage("You do not have permission to view this page (it needs \"ORDERMGR_VIEW\", \"ORDERMGR_PURCHASE_VIEW\" or \"ORDERMGR_ADMIN\").")
    String orderViewPermissionError();
    @DefaultMessage("View Quote")
    String orderViewQuote();
    @DefaultMessage("Profit")
    String orderViewQuoteProfit();
    @DefaultMessage("View Request")
    String orderViewRequest();
    @DefaultMessage("Viewed")
    String orderViewed();
    @DefaultMessage("WTD")
    String orderWTD();
    @DefaultMessage("Waiting Approval")
    String orderWaitingApproval();
    @DefaultMessage("Waiting Completion")
    String orderWaitingCompletion();
    @DefaultMessage("Waiting Payment")
    String orderWaitingPayment();
    @DefaultMessage("WebSite")
    String orderWebSite();
    @DefaultMessage("Weight Measurement")
    String orderWeightMeasurement();
    @DefaultMessage("Where shall we ship it")
    String orderWhereShallWeShipIt();
    @DefaultMessage("with Code")
    String orderWithPromoCode();
    @DefaultMessage("Requirements")
    String orderWorkEffortRequirements();
    @DefaultMessage("Workflow")
    String orderWorkflow();
    @DefaultMessage("YTD")
    String orderYTD();
    @DefaultMessage("Yes, Is A Gift")
    String orderYesIsAGift();
    @DefaultMessage("You do not have permission to change this order''s status.")
    String orderYouDoNotHavePermissionToChangeThisOrdersStatus();
    @DefaultMessage("You do not have permission to load tax tables")
    String orderYouDoNotHavePermissionToLoadTaxTables();
    @DefaultMessage("You do not have permission to take orders for this store.")
    String orderYouDoNotHavePermissionToTakeOrdersForThisStore();
    @DefaultMessage("You  Do  Not  Have  Permission  To View This Page")
    String orderYouDoNotHavePermissionToViewThisPage();
    @DefaultMessage("You Must")
    String orderYouMust();
    @DefaultMessage("Your Price")
    String orderYourPrice();
    @DefaultMessage("Add Agreement Roles")
    String pageTitleAddAgreementRoles();
    @DefaultMessage("Add Billing Account Roles")
    String pageTitleAddBillingAccountRoles();
    @DefaultMessage("Add Calendar Exception Week")
    String pageTitleAddCalendarExceptionWeek();
    @DefaultMessage("Add New Data Source")
    String pageTitleAddDataSource();
    @DefaultMessage("Add New Data Source Type")
    String pageTitleAddDataSourceType();
    @DefaultMessage("Add Facility Group Rollup")
    String pageTitleAddFacilityGroupRollup();
    @DefaultMessage("Add Feature InterAction")
    String pageTitleAddFeatureInterAction();
    @DefaultMessage("Add Feature Price")
    String pageTitleAddFeaturePrice();
    @DefaultMessage("Add Gl Account")
    String pageTitleAddGlAccount();
    @DefaultMessage("Add Inventory Item Label Appls")
    String pageTitleAddInventoryItemLabelAppls();
    @DefaultMessage("Add Inventory Item Label Types")
    String pageTitleAddInventoryItemLabelTypes();
    @DefaultMessage("Add Issuer Provisions")
    String pageTitleAddIssuerProvisions();
    @DefaultMessage("Add Items From Order")
    String pageTitleAddItemsFromOrder();
    @DefaultMessage("Add Party Content")
    String pageTitleAddPartyContent();
    @DefaultMessage("Add Party Invitation Group Assoc")
    String pageTitleAddPartyInvitationGroupAssoc();
    @DefaultMessage("Add Party Invitation Role Assoc")
    String pageTitleAddPartyInvitationRoleAssoc();
    @DefaultMessage("Add Party Segment Role")
    String pageTitleAddPartySegmentRoles();
    @DefaultMessage("Add Party Tax Authority Info")
    String pageTitleAddPartyTaxAuthInfos();
    @DefaultMessage("Add Product Asset Usage")
    String pageTitleAddProductAssetUsage();
    @DefaultMessage("Add Product Catalog Parties")
    String pageTitleAddProductCatalogParties();
    @DefaultMessage("Add Product Catalog Stores")
    String pageTitleAddProductCatalogStores();
    @DefaultMessage("Add Product Categories")
    String pageTitleAddProductCategories();
    @DefaultMessage("Add Product Configs")
    String pageTitleAddProductConfigs();
    @DefaultMessage("Add Product Geos")
    String pageTitleAddProductGeos();
    @DefaultMessage("Add Product Maintenance")
    String pageTitleAddProductMaintenance();
    @DefaultMessage("Add Product Meters")
    String pageTitleAddProductMeters();
    @DefaultMessage("Add Product Payment Method Type")
    String pageTitleAddProductPaymentMethodType();
    @DefaultMessage("Add Product Prices")
    String pageTitleAddProductPrices();
    @DefaultMessage("Add Product Store Catalogs")
    String pageTitleAddProductStoreCatalogs();
    @DefaultMessage("Add Product Store Email Setup")
    String pageTitleAddProductStoreEmailSetup();
    @DefaultMessage("Add Product Store Keyword Ovrd")
    String pageTitleAddProductStoreKeywordOvrd();
    @DefaultMessage("Add Product Store Ship Setup")
    String pageTitleAddProductStoreShipSetup();
    @DefaultMessage("Add Product Store Surveys")
    String pageTitleAddProductStoreSurveys();
    @DefaultMessage("Add Product Subscription Resources")
    String pageTitleAddProductSubscriptionResources();
    @DefaultMessage("Add Product Supplier")
    String pageTitleAddProductSupplier();
    @DefaultMessage("Add Product Work Effort")
    String pageTitleAddProductWorkEffort();
    @DefaultMessage("Add Related Company")
    String pageTitleAddRelatedCompany();
    @DefaultMessage("Add Response")
    String pageTitleAddResponse();
    @DefaultMessage("Add Shipment Route Segment")
    String pageTitleAddShipmentRouteSegment();
    @DefaultMessage("Add Subscription Attributes")
    String pageTitleAddSubscriptionAttributes();
    @DefaultMessage("Add Subscription Comm Event")
    String pageTitleAddSubscriptionCommEvent();
    @DefaultMessage("Add Subscription Resource Products")
    String pageTitleAddSubscriptionResourceProducts();
    @DefaultMessage("Add Tax Authority Association")
    String pageTitleAddTaxAuthorityAssoc();
    @DefaultMessage("Add Tax Authority Product Category")
    String pageTitleAddTaxAuthorityCategory();
    @DefaultMessage("Add Tax Authority GL Account")
    String pageTitleAddTaxAuthorityGlAccount();
    @DefaultMessage("Add Tax Authority Product Rate")
    String pageTitleAddTaxAuthorityRateProduct();
    @DefaultMessage("Add Timesheet")
    String pageTitleAddTimesheet();
    @DefaultMessage("Add Timesheet Entries")
    String pageTitleAddTimesheetEntries();
    @DefaultMessage("Add Timesheet Roles")
    String pageTitleAddTimesheetRoles();
    @DefaultMessage("Add Timesheet To Invoice")
    String pageTitleAddTimesheetToInvoice();
    @DefaultMessage("Add Timesheet To New Invoice")
    String pageTitleAddTimesheetToNewInvoice();
    @DefaultMessage("Add Transaction Entry")
    String pageTitleAddTransactionEntry();
    @DefaultMessage("Add Vendor Product")
    String pageTitleAddVendorProduct();
    @DefaultMessage("Add Work Effort")
    String pageTitleAddWorkEffort();
    @DefaultMessage("Add Work Effort Assignment Rate")
    String pageTitleAddWorkEffortAssignmentRate();
    @DefaultMessage("Add Work Effort Communication Event")
    String pageTitleAddWorkEffortCommEvent();
    @DefaultMessage("Add Work Effort Event Reminder")
    String pageTitleAddWorkEffortEventReminder();
    @DefaultMessage("Add Work Effort Fixed Asset Assignment")
    String pageTitleAddWorkEffortFixedAssetAssign();
    @DefaultMessage("Add Work Effort Keyword")
    String pageTitleAddWorkEffortKeyword();
    @DefaultMessage("Add Work Effort Notes")
    String pageTitleAddWorkEffortNotes();
    @DefaultMessage("Add Order to Work Effort")
    String pageTitleAddWorkEffortOrderHeader();
    @DefaultMessage("Add Work Effort Party Assignment")
    String pageTitleAddWorkEffortPartyAssign();
    @DefaultMessage("Add Work Effort Quote")
    String pageTitleAddWorkEffortQuote();
    @DefaultMessage("Add Work Effort QuoteItem")
    String pageTitleAddWorkEffortQuoteItem();
    @DefaultMessage("Add Work Effort Request")
    String pageTitleAddWorkEffortRequest();
    @DefaultMessage("Add Work Effort RequestItem")
    String pageTitleAddWorkEffortRequestItem();
    @DefaultMessage("Add Work Effort Requirement")
    String pageTitleAddWorkEffortRequirement();
    @DefaultMessage("Add Work Effort Reviews")
    String pageTitleAddWorkEffortReviews();
    @DefaultMessage("Add Work Effort Shopping List")
    String pageTitleAddWorkEffortShopList();
    @DefaultMessage("Add Time Entry to Work Effort")
    String pageTitleAddWorkEffortTimeEntry();
    @DefaultMessage("Add Work Effort Time to Invoice")
    String pageTitleAddWorkEffortTimeToInvoice();
    @DefaultMessage("Add Work Effort Time to New Invoice")
    String pageTitleAddWorkEffortTimeToNewInvoice();
    @DefaultMessage("Additional Info")
    String pageTitleAdditionalInfo();
    @DefaultMessage("Address Match Map")
    String pageTitleAddressMatchMap();
    @DefaultMessage("Address Matches")
    String pageTitleAddressMatches();
    @DefaultMessage("Advanced Search")
    String pageTitleAdvancedSearch();
    @DefaultMessage("Apply Features From Category")
    String pageTitleApplyFeaturesFromCategory();
    @DefaultMessage("Approved Product Requirements")
    String pageTitleApprovedProductRequirements();
    @DefaultMessage("Approved Product Requirements By Vendor")
    String pageTitleApprovedProductRequirementsByVendor();
    @DefaultMessage("Batch Payments")
    String pageTitleBatchPayments();
    @DefaultMessage("Billing Information")
    String pageTitleBillingInformation();
    @DefaultMessage("Calendar Day")
    String pageTitleCalendarDay();
    @DefaultMessage("Calendar Month")
    String pageTitleCalendarMonth();
    @DefaultMessage("Calendar Upcoming")
    String pageTitleCalendarUpcoming();
    @DefaultMessage("Calendar Week")
    String pageTitleCalendarWeek();
    @DefaultMessage("Catalog Manager Main Page")
    String pageTitleCatalogManagerMainPage();
    @DefaultMessage("Category Page")
    String pageTitleCategoryPage();
    @DefaultMessage("Change Password")
    String pageTitleChangePassword();
    @DefaultMessage("Checkout Options")
    String pageTitleCheckoutOptions();
    @DefaultMessage("Checkout Review")
    String pageTitleCheckoutReview();
    @DefaultMessage("Choose Top Category")
    String pageTitleChooseTopCategory();
    @DefaultMessage("Communication Events")
    String pageTitleCommEvents();
    @DefaultMessage("Geo Location of requested element")
    String pageTitleCommonGeoLocation();
    @DefaultMessage("Content Page")
    String pageTitleContentPage();
    @DefaultMessage("Copy Agreement")
    String pageTitleCopyAgreement();
    @DefaultMessage("Create Category Attributes")
    String pageTitleCreateCategoryAttributes();
    @DefaultMessage("Create New Party Detail")
    String pageTitleCreateNewPartyDetail();
    @DefaultMessage("New Asset Usage")
    String pageTitleCreateProductAssetUsage();
    @DefaultMessage("Create Product Category")
    String pageTitleCreateProductCategory();
    @DefaultMessage("Create Product in Category - Check Existing")
    String pageTitleCreateProductCategoryCheckExisting();
    @DefaultMessage("Create Product Category Link")
    String pageTitleCreateProductCategoryLink();
    @DefaultMessage("Create Product in Category - Start")
    String pageTitleCreateProductCategoryStart();
    @DefaultMessage("Add Good Identifications")
    String pageTitleCreateProductGoodIdentifications();
    @DefaultMessage("Create a new Quote and QuoteItem for a CustRequest")
    String pageTitleCreateQuoteForCustRequest();
    @DefaultMessage("Create Simple Text Content For Alternate Locale")
    String pageTitleCreateSimpleTextContentForAlternateLocale();
    @DefaultMessage("Create Virtual with Variants")
    String pageTitleCreateVirtualWithVariants();
    @DefaultMessage("Create Timesheet for This Week")
    String pageTitleCreateWeekTimesheet();
    @DefaultMessage("Deposit Payments And Create Batch")
    String pageTitleDepositPaymentsAndCreateBatch();
    @DefaultMessage("Edit My Digital Product")
    String pageTitleDigitalProductEdit();
    @DefaultMessage("List My Digital Products")
    String pageTitleDigitalProductList();
    @DefaultMessage("Display Timesheet Entries")
    String pageTitleDisplayTimesheetEntries();
    @DefaultMessage("Edit/Add Content")
    String pageTitleEditAddContent();
    @DefaultMessage("Edit/Add Image")
    String pageTitleEditAddImage();
    @DefaultMessage("Edit Agreement")
    String pageTitleEditAgreement();
    @DefaultMessage("Edit Agreement Geographical Applic")
    String pageTitleEditAgreementGeographicalApplic();
    @DefaultMessage("Edit Agreement Item")
    String pageTitleEditAgreementItem();
    @DefaultMessage("Edit Agreement Item Party")
    String pageTitleEditAgreementItemParty();
    @DefaultMessage("Edit Agreement Item Product")
    String pageTitleEditAgreementItemProduct();
    @DefaultMessage("Edit Agreement Item Term")
    String pageTitleEditAgreementItemTerm();
    @DefaultMessage("Edit Agreement Promo Appl")
    String pageTitleEditAgreementPromoAppl();
    @DefaultMessage("Edit Agreement Term")
    String pageTitleEditAgreementTerm();
    @DefaultMessage("Edit Agreement Work Effort Applics")
    String pageTitleEditAgreementWorkEffortApplics();
    @DefaultMessage("Edit AVS Override")
    String pageTitleEditAvsOverride();
    @DefaultMessage("Edit Billing Account")
    String pageTitleEditBillingAccount();
    @DefaultMessage("Edit Billing Account Invoices")
    String pageTitleEditBillingAccountInvoices();
    @DefaultMessage("Edit Billing Account Orders")
    String pageTitleEditBillingAccountOrders();
    @DefaultMessage("Edit Billing Account Payments")
    String pageTitleEditBillingAccountPayments();
    @DefaultMessage("Edit Billing Account Roles")
    String pageTitleEditBillingAccountRoles();
    @DefaultMessage("Edit Billing Account Terms")
    String pageTitleEditBillingAccountTerms();
    @DefaultMessage("Edit Calendar")
    String pageTitleEditCalendar();
    @DefaultMessage("Edit Calendar Exception Day")
    String pageTitleEditCalendarExceptionDay();
    @DefaultMessage("Edit Calendar Exception Week")
    String pageTitleEditCalendarExceptionWeek();
    @DefaultMessage("Edit Week")
    String pageTitleEditCalendarWeek();
    @DefaultMessage("Edit Carrier Shipment Methods")
    String pageTitleEditCarrierShipmentMethods();
    @DefaultMessage("Edit Category")
    String pageTitleEditCategory();
    @DefaultMessage("Edit Product Category Attributes")
    String pageTitleEditCategoryAttributes();
    @DefaultMessage("Edit Category Content")
    String pageTitleEditCategoryContent();
    @DefaultMessage("Edit Category Content Content")
    String pageTitleEditCategoryContentContent();
    @DefaultMessage("Edit Category Feature Categories")
    String pageTitleEditCategoryFeatureCategories();
    @DefaultMessage("Edit Category Parties")
    String pageTitleEditCategoryParties();
    @DefaultMessage("Edit Category Product Catalogs")
    String pageTitleEditCategoryProductCatalogs();
    @DefaultMessage("Edit Category Products")
    String pageTitleEditCategoryProducts();
    @DefaultMessage("Edit Category Rollup")
    String pageTitleEditCategoryRollup();
    @DefaultMessage("Edit Comm Content")
    String pageTitleEditCommContent();
    @DefaultMessage("Edit Communication")
    String pageTitleEditCommunication();
    @DefaultMessage("Edit Config Item")
    String pageTitleEditConfigItem();
    @DefaultMessage("Edit Config Options")
    String pageTitleEditConfigOptions();
    @DefaultMessage("Edit Contact Mech")
    String pageTitleEditContactMech();
    @DefaultMessage("Edit Contact Mechanism")
    String pageTitleEditContactMechanism();
    @DefaultMessage("Edit Cost Calcs")
    String pageTitleEditCostCalcs();
    @DefaultMessage("Edit Credit Card")
    String pageTitleEditCreditCard();
    @DefaultMessage("Edit Data Source")
    String pageTitleEditDataSource();
    @DefaultMessage("Edit Data Source Type")
    String pageTitleEditDataSourceType();
    @DefaultMessage("Edit EFT Account")
    String pageTitleEditEFTAccount();
    @DefaultMessage("Edit EFT Account")
    String pageTitleEditEftAccount();
    @DefaultMessage("PageTitleEditFacilityContactMech")
    String pageTitleEditFacilityContactMech(String facility_facilityName, String facility_facilityId);
    @DefaultMessage("PageTitleEditFacilityContent")
    String pageTitleEditFacilityContent(String facility_facilityName, String facility_facilityId);
    @DefaultMessage("Edit Facility Group")
    String pageTitleEditFacilityGroup();
    @DefaultMessage("Edit Facility Group Members")
    String pageTitleEditFacilityGroupMembers();
    @DefaultMessage("Edit Facility Group Roles")
    String pageTitleEditFacilityGroupRoles();
    @DefaultMessage("Edit Facility Group Rollup")
    String pageTitleEditFacilityGroupRollup();
    @DefaultMessage("PageTitleEditFacilityGroups")
    String pageTitleEditFacilityGroups(String facility_facilityName, String facility_facilityId);
    @DefaultMessage("PageTitleEditFacilityInventoryItems")
    String pageTitleEditFacilityInventoryItems(String facility_facilityName, String facility_facilityId);
    @DefaultMessage("PageTitleEditFacilityLocation")
    String pageTitleEditFacilityLocation(String facility_facilityName, String facility_facilityId);
    @DefaultMessage("PageTitleEditFacilityParties")
    String pageTitleEditFacilityParties(String facility_facilityName, String facility_facilityId);
    @DefaultMessage("Edit Feature")
    String pageTitleEditFeature();
    @DefaultMessage("Edit Feature Category Features")
    String pageTitleEditFeatureCategoryFeatures();
    @DefaultMessage("Edit Feature InterAction")
    String pageTitleEditFeatureInterAction();
    @DefaultMessage("Edit Feature InterActions")
    String pageTitleEditFeatureInterActions();
    @DefaultMessage("Edit Feature Price")
    String pageTitleEditFeaturePrice();
    @DefaultMessage("Edit Feature Type")
    String pageTitleEditFeatureType();
    @DefaultMessage("Edit Feature Types")
    String pageTitleEditFeatureTypes();
    @DefaultMessage("Edit Financial Account")
    String pageTitleEditFinAccount();
    @DefaultMessage("Edit Financial Account Authority")
    String pageTitleEditFinAccountAuths();
    @DefaultMessage("Edit Financial Account Role")
    String pageTitleEditFinAccountRole();
    @DefaultMessage("Edit Financial Account Transaction")
    String pageTitleEditFinAccountTrans();
    @DefaultMessage("Edit Fixed Asset")
    String pageTitleEditFixedAsset();
    @DefaultMessage("Edit Fixed Asset Identifications")
    String pageTitleEditFixedAssetIdents();
    @DefaultMessage("Edit Fixed Asset Maint Orders")
    String pageTitleEditFixedAssetMaintOrders();
    @DefaultMessage("Edit Fixed Asset Maintenance")
    String pageTitleEditFixedAssetMaintenance();
    @DefaultMessage("Fixed Asset Meter Readings")
    String pageTitleEditFixedAssetMeters();
    @DefaultMessage("Edit Fixed Asset Registrations")
    String pageTitleEditFixedAssetRegistrations();
    @DefaultMessage("Edit Fixed Asset Standard Cost")
    String pageTitleEditFixedAssetStdCosts();
    @DefaultMessage("Edit Forum Content Info")
    String pageTitleEditForumContentInfo();
    @DefaultMessage("Edit Gift Card")
    String pageTitleEditGiftCard();
    @DefaultMessage("Edit GL Account")
    String pageTitleEditGlAccount();
    @DefaultMessage("Edit Global GL Account")
    String pageTitleEditGlobalGlAccount();
    @DefaultMessage("Edit Group Information")
    String pageTitleEditGroupInformation();
    @DefaultMessage("Edit Inventory Item")
    String pageTitleEditInventoryItem();
    @DefaultMessage("Edit Inventory Item Label Appls")
    String pageTitleEditInventoryItemLabelAppls();
    @DefaultMessage("Edit Inventory Item Label Types")
    String pageTitleEditInventoryItemLabelTypes();
    @DefaultMessage("Edit Inventory Item Labels")
    String pageTitleEditInventoryItemLabels();
    @DefaultMessage("Edit Invoice")
    String pageTitleEditInvoice();
    @DefaultMessage("Edit Issuer Provisions")
    String pageTitleEditIssuerProvisions();
    @DefaultMessage("Edit Fixed Assets")
    String pageTitleEditMachine();
    @DefaultMessage("Edit Fixed Asset Group")
    String pageTitleEditMachineGroup();
    @DefaultMessage("Edit Order Header")
    String pageTitleEditOrderHeader();
    @DefaultMessage("Edit Party Attribute")
    String pageTitleEditPartyAttribute();
    @DefaultMessage("Edit Party Classification Group")
    String pageTitleEditPartyClassificationGroup();
    @DefaultMessage("Edit Classification Group Parties")
    String pageTitleEditPartyClassificationGroupParties();
    @DefaultMessage("Edit Party Fixed Asset Assignments")
    String pageTitleEditPartyFixedAssetAssignments();
    @DefaultMessage("Edit Party Gl Accounts")
    String pageTitleEditPartyGlAccounts();
    @DefaultMessage("Edit Party Invitation GroupAssoc")
    String pageTitleEditPartyInvitationGroupAssoc();
    @DefaultMessage("Edit Party Invitation RoleAssoc")
    String pageTitleEditPartyInvitationRoleAssoc();
    @DefaultMessage("Edit Party Rates")
    String pageTitleEditPartyRates();
    @DefaultMessage("Edit Party Relationships")
    String pageTitleEditPartyRelationships();
    @DefaultMessage("Edit Party Tax Authority Info")
    String pageTitleEditPartyTaxAuthInfos();
    @DefaultMessage("Edit Payment")
    String pageTitleEditPayment();
    @DefaultMessage("Edit Person")
    String pageTitleEditPerson();
    @DefaultMessage("Edit Personal Information")
    String pageTitleEditPersonalInformation();
    @DefaultMessage("Edit Product")
    String pageTitleEditProduct();
    @DefaultMessage("Edit Product Asset Usage")
    String pageTitleEditProductAssetUsage();
    @DefaultMessage("Edit Product Associations")
    String pageTitleEditProductAssociations();
    @DefaultMessage("Edit Product Attributes")
    String pageTitleEditProductAttributes();
    @DefaultMessage("Edit Product Bom")
    String pageTitleEditProductBom();
    @DefaultMessage("Edit Product Catalog")
    String pageTitleEditProductCatalog();
    @DefaultMessage("Edit Product Catalog Categories")
    String pageTitleEditProductCatalogCategories();
    @DefaultMessage("Edit Product Catalog Parties")
    String pageTitleEditProductCatalogParties();
    @DefaultMessage("Edit Product Catalog Stores")
    String pageTitleEditProductCatalogStores();
    @DefaultMessage("Edit Product Categories")
    String pageTitleEditProductCategories();
    @DefaultMessage("Edit Product Category Link")
    String pageTitleEditProductCategoryLink();
    @DefaultMessage("Edit Product Config Item Content")
    String pageTitleEditProductConfigItemContent();
    @DefaultMessage("Edit Product Configs")
    String pageTitleEditProductConfigs();
    @DefaultMessage("Edit Product Content")
    String pageTitleEditProductContent();
    @DefaultMessage("Edit Product Costs")
    String pageTitleEditProductCosts();
    @DefaultMessage("Edit Product Facilities")
    String pageTitleEditProductFacilities();
    @DefaultMessage("Edit Product Facility Locations")
    String pageTitleEditProductFacilityLocations();
    @DefaultMessage("Edit Product Feature Categories")
    String pageTitleEditProductFeatureCategories();
    @DefaultMessage("Edit Feature Groups")
    String pageTitleEditProductFeatureGroups();
    @DefaultMessage("Edit Product Feature Interactions")
    String pageTitleEditProductFeatureInteractions();
    @DefaultMessage("Edit Product Features")
    String pageTitleEditProductFeatures();
    @DefaultMessage("Edit Product Geos")
    String pageTitleEditProductGeos();
    @DefaultMessage("Edit Product GL Accounts")
    String pageTitleEditProductGlAccounts();
    @DefaultMessage("Edit Product Good Identifications")
    String pageTitleEditProductGoodIdentifications();
    @DefaultMessage("Edit Product Inventory Items")
    String pageTitleEditProductInventoryItems();
    @DefaultMessage("Edit Product Keywords")
    String pageTitleEditProductKeywords();
    @DefaultMessage("Edit Product Maintenance")
    String pageTitleEditProductMaintenance();
    @DefaultMessage("Product Manufacturing Rules")
    String pageTitleEditProductManufacturingRules();
    @DefaultMessage("Edit Product Meter")
    String pageTitleEditProductMeter();
    @DefaultMessage("Edit Product Meters")
    String pageTitleEditProductMeters();
    @DefaultMessage("Edit Product Parties")
    String pageTitleEditProductParties();
    @DefaultMessage("Edit Product Payment Method Type")
    String pageTitleEditProductPaymentMethodType();
    @DefaultMessage("Edit Product Price Rules")
    String pageTitleEditProductPriceRules();
    @DefaultMessage("Edit Product Prices")
    String pageTitleEditProductPrices();
    @DefaultMessage("Edit Product Promo Content")
    String pageTitleEditProductPromoContent();
    @DefaultMessage("Edit Promo Rules")
    String pageTitleEditProductPromoRules();
    @DefaultMessage("Edit Product Promo Stores")
    String pageTitleEditProductPromoStores();
    @DefaultMessage("Edit Product Promos")
    String pageTitleEditProductPromos();
    @DefaultMessage("Edit Product Promotion Code")
    String pageTitleEditProductPromotionCode();
    @DefaultMessage("Edit Product Quick Admin")
    String pageTitleEditProductQuickAdmin();
    @DefaultMessage("Edit Product Store")
    String pageTitleEditProductStore();
    @DefaultMessage("Edit Product Store Catalogs")
    String pageTitleEditProductStoreCatalogs();
    @DefaultMessage("Edit Product Store Email Setup")
    String pageTitleEditProductStoreEmailSetup();
    @DefaultMessage("Edit Product Store Financial Account Settings")
    String pageTitleEditProductStoreFinAccountSettings();
    @DefaultMessage("Edit Product Store Keyword Ovrd")
    String pageTitleEditProductStoreKeywordOvrd();
    @DefaultMessage("Edit Product Store List")
    String pageTitleEditProductStoreList();
    @DefaultMessage("Edit Product Store Payment Setup")
    String pageTitleEditProductStorePaySetup();
    @DefaultMessage("Edit Product Store Promos")
    String pageTitleEditProductStorePromos();
    @DefaultMessage("Edit Product Store Roles")
    String pageTitleEditProductStoreRoles();
    @DefaultMessage("Edit Product Store Ship Setup")
    String pageTitleEditProductStoreShipSetup();
    @DefaultMessage("Edit Product Store Shipment Cost Estimates")
    String pageTitleEditProductStoreShipmentCostEstimates();
    @DefaultMessage("Edit Product Store Surveys")
    String pageTitleEditProductStoreSurveys();
    @DefaultMessage("Edit Product Store Tax Setup")
    String pageTitleEditProductStoreTaxSetup();
    @DefaultMessage("Edit Product Store Vendor Payments")
    String pageTitleEditProductStoreVendorPayments();
    @DefaultMessage("Edit Product Store Vendor Shipments")
    String pageTitleEditProductStoreVendorShipments();
    @DefaultMessage("Edit Product Store Web Sites")
    String pageTitleEditProductStoreWebSites();
    @DefaultMessage("Edit Product Subscription Resources")
    String pageTitleEditProductSubscriptionResources();
    @DefaultMessage("Edit Product Work Effort")
    String pageTitleEditProductWorkEffort();
    @DefaultMessage("Edit Quantity Breaks")
    String pageTitleEditQuantityBreaks();
    @DefaultMessage("Edit a QuoteItem For a CustRequest")
    String pageTitleEditQuoteItemForCustRequest();
    @DefaultMessage("Edit Request Content")
    String pageTitleEditRequestContent();
    @DefaultMessage("Edit a Request Item")
    String pageTitleEditRequestItem();
    @DefaultMessage("Edit a Request Item WorkEffort")
    String pageTitleEditRequestItemWorkEffort();
    @DefaultMessage("Edit Request Roles")
    String pageTitleEditRequestRoles();
    @DefaultMessage("Edit Requirement")
    String pageTitleEditRequirement();
    @DefaultMessage("Edit Requirement Role")
    String pageTitleEditRequirementRole();
    @DefaultMessage("Edit Routing")
    String pageTitleEditRouting();
    @DefaultMessage("Edit Routing-Product Link")
    String pageTitleEditRoutingProductLink();
    @DefaultMessage("Edit Routing Task")
    String pageTitleEditRoutingTask();
    @DefaultMessage("Edit Routing Task Association")
    String pageTitleEditRoutingTaskAssoc();
    @DefaultMessage("Edit Routing Task Costs")
    String pageTitleEditRoutingTaskCosts();
    @DefaultMessage("Edit Routing Task-Fixed Asset Association")
    String pageTitleEditRoutingTaskFixedAsset();
    @DefaultMessage("Edit Routing Task Product")
    String pageTitleEditRoutingTaskProduct();
    @DefaultMessage("Edit Security Group")
    String pageTitleEditSecurityGroup();
    @DefaultMessage("Edit Security Group Permissions")
    String pageTitleEditSecurityGroupPermissions();
    @DefaultMessage("Edit Security Group UserLogins")
    String pageTitleEditSecurityGroupUserLogins();
    @DefaultMessage("Edit Shipment Items")
    String pageTitleEditShipmentItems();
    @DefaultMessage("Edit Shipment Method Types")
    String pageTitleEditShipmentMethodTypes();
    @DefaultMessage("Edit Shipment Packages")
    String pageTitleEditShipmentPackages();
    @DefaultMessage("Edit Shipment Plan")
    String pageTitleEditShipmentPlan();
    @DefaultMessage("Edit Shipment Route Segments")
    String pageTitleEditShipmentRouteSegments();
    @DefaultMessage("Edit Subscription")
    String pageTitleEditSubscription();
    @DefaultMessage("Edit Subscription Attributes")
    String pageTitleEditSubscriptionAttributes();
    @DefaultMessage("Edit Subscription Communication Event")
    String pageTitleEditSubscriptionCommEvent();
    @DefaultMessage("Edit Subscription Resource")
    String pageTitleEditSubscriptionResource();
    @DefaultMessage("Edit Subscription Resource Products")
    String pageTitleEditSubscriptionResourceProducts();
    @DefaultMessage("Edit Supplier Product")
    String pageTitleEditSupplierProduct();
    @DefaultMessage("Edit Tax Authority")
    String pageTitleEditTaxAuthority();
    @DefaultMessage("Edit Tax Authority Associations")
    String pageTitleEditTaxAuthorityAssocs();
    @DefaultMessage("Edit Tax Authority Product Categories")
    String pageTitleEditTaxAuthorityCategories();
    @DefaultMessage("Edit Tax Authority GL Accounts")
    String pageTitleEditTaxAuthorityGlAccounts();
    @DefaultMessage("Edit Tax Authority Party Info")
    String pageTitleEditTaxAuthorityPartyInfo();
    @DefaultMessage("Edit Tax Authority Product Rates")
    String pageTitleEditTaxAuthorityRateProducts();
    @DefaultMessage("Edit Timesheet")
    String pageTitleEditTimesheet();
    @DefaultMessage("Edit Timesheet Entries")
    String pageTitleEditTimesheetEntries();
    @DefaultMessage("Edit Timesheet Roles")
    String pageTitleEditTimesheetRoles();
    @DefaultMessage("Edit Transaction")
    String pageTitleEditTransaction();
    @DefaultMessage("Edit Transaction Entries")
    String pageTitleEditTransactionEntries();
    @DefaultMessage("Edit UserLogin Security Groups")
    String pageTitleEditUserLoginSecurityGroups();
    @DefaultMessage("Edit Vendor Product")
    String pageTitleEditVendorProduct();
    @DefaultMessage("Edit Web Analytics Configuration")
    String pageTitleEditWebAnalyticsConfigs();
    @DefaultMessage("Edit Web Analytics Types")
    String pageTitleEditWebAnalyticsTypes();
    @DefaultMessage("Edit Work Effort")
    String pageTitleEditWorkEffort();
    @DefaultMessage("Edit Work Effort Assoc")
    String pageTitleEditWorkEffortAssoc();
    @DefaultMessage("Edit Work Effort CommEvent")
    String pageTitleEditWorkEffortCommEvent();
    @DefaultMessage("Edit Work Effort Contact Mechs")
    String pageTitleEditWorkEffortContactMechs();
    @DefaultMessage("Work Effort Content")
    String pageTitleEditWorkEffortContent();
    @DefaultMessage("Work Effort Good Standards")
    String pageTitleEditWorkEffortGoodStandards();
    @DefaultMessage("Edit Work Effort Party Assignment")
    String pageTitleEditWorkEffortPartyAssign();
    @DefaultMessage("Edit Work Effort Quote")
    String pageTitleEditWorkEffortQuote();
    @DefaultMessage("Edit Work Effort QuoteItem")
    String pageTitleEditWorkEffortQuoteItem();
    @DefaultMessage("Edit Work Effort Request")
    String pageTitleEditWorkEffortRequest();
    @DefaultMessage("Edit Work Effort RequestItem")
    String pageTitleEditWorkEffortRequestItem();
    @DefaultMessage("Edit Work Effort Requirement")
    String pageTitleEditWorkEffortRequirement();
    @DefaultMessage("Facility Geo Location")
    String pageTitleFacilityGeoLocation();
    @DefaultMessage("Facility Location GeoLocation")
    String pageTitleFacilityLocationGeoLocation();
    @DefaultMessage("Field lookup")
    String pageTitleFieldLookup();
    @DefaultMessage("Financial Account Summary")
    String pageTitleFinancialAccountSummary();
    @DefaultMessage("Financial Summary Report Options")
    String pageTitleFinancialSummaryReportOptions();
    @DefaultMessage("Find Agreements")
    String pageTitleFindAgreement();
    @DefaultMessage("Find Agreement Roles")
    String pageTitleFindAgreementRoles();
    @DefaultMessage("Find Approved Product Requirements")
    String pageTitleFindApprovedProductRequirements();
    @DefaultMessage("Find Approved Requirements By Supplier")
    String pageTitleFindApprovedRequirementsBySupplier();
    @DefaultMessage("Find Billing Account(s)")
    String pageTitleFindBillingAccount();
    @DefaultMessage("Find Bill Of Materials")
    String pageTitleFindBom();
    @DefaultMessage("Find Calendar")
    String pageTitleFindCalendar();
    @DefaultMessage("Find Communications")
    String pageTitleFindCommunicationEvents();
    @DefaultMessage("Find Config Items")
    String pageTitleFindConfigItems();
    @DefaultMessage("Find Facility")
    String pageTitleFindFacility();
    @DefaultMessage("Find Facility Group")
    String pageTitleFindFacilityGroup();
    @DefaultMessage("PageTitleFindFacilityInventoryItems")
    String pageTitleFindFacilityInventoryItems(String facility_facilityName, String facility_facilityId);
    @DefaultMessage("Find Facility Inventory Items by Product")
    String pageTitleFindFacilityInventoryItemsByProduct();
    @DefaultMessage("PageTitleFindFacilityLocation")
    String pageTitleFindFacilityLocation(String facility_facilityName, String facility_facilityId);
    @DefaultMessage("Find Facility Physical Inventory")
    String pageTitleFindFacilityPhysicalInventory();
    @DefaultMessage("Find Facility Transfers")
    String pageTitleFindFacilityTransfers();
    @DefaultMessage("Find Financial Account")
    String pageTitleFindFinAccount();
    @DefaultMessage("PageTitleFindFinAccountReconciliations")
    String pageTitleFindFinAccountReconciliations(String finAccount_finAccountName, String finAccountId);
    @DefaultMessage("PageTitleFindFinAccountTrans")
    String pageTitleFindFinAccountTrans(String finAccount_finAccountName, String finAccountId);
    @DefaultMessage("Find Gateway Responses")
    String pageTitleFindGatewayResponses();
    @DefaultMessage("Find Gl Account")
    String pageTitleFindGlAccount();
    @DefaultMessage("Find Global GL Account")
    String pageTitleFindGlobalGlAccount();
    @DefaultMessage("Find Inventory Event Planned")
    String pageTitleFindInventoryEventPlan();
    @DefaultMessage("Find Inventory Item Labels")
    String pageTitleFindInventoryItemLabels();
    @DefaultMessage("Find Invoice")
    String pageTitleFindInvoice();
    @DefaultMessage("Find Fixed Asset Group")
    String pageTitleFindMachineGroup();
    @DefaultMessage("Find Matches")
    String pageTitleFindMatches();
    @DefaultMessage("Find Not Approved Requirements")
    String pageTitleFindNotApprovedRequirements();
    @DefaultMessage("Find Party(s)")
    String pageTitleFindParty();
    @DefaultMessage("Find Party Classification Groups")
    String pageTitleFindPartyClassificationGroups();
    @DefaultMessage("Find Party Invitation")
    String pageTitleFindPartyInvitation();
    @DefaultMessage("Find Payment")
    String pageTitleFindPayment();
    @DefaultMessage("Find Payment Gateway Config")
    String pageTitleFindPaymentGatewayConfig();
    @DefaultMessage("Find Payment Gateway Config Types")
    String pageTitleFindPaymentGatewayConfigTypes();
    @DefaultMessage("Find Product Catalog")
    String pageTitleFindProductCatalog();
    @DefaultMessage("Find Product Price Rule")
    String pageTitleFindProductPriceRule();
    @DefaultMessage("Find Product Promos")
    String pageTitleFindProductPromos();
    @DefaultMessage("Find Product Promotion Code")
    String pageTitleFindProductPromotionCode();
    @DefaultMessage("Find Product Stocktake")
    String pageTitleFindProductStocktake();
    @DefaultMessage("Find Product Store Roles")
    String pageTitleFindProductStoreRoles();
    @DefaultMessage("Quick Return")
    String pageTitleFindQuickReturn();
    @DefaultMessage("Find Requirements")
    String pageTitleFindRequirements();
    @DefaultMessage("Find Return")
    String pageTitleFindReturn();
    @DefaultMessage("Find Routing")
    String pageTitleFindRouting();
    @DefaultMessage("Find - Edit Routing Task")
    String pageTitleFindRoutingTask();
    @DefaultMessage("Find Security Group")
    String pageTitleFindSecurityGroup();
    @DefaultMessage("Find Shipment Gateway Config")
    String pageTitleFindShipmentGatewayConfig();
    @DefaultMessage("Find Shipment Gateway Config Types")
    String pageTitleFindShipmentGatewayConfigTypes();
    @DefaultMessage("Find Subscription")
    String pageTitleFindSubscription();
    @DefaultMessage("Find Subscription Resource")
    String pageTitleFindSubscriptionResource();
    @DefaultMessage("Find Tax Authority")
    String pageTitleFindTaxAuthority();
    @DefaultMessage("Find Timesheet")
    String pageTitleFindTimesheet();
    @DefaultMessage("Find Web Analytics Configuration")
    String pageTitleFindWebAnalyticsConfigs();
    @DefaultMessage("Find Web Analytics Types")
    String pageTitleFindWebAnalyticsTypes();
    @DefaultMessage("Find Work Effort")
    String pageTitleFindWorkEffort();
    @DefaultMessage("Fixed Asset Depreciation Method")
    String pageTitleFixedAssetDepreciationMethod();
    @DefaultMessage("Fixed Asset Depreciation Report")
    String pageTitleFixedAssetDepreciationReport();
    @DefaultMessage("Fixed Asset Geo Location")
    String pageTitleFixedAssetGeoLocation();
    @DefaultMessage("Global Mappings")
    String pageTitleFixedAssetGlobalMappings();
    @DefaultMessage("Fixed Asset Mappings")
    String pageTitleFixedAssetMappings();
    @DefaultMessage("Forum Article")
    String pageTitleForumArticle();
    @DefaultMessage("Forum Response")
    String pageTitleForumResponse();
    @DefaultMessage("Forum Summary")
    String pageTitleForumSummary();
    @DefaultMessage("Gift Card Balance")
    String pageTitleGiftCardBalance();
    @DefaultMessage("Gift Card Link")
    String pageTitleGiftCardLink();
    @DefaultMessage("Import Certificate")
    String pageTitleImportCertificate();
    @DefaultMessage("Inventory Issue Summary")
    String pageTitleInventoryIssueSummary();
    @DefaultMessage("PageTitleInventoryItemGrandTotals")
    String pageTitleInventoryItemGrandTotals(String facility_facilityName, String facility_facilityId);
    @DefaultMessage("Invoice Overview")
    String pageTitleInvoiceOverview();
    @DefaultMessage("Label Printing")
    String pageTitleLabelPrinting();
    @DefaultMessage("Last View Products")
    String pageTitleLastViewProducts();
    @DefaultMessage("List Accounts")
    String pageTitleListAccounts();
    @DefaultMessage("List Agreement")
    String pageTitleListAgreement();
    @DefaultMessage("List Agreement Geographical Applic")
    String pageTitleListAgreementGeographicalApplic();
    @DefaultMessage("List Agreement Item Parties")
    String pageTitleListAgreementItemParties();
    @DefaultMessage("List Agreement Item Products")
    String pageTitleListAgreementItemProducts();
    @DefaultMessage("List Agreement Item Terms")
    String pageTitleListAgreementItemTerms();
    @DefaultMessage("List Agreement Items")
    String pageTitleListAgreementItems();
    @DefaultMessage("List Agreement Promo Appls")
    String pageTitleListAgreementPromoAppls();
    @DefaultMessage("List Agreement Roles")
    String pageTitleListAgreementRoles();
    @DefaultMessage("List Agreement Terms")
    String pageTitleListAgreementTerms();
    @DefaultMessage("List Associated Content Infos")
    String pageTitleListAssociatedContentInfos();
    @DefaultMessage("List of weeks")
    String pageTitleListCalendarWeek();
    @DefaultMessage("List Carrier Shipment Methods")
    String pageTitleListCarrierShipmentMethods();
    @DefaultMessage("List Comm Customer Requests")
    String pageTitleListCommCustRequests();
    @DefaultMessage("List Comm WorkEfforts")
    String pageTitleListCommWorkEfforts();
    @DefaultMessage("List Communications")
    String pageTitleListCommunications();
    @DefaultMessage("List Communications of related parties")
    String pageTitleListCommunicationsRelatedParties();
    @DefaultMessage("List Data Source")
    String pageTitleListDataSource();
    @DefaultMessage("List Data Source Type")
    String pageTitleListDataSourceType();
    @DefaultMessage("List Edit Invoice Applications")
    String pageTitleListEditInvoiceApplications();
    @DefaultMessage("List Product Feature Interactions")
    String pageTitleListFeatureInteractions();
    @DefaultMessage("List Fin Account Auths")
    String pageTitleListFinAccountAuths();
    @DefaultMessage("List Fin Account Roles")
    String pageTitleListFinAccountRoles();
    @DefaultMessage("List Fin Account Trans")
    String pageTitleListFinAccountTrans();
    @DefaultMessage("Fixed Asset Children")
    String pageTitleListFixedAssetChildren();
    @DefaultMessage("List Fixed Asset Idents")
    String pageTitleListFixedAssetIdents();
    @DefaultMessage("List Fixed Asset Maint Orders")
    String pageTitleListFixedAssetMaintOrders();
    @DefaultMessage("List Fixed Asset Maints")
    String pageTitleListFixedAssetMaints();
    @DefaultMessage("List Fixed Asset Maint Meters")
    String pageTitleListFixedAssetMeters();
    @DefaultMessage("List Fixed Asset Products")
    String pageTitleListFixedAssetProducts();
    @DefaultMessage("List Fixed Asset Registrations")
    String pageTitleListFixedAssetRegistrations();
    @DefaultMessage("List Fixed Asset Standard Costs")
    String pageTitleListFixedAssetStdCosts();
    @DefaultMessage("List Fixed Assets")
    String pageTitleListFixedAssets();
    @DefaultMessage("List Invoice Roles")
    String pageTitleListInvoiceRoles();
    @DefaultMessage("List Invoice TimeEntries")
    String pageTitleListInvoiceTimeEntries();
    @DefaultMessage("List Invoices")
    String pageTitleListInvoices();
    @DefaultMessage("List Order Headers")
    String pageTitleListOrderHeaders();
    @DefaultMessage("List Party Fixed Asset Assignments")
    String pageTitleListPartyFixedAssetAssignments();
    @DefaultMessage("List Identification Number")
    String pageTitleListPartyIdentifications();
    @DefaultMessage("List Payment Applications")
    String pageTitleListPaymentApplications();
    @DefaultMessage("List Product Feature Appl Attrs")
    String pageTitleListProductFeatureApplAttrs();
    @DefaultMessage("List Product Feature Types")
    String pageTitleListProductFeatureTypes();
    @DefaultMessage("List Product Store Financial Account Settings")
    String pageTitleListProductStoreFinAccountSettings();
    @DefaultMessage("List Product Store Payment Setup")
    String pageTitleListProductStorePaySetup();
    @DefaultMessage("List Product Store Vendor Payments")
    String pageTitleListProductStoreVendorPayments();
    @DefaultMessage("List Product Store Vendor Shipments")
    String pageTitleListProductStoreVendorShipments();
    @DefaultMessage("List Quantity Breaks")
    String pageTitleListQuantityBreaks();
    @DefaultMessage("List Quotes")
    String pageTitleListQuotes();
    @DefaultMessage("List Requests")
    String pageTitleListRequests();
    @DefaultMessage("List Requirement Cust Requests")
    String pageTitleListRequirementCustRequests();
    @DefaultMessage("List Requirement Orders")
    String pageTitleListRequirementOrders();
    @DefaultMessage("List Requirement Roles")
    String pageTitleListRequirementRoles();
    @DefaultMessage("List Routing Task Assoc")
    String pageTitleListRoutingTaskAssoc();
    @DefaultMessage("Edit Routing Task Products")
    String pageTitleListRoutingTaskProducts();
    @DefaultMessage("Edit Routing Task Routings")
    String pageTitleListRoutingTaskRoutings();
    @DefaultMessage("List Shipment Method Types")
    String pageTitleListShipmentMethodTypes();
    @DefaultMessage("List Tax Authority Parties")
    String pageTitleListTaxAuthorityParties();
    @DefaultMessage("Communications from Unknown origin")
    String pageTitleListUnknownPartyComms();
    @DefaultMessage("Work Effort Assignment Rates")
    String pageTitleListWorkEffortAssignmentRates();
    @DefaultMessage("Work Effort Communication Events")
    String pageTitleListWorkEffortCommEvents();
    @DefaultMessage("Work Effort Event Reminders")
    String pageTitleListWorkEffortEventReminders();
    @DefaultMessage("Work Effort Fixed Asset Assignments")
    String pageTitleListWorkEffortFixedAssetAssigns();
    @DefaultMessage("Work Effort Keywords")
    String pageTitleListWorkEffortKeyword();
    @DefaultMessage("Work Effort Notes")
    String pageTitleListWorkEffortNotes();
    @DefaultMessage("Work Effort Orders")
    String pageTitleListWorkEffortOrderHeaders();
    @DefaultMessage("Work Effort Party Assignments")
    String pageTitleListWorkEffortPartyAssigns();
    @DefaultMessage("Work Effort Quotes")
    String pageTitleListWorkEffortQuotes();
    @DefaultMessage("Work Effort Requests")
    String pageTitleListWorkEffortRequests();
    @DefaultMessage("Work Effort Requirements")
    String pageTitleListWorkEffortRequirements();
    @DefaultMessage("Work Effort Reviews")
    String pageTitleListWorkEffortReviews();
    @DefaultMessage("Work Effort Shopping Lists")
    String pageTitleListWorkEffortShopLists();
    @DefaultMessage("Work Effort Time Entries")
    String pageTitleListWorkEffortTimeEntries();
    @DefaultMessage("Work Efforts")
    String pageTitleListWorkEfforts();
    @DefaultMessage("Login")
    String pageTitleLogin();
    @DefaultMessage("Lookup Billing Account by Name")
    String pageTitleLookupBillingAccount();
    @DefaultMessage("Bulk Add Product")
    String pageTitleLookupBulkAddProduct();
    @DefaultMessage("Bulk Add Supplier Product")
    String pageTitleLookupBulkAddSupplierProduct();
    @DefaultMessage("Lookup Customer Request")
    String pageTitleLookupCustomerRequest();
    @DefaultMessage("Lookup Customer Request Item")
    String pageTitleLookupCustomerRequestItem();
    @DefaultMessage("Lookup Facility")
    String pageTitleLookupFacility();
    @DefaultMessage("Lookup Fixed Asset")
    String pageTitleLookupFixedAsset();
    @DefaultMessage("Lookup GL Account")
    String pageTitleLookupGlAccount();
    @DefaultMessage("Lookup Order Header")
    String pageTitleLookupOrderHeader();
    @DefaultMessage("Lookup Order Header and Ship Info")
    String pageTitleLookupOrderHeaderAndShipInfo();
    @DefaultMessage("Lookup Product")
    String pageTitleLookupProduct();
    @DefaultMessage("Lookup Product Category")
    String pageTitleLookupProductCategory();
    @DefaultMessage("Lookup Product Feature")
    String pageTitleLookupProductFeature();
    @DefaultMessage("Lookup Product And Price")
    String pageTitleLookupProductPrice();
    @DefaultMessage("Lookup Product Store")
    String pageTitleLookupProductStore();
    @DefaultMessage("Lookup Variant Product")
    String pageTitleLookupProductVariant();
    @DefaultMessage("Lookup Virtual Product")
    String pageTitleLookupProductVirtual();
    @DefaultMessage("Lookup Purchase Order Header and Ship Info")
    String pageTitleLookupPurchaseOrderHeaderAndShipInfo();
    @DefaultMessage("Lookup Quote")
    String pageTitleLookupQuote();
    @DefaultMessage("Lookup Quote Item")
    String pageTitleLookupQuoteItem();
    @DefaultMessage("Lookup Requirement")
    String pageTitleLookupRequirement();
    @DefaultMessage("Lookup Routing")
    String pageTitleLookupRouting();
    @DefaultMessage("Lookup RoutingTask")
    String pageTitleLookupRoutingTask();
    @DefaultMessage("Lookup Shopping List")
    String pageTitleLookupShoppingList();
    @DefaultMessage("Lookup Product for supplier:")
    String pageTitleLookupSupplierProduct();
    @DefaultMessage("Lookup Timesheet by Name")
    String pageTitleLookupTimesheet();
    @DefaultMessage("Lookup Virtual Products")
    String pageTitleLookupVirtualProducts();
    @DefaultMessage("Lookup WorkEffort by Name")
    String pageTitleLookupWorkEffort();
    @DefaultMessage("Main Page")
    String pageTitleMain();
    @DefaultMessage("Message Detail")
    String pageTitleMessageDetail();
    @DefaultMessage("Message List")
    String pageTitleMessageList();
    @DefaultMessage("New Customer")
    String pageTitleNewCustomer();
    @DefaultMessage("PageTitleNewFacilityContactMech")
    String pageTitleNewFacilityContactMech(String facility_facilityName, String facility_facilityId);
    @DefaultMessage("PageTitleNewFacilityLocation")
    String pageTitleNewFacilityLocation(String facility_facilityName, String facility_facilityId);
    @DefaultMessage("New Message")
    String pageTitleNewMessage();
    @DefaultMessage("New Party Note")
    String pageTitleNewPartyNote();
    @DefaultMessage("Order Agreements")
    String pageTitleOrderAgreements();
    @DefaultMessage("Order Backorder Notice")
    String pageTitleOrderBackorderNotice();
    @DefaultMessage("Order Change Notice")
    String pageTitleOrderChangeNotice();
    @DefaultMessage("Order Complete Notice")
    String pageTitleOrderCompleteNotice();
    @DefaultMessage("Order Confirmation")
    String pageTitleOrderConfirmation();
    @DefaultMessage("Order Confirmation Notice")
    String pageTitleOrderConfirmationNotice();
    @DefaultMessage("Order History")
    String pageTitleOrderHistory();
    @DefaultMessage("Order Initialization")
    String pageTitleOrderInits();
    @DefaultMessage("Payment Retry Notice")
    String pageTitleOrderPaymentRetryNotice();
    @DefaultMessage("Show Cart")
    String pageTitleOrderShowCart();
    @DefaultMessage("Order Status")
    String pageTitleOrderStatus();
    @DefaultMessage("Order Summary - Thank you for your order!")
    String pageTitleOrderSummary();
    @DefaultMessage("Package Shipment Scheduling")
    String pageTitlePackageShipmentScheduling();
    @DefaultMessage("Edit Party Carrier Account")
    String pageTitlePartyCarrierAccount();
    @DefaultMessage("Party GeoLocation")
    String pageTitlePartyGeoLocation();
    @DefaultMessage("Party Invitation")
    String pageTitlePartyInvitation();
    @DefaultMessage("Payments By Method Summary")
    String pageTitlePaymentByMethodSummary();
    @DefaultMessage("Payment Overview")
    String pageTitlePaymentOverview();
    @DefaultMessage("Pending Communications")
    String pageTitlePendingCommunications();
    @DefaultMessage("Pick List")
    String pageTitlePickList();
    @DefaultMessage("Pick List Options")
    String pageTitlePickListOptions();
    @DefaultMessage("Picking : Move Stock")
    String pageTitlePickingMoveStock();
    @DefaultMessage("Picking : View Started Picks")
    String pageTitlePickingViewStartedPicks();
    @DefaultMessage("Product Export")
    String pageTitleProductExport();
    @DefaultMessage("Product Page")
    String pageTitleProductPage();
    @DefaultMessage("Product Review")
    String pageTitleProductReview();
    @DefaultMessage("Product Stocktake")
    String pageTitleProductStocktake();
    @DefaultMessage("Profile Survey")
    String pageTitleProfileSurvey();
    @DefaultMessage("Project Information")
    String pageTitleProjectInformation();
    @DefaultMessage("Quick Add")
    String pageTitleQuickAdd();
    @DefaultMessage("Quick Add Product Variants")
    String pageTitleQuickAddProductVariants();
    @DefaultMessage("Request Item Notes")
    String pageTitleRequestItemNotes();
    @DefaultMessage("Request Item Quotes")
    String pageTitleRequestItemQuotes();
    @DefaultMessage("Request Item Requirements")
    String pageTitleRequestItemRequirements();
    @DefaultMessage("Request Items")
    String pageTitleRequestItems();
    @DefaultMessage("Request Return")
    String pageTitleRequestReturn();
    @DefaultMessage("Request Roles")
    String pageTitleRequestRoles();
    @DefaultMessage("Return Header")
    String pageTitleReturnHeader();
    @DefaultMessage("Return Items")
    String pageTitleReturnItems();
    @DefaultMessage("Return List")
    String pageTitleReturnList();
    @DefaultMessage("Sales Invoice By Product Category Summary")
    String pageTitleSalesInvoiceByProductCategorySummary();
    @DefaultMessage("Sales Invoice By Product GL Account Summary")
    String pageTitleSalesInvoiceByProductGlAccountSummary();
    @DefaultMessage("Search Inventory Items")
    String pageTitleSearchInventoryItems();
    @DefaultMessage("Search Inventory Items By Labels")
    String pageTitleSearchInventoryItemsByLabels();
    @DefaultMessage("Search Results")
    String pageTitleSearchResults();
    @DefaultMessage("Search Sites")
    String pageTitleSearchSites();
    @DefaultMessage("Security Groups List")
    String pageTitleSecurityGroupsList();
    @DefaultMessage("Send Invoice per email")
    String pageTitleSendInvoicePerEmail();
    @DefaultMessage("Sent Messages")
    String pageTitleSentMessages();
    @DefaultMessage("Shipment Complete Notice")
    String pageTitleShipmentCompleteNotice();
    @DefaultMessage("Shipping Information")
    String pageTitleShippingInformation();
    @DefaultMessage("Shipping Options")
    String pageTitleShippingOptions();
    @DefaultMessage("Shopping Cart")
    String pageTitleShoppingCart();
    @DefaultMessage("Shopping List")
    String pageTitleShoppingList();
    @DefaultMessage("Shopping List Item")
    String pageTitleShoppingListItem();
    @DefaultMessage("Show All Promotions")
    String pageTitleShowAllPromotions();
    @DefaultMessage("Show Promotion Details")
    String pageTitleShowPromotionDetails();
    @DefaultMessage("Split Items For Shipping")
    String pageTitleSplitItemsForShipping();
    @DefaultMessage("PageTitleTransferInventoryItem")
    String pageTitleTransferInventoryItem(String facility_facilityName, String facility_facilityId);
    @DefaultMessage("Child Work Efforts")
    String pageTitleTreeWorkEfforts();
    @DefaultMessage("Un-posted Accounting Transactions")
    String pageTitleUnpostedTransactions();
    @DefaultMessage("Update Payment Gateway Config")
    String pageTitleUpdatePaymentGatewayConfig();
    @DefaultMessage("Update Payment Gateway Config Authorize Dot Net")
    String pageTitleUpdatePaymentGatewayConfigAuthorizeNet();
    @DefaultMessage("Update Payment Gateway Config Clear Commerce")
    String pageTitleUpdatePaymentGatewayConfigClearCommerce();
    @DefaultMessage("Update Payment Gateway Config CyberSource")
    String pageTitleUpdatePaymentGatewayConfigCyberSource();
    @DefaultMessage("Update Payment Gateway Config PayPal")
    String pageTitleUpdatePaymentGatewayConfigPayPal();
    @DefaultMessage("Update Payment Gateway Config Payflow Pro")
    String pageTitleUpdatePaymentGatewayConfigPayflowPro();
    @DefaultMessage("Update Payment Gateway Config SagePay")
    String pageTitleUpdatePaymentGatewayConfigSagePay();
    @DefaultMessage("Update Payment Gateway Config Type")
    String pageTitleUpdatePaymentGatewayConfigType();
    @DefaultMessage("Update Payment Gateway Config RBS WorldPay")
    String pageTitleUpdatePaymentGatewayConfigWorldPay();
    @DefaultMessage("Update Shipment Gateway Config")
    String pageTitleUpdateShipmentGatewayConfig();
    @DefaultMessage("Update Shipment Gateway Config DHL")
    String pageTitleUpdateShipmentGatewayConfigDhl();
    @DefaultMessage("Update Shipment Gateway Config FedEx")
    String pageTitleUpdateShipmentGatewayConfigFedex();
    @DefaultMessage("Update Shipment Gateway Config Type")
    String pageTitleUpdateShipmentGatewayConfigType();
    @DefaultMessage("Update Shipment Gateway Config UPS")
    String pageTitleUpdateShipmentGatewayConfigUps();
    @DefaultMessage("Update Shipment Gateway Config USPS")
    String pageTitleUpdateShipmentGatewayConfigUsps();
    @DefaultMessage("View Accounting Transaction")
    String pageTitleViewAccountingTransaction();
    @DefaultMessage("View Activity and Task List")
    String pageTitleViewActivityAndTaskList();
    @DefaultMessage("View Blocked")
    String pageTitleViewBlocked();
    @DefaultMessage("View Blog")
    String pageTitleViewBlog();
    @DefaultMessage("View Communication Purposes")
    String pageTitleViewCommPurposes();
    @DefaultMessage("View Communication Roles")
    String pageTitleViewCommRoles();
    @DefaultMessage("View Communication Event Information")
    String pageTitleViewCommunication();
    @DefaultMessage("View Content")
    String pageTitleViewContent();
    @DefaultMessage("PageTitleViewFacilityContactMechanism")
    String pageTitleViewFacilityContactMechanism(String facility_facilityName, String facility_facilityId);
    @DefaultMessage("View Facility Inventory Items Details")
    String pageTitleViewFacilityInventoryItemsDetails();
    @DefaultMessage("View Gateway Response")
    String pageTitleViewGatewayResponse();
    @DefaultMessage("View Gl Account Entries")
    String pageTitleViewGlAccountEntries();
    @DefaultMessage("View Party Classification Group Parties")
    String pageTitleViewPartyClassificationGroupParties();
    @DefaultMessage("View Party Classifications")
    String pageTitleViewPartyClassifications();
    @DefaultMessage("View Party Preference")
    String pageTitleViewPartyPreferences();
    @DefaultMessage("View Party Profile")
    String pageTitleViewPartyProfile();
    @DefaultMessage("View Party Roles")
    String pageTitleViewPartyRole();
    @DefaultMessage("View Party Segment Roles")
    String pageTitleViewPartySegmentRoles();
    @DefaultMessage("View Product Agreements")
    String pageTitleViewProductAgreements();
    @DefaultMessage("View Product Manufacturing")
    String pageTitleViewProductManufacturing();
    @DefaultMessage("View Product Orders")
    String pageTitleViewProductOrders();
    @DefaultMessage("View Product Store Segments")
    String pageTitleViewProductStoreSegments();
    @DefaultMessage("View Profile")
    String pageTitleViewProfile();
    @DefaultMessage("View Quote")
    String pageTitleViewQuote();
    @DefaultMessage("View Request")
    String pageTitleViewRequest();
    @DefaultMessage("View Shipment")
    String pageTitleViewShipment();
    @DefaultMessage("View Shipment Item Info")
    String pageTitleViewShipmentItemInfo();
    @DefaultMessage("View Shipment Package Info")
    String pageTitleViewShipmentPackageInfo();
    @DefaultMessage("View Shipment Route Info")
    String pageTitleViewShipmentRouteInfo();
    @DefaultMessage("View Transaction")
    String pageTitleViewTransaction();
    @DefaultMessage("View Transaction Entries")
    String pageTitleViewTransactionEntries();
    @DefaultMessage("View Vendor Party Info")
    String pageTitleViewVendorParty();
    @DefaultMessage("Visit Detail")
    String pageTitleVisitDetail();
    @DefaultMessage("Visit List")
    String pageTitleVisitList();
    @DefaultMessage("Work Effort Related Summary")
    String pageTitleWorkEffortRelatedSummary();
    @DefaultMessage("Work Effort Shopping Lists")
    String pageTitleWorkEffortShopLists();
    @DefaultMessage("of '{0}'")
    String pagerAfterPage();
    @DefaultMessage("Page")
    String pagerBeforePage();
    @DefaultMessage("No records to display")
    String pagerDisplayEmpty();
    @DefaultMessage("Displaying records '{0} - {1} of {2}'")
    String pagerDisplayMessage();
    @DefaultMessage("Enter page size")
    String pagerEnterPageSize();
    @DefaultMessage("Export To Excel")
    String pagerExportToExcel();
    @DefaultMessage("First Page")
    String pagerFirstPage();
    @DefaultMessage("More records per page")
    String pagerGrowPage();
    @DefaultMessage("Last Page")
    String pagerLastPage();
    @DefaultMessage("Next Page")
    String pagerNextPage();
    @DefaultMessage("records per page.")
    String pagerPageSize();
    @DefaultMessage("Previous Page")
    String pagerPreviousPage();
    @DefaultMessage("Less records per page")
    String pagerShrinkPage();
    @DefaultMessage("Toggle View All")
    String pagerToggleViewAll();
    @DefaultMessage("Partner Id")
    String partnerId();
    @DefaultMessage("Partner List")
    String partnerList();
    @DefaultMessage("Partner Name")
    String partnerName();
    @DefaultMessage("Party")
    String party();
    @DefaultMessage("Account")
    String partyAccount();
    @DefaultMessage("Active")
    String partyActive();
    @DefaultMessage("Add Child List To Cart")
    String partyAddChildListsToCart();
    @DefaultMessage("Add Communication Content")
    String partyAddCommContent();
    @DefaultMessage("Add Communication Event Order")
    String partyAddCommEventOrder();
    @DefaultMessage("Add Communication Event Product")
    String partyAddCommEventProduct();
    @DefaultMessage("Add List To Cart")
    String partyAddListToCart();
    @DefaultMessage("New Address")
    String partyAddNewAddress();
    @DefaultMessage("Add New Personal Information")
    String partyAddNewPersonalInformation();
    @DefaultMessage("Add other party relationship")
    String partyAddOtherRelationship();
    @DefaultMessage("Add Permission (manually) to SecurityGroup")
    String partyAddPermissionManuallyToSecurityGroup();
    @DefaultMessage("Add Permission (from list) to SecurityGroup")
    String partyAddPermissionToSecurityGroup();
    @DefaultMessage("Add Product To List")
    String partyAddProductToList();
    @DefaultMessage("Add a Protected View to SecurityGroup")
    String partyAddProtectedViewToSecurityGroup();
    @DefaultMessage("Add Purpose")
    String partyAddPurpose();
    @DefaultMessage("Add Related Account")
    String partyAddRelatedAccount();
    @DefaultMessage("Add Related Contact")
    String partyAddRelatedContact();
    @DefaultMessage("Add Role")
    String partyAddRole();
    @DefaultMessage("Add To Role")
    String partyAddToRole();
    @DefaultMessage("Add To Shopping List")
    String partyAddToShoppingList();
    @DefaultMessage("Add UserLogin to Security Group")
    String partyAddUserLoginToSecurityGroup();
    @DefaultMessage("Additional Party Entry")
    String partyAdditionalPartyEntry();
    @DefaultMessage("Additional Party Listing")
    String partyAdditionalPartyListing();
    @DefaultMessage("Attn")
    String partyAddrAttnName();
    @DefaultMessage("To")
    String partyAddrToName();
    @DefaultMessage("Address Line 1")
    String partyAddressLine1();
    @DefaultMessage("Address Line 1 is missing")
    String partyAddressLine1Missing();
    @DefaultMessage("Address Line 1 is missing")
    String partyAddressLine1MissingError();
    @DefaultMessage("Address Line 2")
    String partyAddressLine2();
    @DefaultMessage("Mailing/Shipping Address")
    String partyAddressMailingShipping();
    @DefaultMessage("Match Key")
    String partyAddressMatchKey();
    @DefaultMessage("Format: key,value,sequence (sequence is optional)")
    String partyAddressMatchMessage1();
    @DefaultMessage("Match Value")
    String partyAddressMatchValue();
    @DefaultMessage("Matching")
    String partyAddressMatching();
    @DefaultMessage("Adjust in accounting component")
    String partyAdjustInAccountingComponent();
    @DefaultMessage("Affiliate Code is missing")
    String partyAffiliateCodeMissingError();
    @DefaultMessage("Affiliate Name is missing")
    String partyAffiliateNameMissing();
    @DefaultMessage("All Communication Events")
    String partyAllCommunicationEvents();
    @DefaultMessage("All Communications")
    String partyAllEvents();
    @DefaultMessage("All phone numbers")
    String partyAllPhoneNumbers();
    @DefaultMessage("Allow Address Solicitation")
    String partyAllowAddressSolicitation();
    @DefaultMessage("Allow Solicitation")
    String partyAllowSolicitation();
    @DefaultMessage("If you already have an account")
    String partyAlreadyHaveAccount();
    @DefaultMessage("(Any Role)")
    String partyAnyRole();
    @DefaultMessage("Applied payments to payments")
    String partyAppliedPayments();
    @DefaultMessage("Area Code")
    String partyAreaCode();
    @DefaultMessage("Area code is missing")
    String partyAreaCodeMissingError();
    @DefaultMessage("Attach Content")
    String partyAttachContent();
    @DefaultMessage("Attach File")
    String partyAttachFile();
    @DefaultMessage("Attention Name")
    String partyAttentionName();
    @DefaultMessage("Party Attribute")
    String partyAttribute();
    @DefaultMessage("Party Attribute(s)")
    String partyAttributes();
    @DefaultMessage("AVS Override (CC Fraud Screening)")
    String partyAvsOver();
    @DefaultMessage("AVS String")
    String partyAvsString();
    @DefaultMessage("Bank")
    String partyBank();
    @DefaultMessage("Basic Information")
    String partyBasicInformation();
    @DefaultMessage("Billing Address")
    String partyBillingAddress();
    @DefaultMessage("Billing Address Not Yet Selected")
    String partyBillingAddressNotSelected();
    @DefaultMessage("Birth Date")
    String partyBirthDate();
    @DefaultMessage("Birthdate is not formatted correctly: must be yyyy-mm-dd, like 1982-07-21")
    String partyBirthDateMissingError();
    @DefaultMessage("Business phone")
    String partyBusinessPhone();
    @DefaultMessage("ERROR: Cannot update specified contact info because it does not correspond to the specified party.")
    String partyCannotUpdateContactBecauseNotWithSpecifiedParty();
    @DefaultMessage("Component")
    String partyCertComponent();
    @DefaultMessage("Import Issuer")
    String partyCertImportIssuer();
    @DefaultMessage("Invalid certificate")
    String partyCertInvalid();
    @DefaultMessage("Cert Issuers")
    String partyCertIssuers();
    @DefaultMessage("Key Alias")
    String partyCertKeyAlias();
    @DefaultMessage("Keystore")
    String partyCertKeyStore();
    @DefaultMessage("Cert Name")
    String partyCertName();
    @DefaultMessage("Save to KeyStore")
    String partyCertSaveToKeyStore();
    @DefaultMessage("Cert Serial Number")
    String partyCertSerialNumber();
    @DefaultMessage("Cert Type")
    String partyCertType();
    @DefaultMessage("Change Party")
    String partyChangeParty();
    @DefaultMessage("Change Password")
    String partyChangePassword();
    @DefaultMessage("Child Communication Events")
    String partyChildCommunicationEvents();
    @DefaultMessage("Child Shopping List")
    String partyChildShoppingList();
    @DefaultMessage("City")
    String partyCity();
    @DefaultMessage("City is Missing")
    String partyCityMissing();
    @DefaultMessage("Classification Group")
    String partyClassificationGroup();
    @DefaultMessage("Classification Group Id")
    String partyClassificationGroupId();
    @DefaultMessage("Classification Group Parties")
    String partyClassificationGroupParties();
    @DefaultMessage("Classification Groups")
    String partyClassificationGroups();
    @DefaultMessage("Classifications")
    String partyClassifications();
    @DefaultMessage("Client")
    String partyClient();
    @DefaultMessage("Client IP")
    String partyClientIP();
    @DefaultMessage("Client User")
    String partyClientUser();
    @DefaultMessage("Communication Content")
    String partyCommContent();
    @DefaultMessage("Communication Customer Requests")
    String partyCommCustRequests();
    @DefaultMessage("Comm Event")
    String partyCommEvent();
    @DefaultMessage("Create Opportunity")
    String partyCommEventCreateOpportunity();
    @DefaultMessage("Communication Event Orders")
    String partyCommEventOrders();
    @DefaultMessage("Communication Event Products")
    String partyCommEventProducts();
    @DefaultMessage("Communication Event Purposes")
    String partyCommEventPurposes();
    @DefaultMessage("Communication Event Roles")
    String partyCommEventRoles();
    @DefaultMessage("Party Comm Event Subject")
    String partyCommEventSubject();
    @DefaultMessage("Comm Events")
    String partyCommEvents();
    @DefaultMessage("Communication Work Efforts")
    String partyCommWorkEfforts();
    @DefaultMessage("Comments")
    String partyComments();
    @DefaultMessage("Communication Event")
    String partyCommunicationEvent();
    @DefaultMessage("Communications")
    String partyCommunications();
    @DefaultMessage("Communications of party")
    String partyCommunicationsOfParty();
    @DefaultMessage("Communications with")
    String partyCommunicationsWith();
    @DefaultMessage("OFBiz: Party Manager")
    String partyCompanyName();
    @DefaultMessage("Company Name is missing")
    String partyCompanyNameMissingError();
    @DefaultMessage("Part of the Open For Business Family of Open Source Software")
    String partyCompanySubtitle();
    @DefaultMessage("Allow Address Solicitation")
    String partyContactAllowAddressSolicitation();
    @DefaultMessage("Allow Solicitation")
    String partyContactAllowSolicitation();
    @DefaultMessage("Effective Thru")
    String partyContactEffectiveThru();
    @DefaultMessage("ext")
    String partyContactExt();
    @DefaultMessage("Fax Number")
    String partyContactFaxPhoneNumber();
    @DefaultMessage("Contact Info")
    String partyContactInfo();
    @DefaultMessage("The contact information specified does not belong to you, you may not view or edit it")
    String partyContactInfoNotBelongToYou();
    @DefaultMessage("Contact Information")
    String partyContactInformation();
    @DefaultMessage("Add Party to Contact List")
    String partyContactListPartyCreate();
    @DefaultMessage("Contact Lists")
    String partyContactLists();
    @DefaultMessage("Contact Mech ID is missing")
    String partyContactMechIdMissing();
    @DefaultMessage("ERROR: Could not delete contact info (party contact mech not found)")
    String partyContactMechNotFoundCannotDelete();
    @DefaultMessage("Contact Mech Type")
    String partyContactMechType();
    @DefaultMessage("Contact Mech Type ID is missing")
    String partyContactMechTypeIdMissing();
    @DefaultMessage("Contact Mechanism successfully created.")
    String partyContactMechanismSuccessfullyCreated();
    @DefaultMessage("Contact Mechanism successfully updated.")
    String partyContactMechanismSuccessfullyUpdated();
    @DefaultMessage("ContactMechs")
    String partyContactMechs();
    @DefaultMessage("Mobile Phone Number")
    String partyContactMobilePhoneNumber();
    @DefaultMessage("Contact Number")
    String partyContactNumber();
    @DefaultMessage("Contact Number is missing")
    String partyContactNumberMissing();
    @DefaultMessage("Contact Purpose")
    String partyContactPurpose();
    @DefaultMessage("Contact Purposes")
    String partyContactPurposes();
    @DefaultMessage("Soliciting OK?")
    String partyContactSolicitingOk();
    @DefaultMessage("Contact telephone is missing")
    String partyContactTelephoneMissing();
    @DefaultMessage("Contact telephone is missing")
    String partyContactTelephoneMissingError();
    @DefaultMessage("Contact Type")
    String partyContactType();
    @DefaultMessage("Work Phone Number")
    String partyContactWorkPhoneNumber();
    @DefaultMessage("Party Content")
    String partyContent();
    @DefaultMessage("Content ID")
    String partyContentId();
    @DefaultMessage("Cookie")
    String partyCookie();
    @DefaultMessage("Country")
    String partyCountry();
    @DefaultMessage("Country Code")
    String partyCountryCode();
    @DefaultMessage("Country code is Missing")
    String partyCountryCodeMissing();
    @DefaultMessage("Country is Missing")
    String partyCountryMissing();
    @DefaultMessage("Create/Add Email to Party")
    String partyCreateAddEmail();
    @DefaultMessage("Security Error: to run addWebSiteRole you must have the PARTYMGR_CREATE or PARTYMGR_ADMIN permission")
    String partyCreateAddWebSiteRolePermissionError();
    @DefaultMessage("Security Error: to run createPartyAttribute you must have the PARTYMGR_CREATE or PARTYMGR_ADMIN permission")
    String partyCreateAttributePermissionError();
    @DefaultMessage("Security Error: to run createCommunicationEvent you must have the PARTYMGR_CREATE or PARTYMGR_ADMIN permission")
    String partyCreateCommunicationEventPermissionError();
    @DefaultMessage("Security Error: to run createCommunicationEventPurpose you must have the PARTYMGR_CREATE or PARTYMGR_ADMIN permission")
    String partyCreateCommunicationEventPurposePermissionError();
    @DefaultMessage("Security Error: to run createCommunicationEventRole you must have the PARTYMGR_CREATE or PARTYMGR_ADMIN permission")
    String partyCreateCommunicationEventRolePermissionError();
    @DefaultMessage("Create a new billing address for this credit card")
    String partyCreateNewBillingAddress();
    @DefaultMessage("Create New Contact Information")
    String partyCreateNewContact();
    @DefaultMessage("Create New Contact Information")
    String partyCreateNewContactInfo();
    @DefaultMessage("Create New Credit Card")
    String partyCreateNewCreditCard();
    @DefaultMessage("Create Request")
    String partyCreateNewCustRequest();
    @DefaultMessage("Create Customer")
    String partyCreateNewCustomer();
    @DefaultMessage("Create New EFT Account")
    String partyCreateNewEftAccount();
    @DefaultMessage("Create Employee")
    String partyCreateNewEmployee();
    @DefaultMessage("Create New Gift Card")
    String partyCreateNewGiftCard();
    @DefaultMessage("Create New Party Detail")
    String partyCreateNewParty();
    @DefaultMessage("Create New Party Classification Group")
    String partyCreateNewPartyClassificationGroup();
    @DefaultMessage("Create New Party Group")
    String partyCreateNewPartyGroup();
    @DefaultMessage("Create New Person")
    String partyCreateNewPerson();
    @DefaultMessage("Create Prospect")
    String partyCreateNewProspect();
    @DefaultMessage("Create Quote")
    String partyCreateNewQuote();
    @DefaultMessage("Create New SecurityGroup")
    String partyCreateNewSecurityGroup();
    @DefaultMessage("Security Error: to run createPartyClassificationGroup you must have the PARTYMGR_CREATE or PARTYMGR_ADMIN permission")
    String partyCreatePartyClassificationGroupPermissionError();
    @DefaultMessage("Security Error: to run createPartyClassification you must have the PARTYMGR_CREATE or PARTYMGR_ADMIN permission")
    String partyCreatePartyClassificationPermissionError();
    @DefaultMessage("Security Error: to run createPartyRole you must have the PARTYMGR_ROLE_CREATE or PARTYMGR_ADMIN permission")
    String partyCreatePartyRolePermissionError();
    @DefaultMessage("Security Error: to run createPostalAddressBoundary you must have the PARTYMGR_CREATE or PARTYMGR_ADMIN permission")
    String partyCreatePostalAddressBoundaryPermissionError();
    @DefaultMessage("Create CustReq from CommEvent")
    String partyCreateRequestFromCommEvent();
    @DefaultMessage("Create UserLogin")
    String partyCreateUserLogin();
    @DefaultMessage("Security Error: to run createVendor you must have the PARTYMGR_CREATE or PARTYMGR_ADMIN permission")
    String partyCreateVendorPermissionError();
    @DefaultMessage("Party Created Date")
    String partyCreatedDate();
    @DefaultMessage("In party currency")
    String partyCurrency();
    @DefaultMessage("Current Shopping Cart")
    String partyCurrentShoppingCart();
    @DefaultMessage("Customer Request")
    String partyCustomerRequest();
    @DefaultMessage("Cyber source AVS Over")
    String partyCybersourceAvsOver();
    @DefaultMessage("Deceased Date")
    String partyDeceasedDate();
    @DefaultMessage("Deceaseddate is not formatted correctly: must be yyyy-mm-dd, like 1982-07-21")
    String partyDeceasedDateMissingError();
    @DefaultMessage("Delete Email")
    String partyDeleteEmail();
    @DefaultMessage("Security Error: to run deletePartyRole you must have the PARTYMGR_DELETE or PARTYMGR_ADMIN permission")
    String partyDeletePartyRolePermissionError();
    @DefaultMessage("Security Error: to run deleteVendor you must have the PARTYMGR_CREATE or PARTYMGR_ADMIN permission")
    String partyDeleteVendorPermissionError();
    @DefaultMessage("DISABLED")
    String partyDisabled();
    @DefaultMessage("D - Divorced")
    String partyDivorced();
    @DefaultMessage("Domain Name successfully created.")
    String partyDomainNameSuccessfullyCreated();
    @DefaultMessage("Domain Name successfully updated.")
    String partyDomainNameSuccessfullyUpdated();
    @DefaultMessage("Draft Emails")
    String partyDraftEmails();
    @DefaultMessage("Edit Communication Customer Request")
    String partyEditCommCustRequest();
    @DefaultMessage("Edit Communication Work Purpose")
    String partyEditCommPurpose();
    @DefaultMessage("Edit Communication Role")
    String partyEditCommRole();
    @DefaultMessage("New Communication Work Effort")
    String partyEditCommWorkEffort();
    @DefaultMessage("Edit Communication Event")
    String partyEditCommunicationEvent();
    @DefaultMessage("Edit Contact Information")
    String partyEditContactInfo();
    @DefaultMessage("Edit Contact Information")
    String partyEditContactInformation();
    @DefaultMessage("Edit Customer request copied from Communication Event")
    String partyEditCustomerRequest();
    @DefaultMessage("Edit Personal Information")
    String partyEditPersonalInformation();
    @DefaultMessage("Edit Security Group With ID")
    String partyEditSecurityGroupWithId();
    @DefaultMessage("EFT Account")
    String partyEftAccount();
    @DefaultMessage("E-Mail Address")
    String partyEmailAddress();
    @DefaultMessage("Email Address is missing")
    String partyEmailAddressMissing();
    @DefaultMessage("E-mail address is missing")
    String partyEmailAddressMissingError();
    @DefaultMessage("The Email Address cannot be verified.  This Email Address does not exists.")
    String partyEmailAddressNotExist();
    @DefaultMessage("E-mail address not formatted correctly, must be like: name@domain")
    String partyEmailAddressNotFormattedCorrectly();
    @DefaultMessage("Email Address successfully created.")
    String partyEmailAddressSuccessfullyCreated();
    @DefaultMessage("Email Address successfully updated.")
    String partyEmailAddressSuccessfullyUpdated();
    @DefaultMessage("The Email Address Verification has been expired.")
    String partyEmailAddressVerificationExpired();
    @DefaultMessage("Email Addresses")
    String partyEmailAddresses();
    @DefaultMessage("Email from unknown parties")
    String partyEmailFromUnknownParties();
    @DefaultMessage("Allocate this message to a existing or new party and add an email address")
    String partyEmailMessage();
    @DefaultMessage("Email to")
    String partyEmailTo();
    @DefaultMessage("Emails from UN-known origin")
    String partyEmailsFromUnknownOrigin();
    @DefaultMessage("ENABLED")
    String partyEnabled();
    @DefaultMessage("You must enter your password twice")
    String partyEnterPasswordTwice();
    @DefaultMessage("Entered Date")
    String partyEnteredDate();
    @DefaultMessage("Event Purpose(s)")
    String partyEventPurpose();
    @DefaultMessage("Event Type")
    String partyEventType();
    @DefaultMessage("The expiration date is before today")
    String partyExpDateBeforeTodayError();
    @DefaultMessage("Expiration month is missing")
    String partyExpMonthMissingError();
    @DefaultMessage("Expiration year is missing")
    String partyExpYearMissingError();
    @DefaultMessage("Extension")
    String partyExtension();
    @DefaultMessage("Fax number")
    String partyFaxNumber();
    @DefaultMessage("File Attach.")
    String partyFileAttach();
    @DefaultMessage("Fin. History")
    String partyFinancialHistory();
    @DefaultMessage("Totals for Company:")
    String partyFinancialSummary();
    @DefaultMessage("Find Communication Events")
    String partyFindCommunicationEvents();
    @DefaultMessage("Find Communications by Order")
    String partyFindCommunicationsByOrder();
    @DefaultMessage("Find Parties")
    String partyFindParties();
    @DefaultMessage("Find Party")
    String partyFindParty();
    @DefaultMessage("Find Party Invitations")
    String partyFindPartyInvitations();
    @DefaultMessage("First name")
    String partyFirstName();
    @DefaultMessage("First Name is Missing")
    String partyFirstNameMissing();
    @DefaultMessage("First name on card is missing")
    String partyFirstNameOnCardMissingError();
    @DefaultMessage("Follow Session")
    String partyFollowSession();
    @DefaultMessage("Forward")
    String partyForward();
    @DefaultMessage("Found Communication Events")
    String partyFoundCommunicationEvents();
    @DefaultMessage("From Contact Mech")
    String partyFromContactMech();
    @DefaultMessage("From Email Address")
    String partyFromEmailAddress();
    @DefaultMessage("Full Name")
    String partyFullName();
    @DefaultMessage("Gender")
    String partyGender();
    @DefaultMessage("General Correspondence Address")
    String partyGeneralCorrespondenceAddress();
    @DefaultMessage("Go to Parent")
    String partyGoToParent();
    @DefaultMessage("Goto List")
    String partyGotoList();
    @DefaultMessage("Group Name")
    String partyGroupName();
    @DefaultMessage("Group Name is missing")
    String partyGroupNameMissing();
    @DefaultMessage("Number of employees is invalid")
    String partyGroupNumEmployeeIsInvalid();
    @DefaultMessage("Group Party ID")
    String partyGroupPartyId();
    @DefaultMessage("Height")
    String partyHeight();
    @DefaultMessage("Height is not a valid number")
    String partyHeightNotValidNumber();
    @DefaultMessage("Hide Old")
    String partyHideOld();
    @DefaultMessage("Changed")
    String partyHistoryChanged();
    @DefaultMessage("Name History")
    String partyHistoryName();
    @DefaultMessage("Was")
    String partyHistoryWas();
    @DefaultMessage("Hit Tracker")
    String partyHitTracker();
    @DefaultMessage("Home phone")
    String partyHomePhone();
    @DefaultMessage("Home Phone Area Code is missing.")
    String partyHomePhoneAreaCodeMissing();
    @DefaultMessage("Home Phone Contact Number is missing.")
    String partyHomePhoneContactNumberMissing();
    @DefaultMessage("Emails scheduled to be sent")
    String partyInProgresstEmails();
    @DefaultMessage("This information does not belong to you and you do not have permission to view it")
    String partyInformationNotBelongToYou();
    @DefaultMessage("Information Not Found")
    String partyInformationNotFound();
    @DefaultMessage("Initial Locale")
    String partyInitialLocale();
    @DefaultMessage("Initial Referer")
    String partyInitialReferer();
    @DefaultMessage("Initial Request")
    String partyInitialRequest();
    @DefaultMessage("Initial User Agent")
    String partyInitialUserAgent();
    @DefaultMessage("Invitation")
    String partyInvitation();
    @DefaultMessage("You do not have permission to accept or decline Party Invitation")
    String partyInvitationAccAndDecPermissionError();
    @DefaultMessage("You do not have permission to cancel the Party Invitation")
    String partyInvitationCancelPermissionError();
    @DefaultMessage("GroupAssoc")
    String partyInvitationGroupAssoc();
    @DefaultMessage("Party Id To")
    String partyInvitationGroupAssocPartyIdTo();
    @DefaultMessage("Last Invite Date")
    String partyInvitationLastInviteDate();
    @DefaultMessage("New Party Invitation")
    String partyInvitationNewPartyInvitation();
    @DefaultMessage("This is not a valid Party Invitation")
    String partyInvitationNotValidError();
    @DefaultMessage("Party Invitation Id")
    String partyInvitationPartyInvitationId();
    @DefaultMessage("RoleAssoc")
    String partyInvitationRoleAssoc();
    @DefaultMessage("Invoices not yet (fully) applied")
    String partyInvoicesNotApplied();
    @DefaultMessage("Invoices of other parties paid by payments from")
    String partyInvoicesOtherParties();
    @DefaultMessage("Invoices Payments")
    String partyInvoicesPayments();
    @DefaultMessage("Web IP Address successfully created.")
    String partyIpAddressSuccessfullyCreated();
    @DefaultMessage("Web IP Address successfully updated.")
    String partyIpAddressSuccessfullyUpdated();
    @DefaultMessage("is A")
    String partyIsA();
    @DefaultMessage("Is Public")
    String partyIsPublic();
    @DefaultMessage("Is USPS")
    String partyIsUsps();
    @DefaultMessage("Last name")
    String partyLastName();
    @DefaultMessage("Last Name is Missing")
    String partyLastNameMissingError();
    @DefaultMessage("Last name on card is missing")
    String partyLastNameOnCardMissingError();
    @DefaultMessage("Leave empty for new ''Party''")
    String partyLeaveEmpty();
    @DefaultMessage("Link Party")
    String partyLink();
    @DefaultMessage("WARNING: This cannot be un-done, confirm you wish to link the two party records listed below.")
    String partyLinkMessage1();
    @DefaultMessage("Found Communication Customer Requests")
    String partyListCommCustRequest();
    @DefaultMessage("Found Communication Work Purposes")
    String partyListCommPurpose();
    @DefaultMessage("Found Communication Roles")
    String partyListCommRole();
    @DefaultMessage("Found Communication Work Efforts")
    String partyListCommWorkEffort();
    @DefaultMessage("Communication Events")
    String partyListCommunicationEvents();
    @DefaultMessage("List Items")
    String partyListItems();
    @DefaultMessage("List Name")
    String partyListName();
    @DefaultMessage("List Related Accounts")
    String partyListRelatedAccounts();
    @DefaultMessage("List Related Contacts")
    String partyListRelatedContacts();
    @DefaultMessage("List Type")
    String partyListType();
    @DefaultMessage("Lookup Party with the role Account")
    String partyLookupAccount();
    @DefaultMessage("Lookup Party with the role Contact")
    String partyLookupContact();
    @DefaultMessage("Lookup Contact Mech")
    String partyLookupContactMech();
    @DefaultMessage("Lookup Internal Organization")
    String partyLookupInternalOrganization();
    @DefaultMessage("Lookup Party with the role Lead")
    String partyLookupLead();
    @DefaultMessage("Lookup Party")
    String partyLookupParty();
    @DefaultMessage("Lookup PartyAndUserLoginAndPerson")
    String partyLookupPartyAndUserLoginAndPerson();
    @DefaultMessage("Lookup Party by Name")
    String partyLookupPartyByName();
    @DefaultMessage("Lookup Party Classification Group")
    String partyLookupPartyClassificationGroup();
    @DefaultMessage("Lookup Communication Event")
    String partyLookupPartyCommEvent();
    @DefaultMessage("Lookup Group")
    String partyLookupPartyGroup();
    @DefaultMessage("Lookup Person")
    String partyLookupPartyPerson();
    @DefaultMessage("Lookup UserLoginAndPartyDetails")
    String partyLookupUserLoginAndPartyDetails();
    @DefaultMessage("Loyalty Points")
    String partyLoyaltyPoints();
    @DefaultMessage("Mothers Maiden Name")
    String partyMaidenName();
    @DefaultMessage("Main Role")
    String partyMainRole();
    @DefaultMessage("Party Manager")
    String partyManager();
    @DefaultMessage("Party Manager Application")
    String partyManagerApplication();
    @DefaultMessage("Manifest Company Name")
    String partyManifestCompanyName();
    @DefaultMessage("Manifest Company Title")
    String partyManifestCompanyTitle();
    @DefaultMessage("Manifest Logo Url")
    String partyManifestLogoUrl();
    @DefaultMessage("Manifest Policies")
    String partyManifestPolicies();
    @DefaultMessage("Manual Tx")
    String partyManualTx();
    @DefaultMessage("Marital Status")
    String partyMaritalStatus();
    @DefaultMessage("Divorced")
    String partyMaritalStatusDivorced();
    @DefaultMessage("Married")
    String partyMaritalStatusMarried();
    @DefaultMessage("Separated")
    String partyMaritalStatusSeparated();
    @DefaultMessage("Single")
    String partyMaritalStatusSingle();
    @DefaultMessage("Widowed")
    String partyMaritalStatusWidowed();
    @DefaultMessage("M - Married")
    String partyMarried();
    @DefaultMessage("Maximum number of visits")
    String partyMaxHit();
    @DefaultMessage("Duration during which the visits are considered (in seconds)")
    String partyMaxHitDuration();
    @DefaultMessage("Purpose Type not found with ID")
    String partyMechPurposeTypeNotFound();
    @DefaultMessage("Member Roles")
    String partyMemberRoles();
    @DefaultMessage("You do not have permission to view this page. (\"PARTYMGR_CREATE\" or \"PARTYMGR_ADMIN\" needed)")
    String partyMgrCreatePermissionError();
    @DefaultMessage("You do not have permission to view this page. (\"PARTYMGR_VIEW\" or \"PARTYMGR_ADMIN\" needed)")
    String partyMgrViewPermissionError();
    @DefaultMessage("Middle initial")
    String partyMiddleInitial();
    @DefaultMessage("Middle Name")
    String partyMiddleName();
    @DefaultMessage("Mobile phone")
    String partyMobilePhone();
    @DefaultMessage("Mothers Maiden Name")
    String partyMothersMaidenName();
    @DefaultMessage("Note: this new contact information will have the purpose")
    String partyMsgContactHavePurpose();
    @DefaultMessage("The contact information specified does not belong to you, you may not view or edit it.")
    String partyMsgContactNotBelongToYou();
    @DefaultMessage("My Communications")
    String partyMyCommunications();
    @DefaultMessage("Name")
    String partyName();
    @DefaultMessage("Name Phone and Email")
    String partyNameAndConactInfo();
    @DefaultMessage("Name and Shipping Address")
    String partyNameAndShippingAddress();
    @DefaultMessage("New Communication Content")
    String partyNewCommContent();
    @DefaultMessage("New Communication Customer Request")
    String partyNewCommCustRequest();
    @DefaultMessage("New Communication Work Purpose")
    String partyNewCommPurpose();
    @DefaultMessage("New Communication Role")
    String partyNewCommRole();
    @DefaultMessage("New Communication Work Effort")
    String partyNewCommWorkEffort();
    @DefaultMessage("New Communication")
    String partyNewCommunication();
    @DefaultMessage("Note: this new contact information will have the purpose")
    String partyNewContactHavePurpose();
    @DefaultMessage("New Email")
    String partyNewEmail();
    @DefaultMessage("New Event")
    String partyNewEvent();
    @DefaultMessage("New Find")
    String partyNewFind();
    @DefaultMessage("New Internal Note")
    String partyNewInternalNote();
    @DefaultMessage("New Password")
    String partyNewPassword();
    @DefaultMessage("New Password Verify")
    String partyNewPasswordVerify();
    @DefaultMessage("New Relationship")
    String partyNewRelationship();
    @DefaultMessage("New Relationship Type")
    String partyNewRelationshipType();
    @DefaultMessage("New Role Type")
    String partyNewRoleType();
    @DefaultMessage("New Security Group")
    String partyNewSecurityGroup();
    @DefaultMessage("New Task")
    String partyNewTask();
    @DefaultMessage("New User")
    String partyNewUser();
    @DefaultMessage("Nick Name")
    String partyNickName();
    @DefaultMessage("You do not have access to this information")
    String partyNoAccess();
    @DefaultMessage("No Billing Address Selected")
    String partyNoBillingAddress();
    @DefaultMessage("No Communication Events")
    String partyNoCommunicationFound();
    @DefaultMessage("No contact information on file")
    String partyNoContactInformation();
    @DefaultMessage("No Content")
    String partyNoContent();
    @DefaultMessage("No records match.")
    String partyNoMatch();
    @DefaultMessage("No name found")
    String partyNoNameFound();
    @DefaultMessage("No name (group)")
    String partyNoNameGroup();
    @DefaultMessage("No notes for this party.")
    String partyNoNotesForParty();
    @DefaultMessage("No Parent")
    String partyNoParent();
    @DefaultMessage("No parties found.")
    String partyNoPartiesFound();
    @DefaultMessage("No party attributes found.")
    String partyNoPartyAttributesFound();
    @DefaultMessage("No party found for current user with user name")
    String partyNoPartyForCurrentUserName();
    @DefaultMessage("No partyId passed, cannot Update Customer")
    String partyNoPartyForUpdateCustomer();
    @DefaultMessage("No party found with the partyId of")
    String partyNoPartyFoundWithPartyId();
    @DefaultMessage("No relationships found.")
    String partyNoPartyRelationshipsFound();
    @DefaultMessage("No party roles found.")
    String partyNoPartyRolesFound();
    @DefaultMessage("No payment method information on file.")
    String partyNoPaymentMethodInformation();
    @DefaultMessage("No product store(s) found for this party.")
    String partyNoProductStoreFoundForThisParty();
    @DefaultMessage("No Server Hits found for this Visit")
    String partyNoServerHitsFound();
    @DefaultMessage("No shopping cart saved for party")
    String partyNoShoppingCartSavedForParty();
    @DefaultMessage("No Shopping lists for party")
    String partyNoShoppingListsParty();
    @DefaultMessage("No State/Province")
    String partyNoState();
    @DefaultMessage("No Subject")
    String partyNoSubject();
    @DefaultMessage("No Supplier")
    String partyNoSupplier();
    @DefaultMessage("No UserLogin(s) found for this party.")
    String partyNoUserLogin();
    @DefaultMessage("No Visit(s) found for this party.")
    String partyNoVisitFound();
    @DefaultMessage("This cannot be changed without re-creating the securityGroup.")
    String partyNotModifRecreatSecurityGroup();
    @DefaultMessage("Change Personal Info Notification Mail")
    String partyNotificationMailChange();
    @DefaultMessage("Party Account Creation Notification Mail")
    String partyNotificationMailCreate();
    @DefaultMessage("Email Address Verification")
    String partyNotificationMailVerification();
    @DefaultMessage("of Party")
    String partyOfParty();
    @DefaultMessage("Current (Old) Password")
    String partyOldPassword();
    @DefaultMessage("Open Communications")
    String partyOpenEvents();
    @DefaultMessage("Optional")
    String partyOptional();
    @DefaultMessage("Order Add")
    String partyOrderAdd();
    @DefaultMessage("order(s) in the last")
    String partyOrderInLast();
    @DefaultMessage("Organization Party")
    String partyOrganizationParty();
    @DefaultMessage("Organization Party ID")
    String partyOrganizationPartyId();
    @DefaultMessage("Origin Email address not known!")
    String partyOriginEmailNotKnown();
    @DefaultMessage("Others and General Communication Events")
    String partyOtherAndGeneralCommunicationEvents();
    @DefaultMessage("Override Default Rate Amount")
    String partyOverrideDefaultRateAmount();
    @DefaultMessage("Page Push/Following")
    String partyPagePushFollowing();
    @DefaultMessage("Parent List")
    String partyParentList();
    @DefaultMessage("Parties")
    String partyParties();
    @DefaultMessage("Parties for")
    String partyPartiesFor();
    @DefaultMessage("Parties Found")
    String partyPartiesFound();
    @DefaultMessage("Party")
    String partyParty();
    @DefaultMessage("The current party in the role of")
    String partyPartyCurrentInTheRoleOf();
    @DefaultMessage("Party From")
    String partyPartyFrom();
    @DefaultMessage("Party Group Information")
    String partyPartyGroupInformation();
    @DefaultMessage("Party Group Name")
    String partyPartyGroupName();
    @DefaultMessage("Party Group successfully created.")
    String partyPartyGroupSuccessfullyCreated();
    @DefaultMessage("Party Group successfully updated.")
    String partyPartyGroupSuccessfullyUpdated();
    @DefaultMessage("PartyID/UserLoginID")
    String partyPartyIDUserLoginID();
    @DefaultMessage("Party ID")
    String partyPartyId();
    @DefaultMessage("Party ID missing")
    String partyPartyIdMissing();
    @DefaultMessage("Identification Number")
    String partyPartyIdentification();
    @DefaultMessage("List Identification Number")
    String partyPartyIdentificationList();
    @DefaultMessage("Identification Numbers")
    String partyPartyIdentifications();
    @DefaultMessage("in the role of")
    String partyPartyInTheRoleOf();
    @DefaultMessage("Party not defined")
    String partyPartyNotDefined();
    @DefaultMessage("of the current party in the role of")
    String partyPartyOfTheRoleParty();
    @DefaultMessage("Requests")
    String partyPartyRequests();
    @DefaultMessage("Party successfully deleted.")
    String partyPartySuccessfullyDeleted();
    @DefaultMessage("Party To")
    String partyPartyTo();
    @DefaultMessage("of the Party with ID")
    String partyPartyWithId();
    @DefaultMessage("Passport Expire")
    String partyPassportExpire();
    @DefaultMessage("Passport Expire Date")
    String partyPassportExpireDate();
    @DefaultMessage("Passport Expire Date is not a valid Date")
    String partyPassportExpireDateNotValidDate();
    @DefaultMessage("Passport Number")
    String partyPassportNumber();
    @DefaultMessage("Password Hint")
    String partyPasswordHint();
    @DefaultMessage("Your Passwords do not match")
    String partyPasswordMatchError();
    @DefaultMessage("Password is Missing")
    String partyPasswordMissing();
    @DefaultMessage("Payment Method Information")
    String partyPaymentMethodInformation();
    @DefaultMessage("Payments not yet (fully) applied")
    String partyPaymentsNotApplied();
    @DefaultMessage("Pending")
    String partyPending();
    @DefaultMessage("Pending Communication Events")
    String partyPendingCommunicationEvents();
    @DefaultMessage("Permission")
    String partyPermission();
    @DefaultMessage("PartyPermissionError")
    String partyPermissionError(String methodShortDescription, String securityAction);
    @DefaultMessage("You do not have permission to perform this operation for this party")
    String partyPermissionErrorForThisParty();
    @DefaultMessage("PartyPermissionErrorPartyId")
    String partyPermissionErrorPartyId(String resourceDescription);
    @DefaultMessage("Permission ID")
    String partyPermissionId();
    @DefaultMessage("Permissions for SecurityGroup with ID")
    String partyPermissionSecurityGroupWithId();
    @DefaultMessage("Permissions")
    String partyPermissions();
    @DefaultMessage("Person successfully created.")
    String partyPersonSuccessfullyCreated();
    @DefaultMessage("Person successfully updated.")
    String partyPersonSuccessfullyUpdated();
    @DefaultMessage("Personal Information")
    String partyPersonalInformation();
    @DefaultMessage("Personal Information Not Found")
    String partyPersonalInformationNotFound();
    @DefaultMessage("Personal Title")
    String partyPersonalTitle();
    @DefaultMessage("Phone Number")
    String partyPhoneNumber();
    @DefaultMessage("Phone Number Information Not Found")
    String partyPhoneNumberInfoNotFound();
    @DefaultMessage("At least one phone number is required below")
    String partyPhoneNumberRequired();
    @DefaultMessage("Phone Numbers")
    String partyPhoneNumbers();
    @DefaultMessage("points from")
    String partyPointsFrom();
    @DefaultMessage("Postal")
    String partyPostal();
    @DefaultMessage("Postal Address successfully created.")
    String partyPostalAddressSuccessfullyCreated();
    @DefaultMessage("Postal Address successfully updated.")
    String partyPostalAddressSuccessfullyUpdated();
    @DefaultMessage("Postal Code")
    String partyPostalCode();
    @DefaultMessage("Zip/Postal Code is missing")
    String partyPostalCodeMissing();
    @DefaultMessage("Directions")
    String partyPostalDirections();
    @DefaultMessage("Postal Information Not Found")
    String partyPostalInformationNotFound();
    @DefaultMessage("Price")
    String partyPrice();
    @DefaultMessage("Primary Phone Number")
    String partyPrimaryPhone();
    @DefaultMessage("Product")
    String partyProduct();
    @DefaultMessage("Product Add")
    String partyProductAdd();
    @DefaultMessage("Product Id")
    String partyProductId();
    @DefaultMessage("Profile")
    String partyProfile();
    @DefaultMessage("Protected Views")
    String partyProtectedViews();
    @DefaultMessage("Protected Views For SecurityGroup")
    String partyProtectedViewsForSecurityGroup();
    @DefaultMessage("Province is missing, and is required for an address in Canada.")
    String partyProvinceInCanadaMissing();
    @DefaultMessage("State/Province is Missing")
    String partyProvinceMissing();
    @DefaultMessage("Public")
    String partyPublic();
    @DefaultMessage("Purpose type not specified, cannot add purpose to contact mechanism")
    String partyPurposeTypeMissingCannotAdd();
    @DefaultMessage("Purpose type not specified, cannot remove purpose from contact mechanism")
    String partyPurposeTypeMissingCannotRemove();
    @DefaultMessage("Contact Purpose Type Not Found with ID")
    String partyPurposeTypeNotFound();
    @DefaultMessage("Push URL")
    String partyPushURL();
    @DefaultMessage("Quantity")
    String partyQuantity();
    @DefaultMessage("Quantity Purchased")
    String partyQuantityPurchased();
    @DefaultMessage("Quick Add To Shopping List")
    String partyQuickAddList();
    @DefaultMessage("Rate not specified for this party AND NO default rate")
    String partyRateNotSpecified();
    @DefaultMessage("You will receive a password by email when your new account is approved")
    String partyReceivePasswordByEmail();
    @DefaultMessage("Related Company")
    String partyRelatedCompany();
    @DefaultMessage("Party Relationship Security")
    String partyRelationSecurity();
    @DefaultMessage("Valid From Role Type")
    String partyRelationshipValidFromRoleType();
    @DefaultMessage("Valid To Role Type")
    String partyRelationshipValidToRoleType();
    @DefaultMessage("Relationships")
    String partyRelationships();
    @DefaultMessage("Security Error: to run createPartyAttribute you must have the PARTYMGR_DELETE or PARTYMGR_ADMIN permission")
    String partyRemoveAttributePermissionError();
    @DefaultMessage("Security Error: to run removeCommunicationEventPurpose you must have the PARTYMGR_DELETE or PARTYMGR_ADMIN permission")
    String partyRemoveCommunicationEventPurposePermissionError();
    @DefaultMessage("Security Error: to run removeCommunicationEventRole you must have the PARTYMGR_DELETE or PARTYMGR_ADMIN permission")
    String partyRemoveCommunicationEventRolePermissionError();
    @DefaultMessage("Security Error: to run deletePartyClassificationGroup you must have the PARTYMGR_DELETE or PARTYMGR_ADMIN permission")
    String partyRemovePartyClassificationGroupPermissionError();
    @DefaultMessage("Security Error: to run deletePartyClassification you must have the PARTYMGR_DELETE or PARTYMGR_ADMIN permission")
    String partyRemovePartyClassificationPermissionError();
    @DefaultMessage("Security Error: to run removePartyRelationship you must have the PARTYMGR_DELETE or PARTYMGR_ADMIN permission")
    String partyRemovePartyRelationshipPermissionError();
    @DefaultMessage("Security Error: to run deletePostalAddressBoundary you must have the PARTYMGR_DELETE or PARTYMGR_ADMIN permission")
    String partyRemovePostalAddressBoundaryPermissionError();
    @DefaultMessage("Security Error: to run removeWebSiteRole you must have the PARTYMGR_DELETE or PARTYMGR_ADMIN permission")
    String partyRemoveWebSiteRolePermissionError();
    @DefaultMessage("Repeat password to confirm")
    String partyRepeatPassword();
    @DefaultMessage("Reply")
    String partyReply();
    @DefaultMessage("Reply All")
    String partyReplyAll();
    @DefaultMessage("RE:")
    String partyReplyPrefix();
    @DefaultMessage("Request a New Account")
    String partyRequestNewAccount();
    @DefaultMessage("Fields marked with (*) are required.")
    String partyRequiredNote();
    @DefaultMessage("Role")
    String partyRole();
    @DefaultMessage("Role Type")
    String partyRoleType();
    @DefaultMessage("RoleType From")
    String partyRoleTypeFrom();
    @DefaultMessage("RoleType ID")
    String partyRoleTypeId();
    @DefaultMessage("Party Role Type Id From (NEW)")
    String partyRoleTypeIdFrom();
    @DefaultMessage("Role Type ID is missing.")
    String partyRoleTypeIdMissing();
    @DefaultMessage("Party Role Type Id To (NEW)")
    String partyRoleTypeIdTo();
    @DefaultMessage("Role Type To")
    String partyRoleTypeTo();
    @DefaultMessage("Role(s)")
    String partyRoles();
    @DefaultMessage("Security Group")
    String partySecurityGroup();
    @DefaultMessage("Security Group ID")
    String partySecurityGroupId();
    @DefaultMessage("Security Groups")
    String partySecurityGroups();
    @DefaultMessage("SecurityGroups List")
    String partySecurityGroupsList();
    @DefaultMessage("PartySecurityViewPermissionError You do not have permission to view this page. (\"SECURITY_VIEW\" or \"SECURITY_ADMIN\" needed)")
    String partySecurityViewPermissionError();
    @DefaultMessage("Segment Group Id")
    String partySegmentGroupId();
    @DefaultMessage("Product Store Id")
    String partySegmentGroupProductStoreId();
    @DefaultMessage("Segment Type Id")
    String partySegmentGroupTypeId();
    @DefaultMessage("Segment Roles")
    String partySegmentRoles();
    @DefaultMessage("Segments")
    String partySegments();
    @DefaultMessage("Select Contact Type")
    String partySelectContactType();
    @DefaultMessage("Select Mime Type")
    String partySelectMimeType();
    @DefaultMessage("Select Purpose")
    String partySelectPurpose();
    @DefaultMessage("Select Role")
    String partySelectRole();
    @DefaultMessage("Select role(s) for this party")
    String partySelectcRoleForParty();
    @DefaultMessage("Send Email")
    String partySendEmail();
    @DefaultMessage("Sequence Id")
    String partySequenceId();
    @DefaultMessage("Server")
    String partyServer();
    @DefaultMessage("This service (createContactMech) should not be used for POSTAL_ADDRESS type ContactMechs, use the createPostalAddress service")
    String partyServiceNotForPostalAddress();
    @DefaultMessage("This service (createContactMech) should not be used for TELECOM_NUMBER type ContactMechs, use the createTelecomNumber service")
    String partyServiceNotForTelecomNumber();
    @DefaultMessage("Service management Customer Request Id")
    String partyServicemgntCustRequestId();
    @DefaultMessage("Shipper Account")
    String partyShipperAccount();
    @DefaultMessage("Shipping Address")
    String partyShippingAddress();
    @DefaultMessage("Shopping List Detail")
    String partyShoppingListDetail();
    @DefaultMessage("Empty Shopping List")
    String partyShoppingListEmpty();
    @DefaultMessage("Shopping Lists")
    String partyShoppingLists();
    @DefaultMessage("Show Active")
    String partyShowActive();
    @DefaultMessage("Show All")
    String partyShowAll();
    @DefaultMessage("Show Old")
    String partyShowOld();
    @DefaultMessage("S - Single")
    String partySingle();
    @DefaultMessage("Site URL is missing")
    String partySiteURLMissing();
    @DefaultMessage("Size")
    String partySize();
    @DefaultMessage("Social Security Number")
    String partySocialSecurityNumber();
    @DefaultMessage("Soliciting OK")
    String partySolicitingOk();
    @DefaultMessage("Start Time")
    String partyStartTime();
    @DefaultMessage("State/Province")
    String partyState();
    @DefaultMessage("State is missing, and is required for an address in Canada.")
    String partyStateInCanadaMissing();
    @DefaultMessage("State is missing, and is required for an address in the United States.")
    String partyStateInUsMissing();
    @DefaultMessage("State is missing")
    String partyStateMissingError();
    @DefaultMessage("Still Active")
    String partyStillActive();
    @DefaultMessage("Subject")
    String partySubject();
    @DefaultMessage("Suffix")
    String partySuffix();
    @DefaultMessage("Supplier")
    String partySupplier();
    @DefaultMessage("Duration during which the view will not be accessible (in seconds)")
    String partyTarpitDuration();
    @DefaultMessage("Add Tax Info")
    String partyTaxAddInfo();
    @DefaultMessage("Tax Infos")
    String partyTaxAuthInfos();
    @DefaultMessage("Tax ID")
    String partyTaxId();
    @DefaultMessage("Tax Identification and Exemption")
    String partyTaxIdentification();
    @DefaultMessage("Is Exempt?")
    String partyTaxIsExempt();
    @DefaultMessage("Telecom")
    String partyTelecom();
    @DefaultMessage("Telecom Number successfully created.")
    String partyTelecomNumberSuccessfullyCreated();
    @DefaultMessage("Telecom Number successfully updated.")
    String partyTelecomNumberSuccessfullyUpdated();
    @DefaultMessage("The person will receive a temporary password by email.")
    String partyTemporaryPassword();
    @DefaultMessage("Term")
    String partyTerm();
    @DefaultMessage("Term Type")
    String partyTermType();
    @DefaultMessage("Term Value")
    String partyTermValue();
    @DefaultMessage("Terms")
    String partyTerms();
    @DefaultMessage("The Profile of")
    String partyTheProfileOf();
    @DefaultMessage("Time")
    String partyTime();
    @DefaultMessage("To be paid to:")
    String partyToBePaidTo();
    @DefaultMessage("To be received from:")
    String partyToBeReceivedFrom();
    @DefaultMessage("To Cart")
    String partyToCart();
    @DefaultMessage("->Closed")
    String partyToComplete();
    @DefaultMessage("To Contact Mech")
    String partyToContactMech();
    @DefaultMessage("To Email Address")
    String partyToEmailAddress();
    @DefaultMessage("To Name")
    String partyToName();
    @DefaultMessage("Total")
    String partyTotal();
    @DefaultMessage("Total Years Work Experience")
    String partyTotalYearsWorkExperience();
    @DefaultMessage("Total Years Work Experience is not a valid number")
    String partyTotalYearsWorkNotValidNumber();
    @DefaultMessage("Type")
    String partyType();
    @DefaultMessage("Party Type Id")
    String partyTypeId();
    @DefaultMessage("URI")
    String partyURI();
    @DefaultMessage("Unknown")
    String partyUnknown();
    @DefaultMessage("Security Error: to run updatePartyAttribute you must have the PARTYMGR_UPDATE or PARTYMGR_ADMIN permission")
    String partyUpdateAttributePermissionError();
    @DefaultMessage("Security Error: to run updateCommunicationEvent you must have the PARTYMGR_UPDATE or PARTYMGR_ADMIN permission")
    String partyUpdateCommunicationEventPermissionError();
    @DefaultMessage("Security Error: to run updatePartyClassificationGroup you must have the PARTYMGR_UPDATE or PARTYMGR_ADMIN permission")
    String partyUpdatePartyClassificationGroupPermissionError();
    @DefaultMessage("Security Error: to run updatePartyClassification you must have the PARTYMGR_UPDATE or PARTYMGR_ADMIN permission")
    String partyUpdatePartyClassificationPermissionError();
    @DefaultMessage("Security Error: to run updateVendor you must have the PARTYMGR_UPDATE or PARTYMGR_ADMIN permission")
    String partyUpdateVendorPermissionError();
    @DefaultMessage("Security Error: to run updateWebSiteRole you must have the PARTYMGR_UPDATE or PARTYMGR_ADMIN permission")
    String partyUpdateWebSiteRolePermissionError();
    @DefaultMessage("Use Current Address")
    String partyUseCurrentAddress();
    @DefaultMessage("User Created")
    String partyUserCreated();
    @DefaultMessage("User Login")
    String partyUserLogin();
    @DefaultMessage("Change UserLogin Password")
    String partyUserLoginChangePassword();
    @DefaultMessage("User Login Id")
    String partyUserLoginId();
    @DefaultMessage("Username is Missing")
    String partyUserLoginMissingError();
    @DefaultMessage("Update UserLogin Security Settings")
    String partyUserLoginUpdateSecuritySettings();
    @DefaultMessage("User Logins")
    String partyUserLogins();
    @DefaultMessage("UserLogins for SecurityGroup with ID")
    String partyUserLoginsForSecurityGroup();
    @DefaultMessage("User Name(s)")
    String partyUserName();
    @DefaultMessage("Username in use, please choose another.")
    String partyUserNameInUse();
    @DefaultMessage("Username is missing")
    String partyUserNameMissing();
    @DefaultMessage("Value from party level")
    String partyValueFromPartyLevel();
    @DefaultMessage("Value from rateType level")
    String partyValueFromRateTypeLevel();
    @DefaultMessage("Value from workeffort level")
    String partyValueFromWorkEffortLevel();
    @DefaultMessage("Vendor")
    String partyVendor();
    @DefaultMessage("Vendor Information")
    String partyVendorInformation();
    @DefaultMessage("View Cert")
    String partyViewCert();
    @DefaultMessage("View Communication Orders")
    String partyViewCommOrders();
    @DefaultMessage("View Communication Products")
    String partyViewCommProducts();
    @DefaultMessage("View Communication Event")
    String partyViewCommunicationEvent();
    @DefaultMessage("View Image")
    String partyViewImage();
    @DefaultMessage("View Name")
    String partyViewName();
    @DefaultMessage("Security Error: to run getPostalAddressBoundary you must have the PARTY_VIEW or PARTY_ADMIN permission")
    String partyViewPostalAddressBoundaryPermissionError();
    @DefaultMessage("View Party Segment Roles")
    String partyViewSegmentRoles();
    @DefaultMessage("Visit Detail")
    String partyVisitDetail();
    @DefaultMessage("VisitID / SessionID")
    String partyVisitIDSessionID();
    @DefaultMessage("Visit Id")
    String partyVisitId();
    @DefaultMessage("Visit Listing")
    String partyVisitListing();
    @DefaultMessage("Visitor ID")
    String partyVisitorId();
    @DefaultMessage("Visits")
    String partyVisits();
    @DefaultMessage("Web Address Successfully created.")
    String partyWebAddressSuccessfullyCreated();
    @DefaultMessage("Web Address successfully updated.")
    String partyWebAddressSuccessfullyUpdated();
    @DefaultMessage("WebApp")
    String partyWebApp();
    @DefaultMessage("Weight")
    String partyWeight();
    @DefaultMessage("Weight is not a valid number")
    String partyWeightNotValidNumber();
    @DefaultMessage("Years Work")
    String partyYearsWork();
    @DefaultMessage("You have")
    String partyYouHave();
    @DefaultMessage("Zip/Postal Code")
    String partyZipCode();
    @DefaultMessage("Zip/Postal Code is missing")
    String partyZipCodeMissing();
    @DefaultMessage("Area Code")
    String phoneAreaCode();
    @DefaultMessage("Country Code")
    String phoneCountryCode();
    @DefaultMessage("Phone Number")
    String phoneNumber();
    @DefaultMessage("PortalPageNotFound")
    String portalPageNotFound(String parameters_portalPageId);
    @DefaultMessage("PortalPageNotOwned")
    String portalPageNotOwned(String portalPage_portalPageName, String portalPage_portalPageId);
    @DefaultMessage("Postal Code")
    String postalCode();
    @DefaultMessage("Postal Code Extension")
    String postalCodeExt();
    @DefaultMessage("Admin Allow (One)")
    String prodCatalogCategoryType_description_PCCT_ADMIN_ALLW();
    @DefaultMessage("Browse Root (One)")
    String prodCatalogCategoryType_description_PCCT_BROWSE_ROOT();
    @DefaultMessage("Most Popular (One)")
    String prodCatalogCategoryType_description_PCCT_MOST_POPULAR();
    @DefaultMessage("Other Search (Many)")
    String prodCatalogCategoryType_description_PCCT_OTHER_SEARCH();
    @DefaultMessage("Promotions (One)")
    String prodCatalogCategoryType_description_PCCT_PROMOTIONS();
    @DefaultMessage("Purchase Allow (One)")
    String prodCatalogCategoryType_description_PCCT_PURCH_ALLW();
    @DefaultMessage("Quick Add (Many)")
    String prodCatalogCategoryType_description_PCCT_QUICK_ADD();
    @DefaultMessage("Default Search (One)")
    String prodCatalogCategoryType_description_PCCT_SEARCH();
    @DefaultMessage("View Allow (One)")
    String prodCatalogCategoryType_description_PCCT_VIEW_ALLW();
    @DefaultMessage("What''s New (One)")
    String prodCatalogCategoryType_description_PCCT_WHATS_NEW();
    @DefaultMessage("Description")
    String prodConfItemContentType_description_DESCRIPTION();
    @DefaultMessage("Image")
    String prodConfItemContentType_description_IMAGE_URL();
    @DefaultMessage("Instructions")
    String prodConfItemContentType_description_INSTRUCTIONS();
    @DefaultMessage("Description - Long")
    String prodConfItemContentType_description_LONG_DESCRIPTION();
    @DefaultMessage("Abbrev")
    String productAbbrev();
    @DefaultMessage("Abbreviation")
    String productAbbreviation();
    @DefaultMessage("Accept UPS Shipment Confirmation")
    String productAcceptUpsShipmentConfirmation();
    @DefaultMessage("Account Type")
    String productAccountType();
    @DefaultMessage("Accounts")
    String productAccounts();
    @DefaultMessage("Action Type Amount")
    String productActionTypeAmount();
    @DefaultMessage("ActionType, Order Adjustment Type, Quantity, Item ID, Party ID Limit")
    String productActionTypeOrderAdjustmentTypeQuantityItemPartyLimit();
    @DefaultMessage("ActionType, Quantity, Amount, Item ID, Party ID")
    String productActionUpdateFields();
    @DefaultMessage("Actions")
    String productActions();
    @DefaultMessage("Activation Number")
    String productActivationNumber();
    @DefaultMessage("Active and Inactive")
    String productActiveAndInactive();
    @DefaultMessage("Active only")
    String productActiveOnly();
    @DefaultMessage("Actual Other")
    String productActualOther();
    @DefaultMessage("Actual Services")
    String productActualServices();
    @DefaultMessage("Actual (Start-Arrive)")
    String productActualStartArrive();
    @DefaultMessage("Actual Total")
    String productActualTotal();
    @DefaultMessage("Actual Transport")
    String productActualTransport();
    @DefaultMessage("Add Additional Images")
    String productAddAdditionalImages();
    @DefaultMessage("Add a Category to this Catalog (select Category and Type, then enter optional From Date)")
    String productAddCatalogProdCat();
    @DefaultMessage("Add a Catalog to this Category (select Catalog and Type, then enter optional From Date)")
    String productAddCatalogProductCategory();
    @DefaultMessage("Add Category Child")
    String productAddCategoryChild();
    @DefaultMessage("Add Category GL Account")
    String productAddCategoryGlAccount();
    @DefaultMessage("Add Category Parent")
    String productAddCategoryParent();
    @DefaultMessage("Add Communication Event")
    String productAddCommunicationEvent();
    @DefaultMessage("Add Content to Category")
    String productAddContentCategory();
    @DefaultMessage("Add Content to Product")
    String productAddContentProduct();
    @DefaultMessage("Add Content to Product Config Item")
    String productAddContentProductConfigItem();
    @DefaultMessage("Add New Cost Component")
    String productAddCostComponent();
    @DefaultMessage("Add Email")
    String productAddEmail();
    @DefaultMessage("Add Facility")
    String productAddFacility();
    @DefaultMessage("Add Facility Content")
    String productAddFacilityContent();
    @DefaultMessage("Add Facility Group Member")
    String productAddFacilityGroupMember();
    @DefaultMessage("Add Facility Group Party Role")
    String productAddFacilityGroupPartyRole();
    @DefaultMessage("Add Facility Party Role")
    String productAddFacilityPartyRole();
    @DefaultMessage("Add Feature")
    String productAddFeature();
    @DefaultMessage("Add Feature Interaction")
    String productAddFeatureInteraction();
    @DefaultMessage("new features to this category")
    String productAddFeatureToCategory();
    @DefaultMessage("Add Feature to Results")
    String productAddFeatureToResults();
    @DefaultMessage("Add Feature Type")
    String productAddFeatureType();
    @DefaultMessage("Add Features")
    String productAddFeatures();
    @DefaultMessage("Add From Item")
    String productAddFromItem();
    @DefaultMessage("Add GL Account")
    String productAddGlAccount();
    @DefaultMessage("Add Items From Inventory")
    String productAddItemsFromInventory();
    @DefaultMessage("Add Items to Shipment")
    String productAddItemsShipment();
    @DefaultMessage("Add Package Info")
    String productAddPackageInfo();
    @DefaultMessage("Add Party Id")
    String productAddPartyId();
    @DefaultMessage("Add Price")
    String productAddPrice();
    @DefaultMessage("Add Price Rule")
    String productAddPriceRule();
    @DefaultMessage("Add Product")
    String productAddProduct();
    @DefaultMessage("Add Product Attribute (enter Name, Value and Type)")
    String productAddProductAttributeNameValueType();
    @DefaultMessage("Add Product Category Content (select Content Id, enter From Date):")
    String productAddProductCategoryContentFromDate();
    @DefaultMessage("Add Product Category Member")
    String productAddProductCategoryMember();
    @DefaultMessage("Add Product Category Member (select Category, enter From Date)")
    String productAddProductCategoryMemberFromDate();
    @DefaultMessage("Add Product Content (select Content Id, enter From Date):")
    String productAddProductContentFromDate();
    @DefaultMessage("Add Product Feature From Category or Group")
    String productAddProductFeatureFromCategory();
    @DefaultMessage("Add Product Feature From Group")
    String productAddProductFeatureFromGroup();
    @DefaultMessage("Add Product Feature with ID")
    String productAddProductFeatureID();
    @DefaultMessage("Adding Product Features in Bulk")
    String productAddProductFeatureInBulk();
    @DefaultMessage("Add Product Feature with Type and ID Code")
    String productAddProductFeatureTypeId();
    @DefaultMessage("Add product keyword")
    String productAddProductKeyword();
    @DefaultMessage("Add Products in this Category to the Cart using Default Quantities")
    String productAddProductsUsingDefaultQuantities();
    @DefaultMessage("Add New Promo Rule")
    String productAddPromoRule();
    @DefaultMessage("Add Results To")
    String productAddResultsTo();
    @DefaultMessage("Add Route Segment Info")
    String productAddRouteSegmentInfo();
    @DefaultMessage("Add Selectable Feature")
    String productAddSelectableFeature();
    @DefaultMessage("Add Store Promo")
    String productAddStorePromo();
    @DefaultMessage("Add Store Promo (select Promo, enter optional From Date)")
    String productAddStorePromoOptionalDate();
    @DefaultMessage("Add to Category")
    String productAddToCategory();
    @DefaultMessage("Add To Compare")
    String productAddToCompare();
    @DefaultMessage("ProductAddToCompareListSuccess")
    String productAddToCompareListSuccess(String name);
    @DefaultMessage("Add to Package")
    String productAddToPackage();
    @DefaultMessage("Add to shopping list")
    String productAddToShoppingList();
    @DefaultMessage("Additional Shipping Charge")
    String productAdditionalShippingCharge();
    @DefaultMessage("Addresses")
    String productAddresses();
    @DefaultMessage("Advanced Search")
    String productAdvancedSearch();
    @DefaultMessage("Advanced Search in")
    String productAdvancedSearchIn();
    @DefaultMessage("Advanced Search in Category")
    String productAdvancedSearchInCategory();
    @DefaultMessage("Product Aggregated Price")
    String productAggregatedPrice();
    @DefaultMessage("Agreements")
    String productAgreements();
    @DefaultMessage("Aisle")
    String productAisle();
    @DefaultMessage("Allow Co")
    String productAllowCo();
    @DefaultMessage("Allow Company Addr")
    String productAllowCoAddr();
    @DefaultMessage("Used with allow company address")
    String productAllowMessage();
    @DefaultMessage("Allow USPS")
    String productAllowUSPS();
    @DefaultMessage("Allow USPS Addr (PO Box, RR, etc)")
    String productAllowUSPSAddr();
    @DefaultMessage("Customers who bought this item also bought:")
    String productAlsoBought();
    @DefaultMessage("Alternate")
    String productAlternate();
    @DefaultMessage("Alternate KeyWord Thesaurus")
    String productAlternateKeyWordThesaurus();
    @DefaultMessage("Amount")
    String productAmount();
    @DefaultMessage("Amount Uom Type Id")
    String productAmountUomTypeId();
    @DefaultMessage("And Apply Features to Product with ID")
    String productAndApplyFeaturesToProductWithId();
    @DefaultMessage("AND container")
    String productAndContainer();
    @DefaultMessage("AND quantity OnHand")
    String productAndQuantityOnHand();
    @DefaultMessage("Any Catalog")
    String productAnyCatalog();
    @DefaultMessage("Any Category")
    String productAnyCategory();
    @DefaultMessage("Any Facility")
    String productAnyFacility();
    @DefaultMessage("- Any -")
    String productAnyFeatureType();
    @DefaultMessage("Any Shipment Status")
    String productAnyShipmentStatus();
    @DefaultMessage("Any Shipment Type")
    String productAnyShipmentType();
    @DefaultMessage("Appl Type")
    String productApplType();
    @DefaultMessage("Apply Features From Category")
    String productApplyFeatureGroupFromCategory();
    @DefaultMessage("Apply Features To Category")
    String productApplyFeatureGroupToCategory();
    @DefaultMessage("Apply Features From Category")
    String productApplyFeaturesFromCategory();
    @DefaultMessage("Apply To All")
    String productApplyToAll();
    @DefaultMessage("should generally be Approved before shipping")
    String productApprovedBeforeShipping();
    @DefaultMessage("Area")
    String productArea();
    @DefaultMessage("Arrival")
    String productArrival();
    @DefaultMessage("Rental")
    String productAssetUsage();
    @DefaultMessage("Assign Picker")
    String productAssignPicker();
    @DefaultMessage("Also Bought")
    String productAssocType_description_ALSO_BOUGHT();
    @DefaultMessage("Engineering Bill of Materials")
    String productAssocType_description_ENGINEER_COMPONENT();
    @DefaultMessage("Manufacturing Bill of Materials")
    String productAssocType_description_MANUF_COMPONENT();
    @DefaultMessage("Marketing Package")
    String productAssocType_description_MARKETING_PACKAGE();
    @DefaultMessage("Marketing Package Auto")
    String productAssocType_description_MARKETING_PKG_AUTO();
    @DefaultMessage("Accessory")
    String productAssocType_description_PRODUCT_ACCESSORY();
    @DefaultMessage("Auto Reorder (needs recurrenceInfoId)")
    String productAssocType_description_PRODUCT_AUTORO();
    @DefaultMessage("Complementary or Cross-Sell")
    String productAssocType_description_PRODUCT_COMPLEMENT();
    @DefaultMessage("Actual Product Component")
    String productAssocType_description_PRODUCT_COMPONENT();
    @DefaultMessage("Configurable product instance")
    String productAssocType_description_PRODUCT_CONF();
    @DefaultMessage("Incompatable")
    String productAssocType_description_PRODUCT_INCOMPATABLE();
    @DefaultMessage("Product Manufactured As")
    String productAssocType_description_PRODUCT_MANUFACTURED();
    @DefaultMessage("New Version, Replacement")
    String productAssocType_description_PRODUCT_OBSOLESCENCE();
    @DefaultMessage("Refurbished Equivalent")
    String productAssocType_description_PRODUCT_REFURB();
    @DefaultMessage("Repair Service")
    String productAssocType_description_PRODUCT_REPAIR_SRV();
    @DefaultMessage("Revision")
    String productAssocType_description_PRODUCT_REVISION();
    @DefaultMessage("Equivalent or Substitute")
    String productAssocType_description_PRODUCT_SUBSTITUTE();
    @DefaultMessage("Upgrade or Up-Sell")
    String productAssocType_description_PRODUCT_UPGRADE();
    @DefaultMessage("Product Variant")
    String productAssocType_description_PRODUCT_VARIANT();
    @DefaultMessage("Unique Item")
    String productAssocType_description_UNIQUE_ITEM();
    @DefaultMessage("Associate Party to Category (enter Party ID, select Type, then enter optional From Date)")
    String productAssociatePartyToCategory();
    @DefaultMessage("Associate Party to Product (enter Party ID, select Type, then enter optional From Date)")
    String productAssociatePartyToProduct();
    @DefaultMessage("ProductAssociationNotFound")
    String productAssociationNotFound(String productId, String productIdTo, String productAssocTypeId, String fromDate);
    @DefaultMessage("Association Type")
    String productAssociationType();
    @DefaultMessage("Association Type ID")
    String productAssociationTypeId();
    @DefaultMessage("Associations")
    String productAssociations();
    @DefaultMessage("Associations FROM this Product to")
    String productAssociationsFromProduct();
    @DefaultMessage("Associations TO this Product from")
    String productAssociationsToProduct();
    @DefaultMessage("Assocs")
    String productAssocs();
    @DefaultMessage("ATP")
    String productAtp();
    @DefaultMessage("Atp/Qoh")
    String productAtpQoh();
    @DefaultMessage("ATP/QOH or Serial#")
    String productAtpQohSerial();
    @DefaultMessage("Attachment Screen Location (XSL-FO)")
    String productAttachmentScreenLocation();
    @DefaultMessage("Attributes")
    String productAttributes();
    @DefaultMessage("Auto-Calculate Costs")
    String productAutoCreateCosts();
    @DefaultMessage("AutoCreateKeywords")
    String productAutoCreateKeywords();
    @DefaultMessage("Auto Create Keywords for All Products")
    String productAutoCreateKeywordsForAllProducts();
    @DefaultMessage("Available")
    String productAvailable();
    @DefaultMessage("Available from date")
    String productAvailableFromDate();
    @DefaultMessage("Available To Promise / Quantity On Hand")
    String productAvailablePromiseQuantityHand();
    @DefaultMessage("Available thru date")
    String productAvailableThruDate();
    @DefaultMessage("Available To Promise")
    String productAvailableToPromise();
    @DefaultMessage("Average Cost")
    String productAverageCost();
    @DefaultMessage("Back Orders")
    String productBackOrders();
    @DefaultMessage("Back to Edit Category")
    String productBackToEditCategory();
    @DefaultMessage("Barcode")
    String productBarcode();
    @DefaultMessage("Base")
    String productBase();
    @DefaultMessage("Base Prc")
    String productBasePrc();
    @DefaultMessage("Be The First To Review This Product!")
    String productBeTheFirstToReviewThisProduct();
    @DefaultMessage("Best Selling Products of")
    String productBestSellingProductsOf();
    @DefaultMessage("Billing Weight & UOM")
    String productBillingWeightUom();
    @DefaultMessage("Bin Num")
    String productBinNum();
    @DefaultMessage("Bin Number")
    String productBinNumber();
    @DefaultMessage("Body Screen Location")
    String productBodyScreenLocation();
    @DefaultMessage("Box")
    String productBox();
    @DefaultMessage("Brand Name")
    String productBrandName();
    @DefaultMessage("Browse Blogs")
    String productBrowseBlogs();
    @DefaultMessage("Browse Catalogs")
    String productBrowseCatalogs();
    @DefaultMessage("Browse Categories")
    String productBrowseCategories();
    @DefaultMessage("Browse Content")
    String productBrowseContent();
    @DefaultMessage("Browse Forums")
    String productBrowseForums();
    @DefaultMessage("Bulk Item")
    String productBulkItem();
    @DefaultMessage("By Date")
    String productByDate();
    @DefaultMessage("By Inventory Item")
    String productByInventoryItem();
    @DefaultMessage("By Product")
    String productByProduct();
    @DefaultMessage("Cannot review an unknown product")
    String productCannotReviewUnKnownProduct();
    @DefaultMessage("Carrier")
    String productCarrier();
    @DefaultMessage("ProductCarrierId")
    String productCarrierId();
    @DefaultMessage("Carrier Service Code")
    String productCarrierServiceCode();
    @DefaultMessage("Carrier Shipment Method")
    String productCarrierShipmentMethod();
    @DefaultMessage("Carrier Shipment Methods")
    String productCarrierShipmentMethods();
    @DefaultMessage("Carrier Status")
    String productCarrierStatus();
    @DefaultMessage("Catalog")
    String productCatalog();
    @DefaultMessage("Catalog Administration Main Page")
    String productCatalogAdministrationMainPage();
    @DefaultMessage("Product Catalog Category Type")
    String productCatalogCategoryType();
    @DefaultMessage("OFBiz: Catalog Manager")
    String productCatalogCompanyName();
    @DefaultMessage("Catalog Detail List")
    String productCatalogDetailList();
    @DefaultMessage("Catalog [ID]")
    String productCatalogId();
    @DefaultMessage("Catalog Manager")
    String productCatalogManager();
    @DefaultMessage("Catalog Manager Application")
    String productCatalogManagerApplication();
    @DefaultMessage("This application is primarily intended for those responsible for the maintenance of product catalog related information")
    String productCatalogManagerIsFor();
    @DefaultMessage("Catalog Name")
    String productCatalogName();
    @DefaultMessage("Catalog Name [Id]")
    String productCatalogNameId();
    @DefaultMessage("You do not have permission to view this page. (\"CATALOG_VIEW\" or \"CATALOG_ADMIN\" needed)")
    String productCatalogViewPermissionError();
    @DefaultMessage("Catalogs")
    String productCatalogs();
    @DefaultMessage("Categories")
    String productCategories();
    @DefaultMessage("Categories for")
    String productCategoriesFor();
    @DefaultMessage("Category")
    String productCategory();
    @DefaultMessage("Category Attributes")
    String productCategoryAttributes();
    @DefaultMessage("Content")
    String productCategoryContent();
    @DefaultMessage("Category Image Alt Text")
    String productCategoryContentType_description_CATEGORY_IMAGE_ALT();
    @DefaultMessage("Category Image URL")
    String productCategoryContentType_description_CATEGORY_IMAGE_URL();
    @DefaultMessage("Category Name")
    String productCategoryContentType_description_CATEGORY_NAME();
    @DefaultMessage("Description")
    String productCategoryContentType_description_DESCRIPTION();
    @DefaultMessage("Footer")
    String productCategoryContentType_description_FOOTER();
    @DefaultMessage("Link 1 Alt Text")
    String productCategoryContentType_description_LINK1_ALT_TEXT();
    @DefaultMessage("Link 2 Alt Text")
    String productCategoryContentType_description_LINK2_ALT_TEXT();
    @DefaultMessage("Description - Long")
    String productCategoryContentType_description_LONG_DESCRIPTION();
    @DefaultMessage("Category Description")
    String productCategoryDescription();
    @DefaultMessage("Category ID")
    String productCategoryId();
    @DefaultMessage("Category Image URL")
    String productCategoryImageUrl();
    @DefaultMessage("Links")
    String productCategoryLinks();
    @DefaultMessage("Category Members")
    String productCategoryMembers();
    @DefaultMessage("Category not found for Category ID")
    String productCategoryNotFoundForCategoryID();
    @DefaultMessage("Category Page")
    String productCategoryPage();
    @DefaultMessage("Products from this category")
    String productCategoryProducts();
    @DefaultMessage("Permission required to add product to \"PurchaseAllow\" category")
    String productCategoryPurchaseAllowPermReqd();
    @DefaultMessage("Category Rollup : Child Categories")
    String productCategoryRollupChildCategories();
    @DefaultMessage("Category Rollup : Parent Categories")
    String productCategoryRollupParentCategories();
    @DefaultMessage("Category (select Category and enter fromDate)")
    String productCategorySelectCategoryAndEnterFromDate();
    @DefaultMessage("Catalog")
    String productCategoryType_description_CATALOG_CATEGORY();
    @DefaultMessage("Cross Sell")
    String productCategoryType_description_CROSS_SELL_CATEGORY();
    @DefaultMessage("Industry")
    String productCategoryType_description_INDUSTRY_CATEGORY();
    @DefaultMessage("Internal")
    String productCategoryType_description_INTERNAL_CATEGORY();
    @DefaultMessage("Materials")
    String productCategoryType_description_MATERIALS_CATEGORY();
    @DefaultMessage("Mix and Match")
    String productCategoryType_description_MIXMATCH_CATEGORY();
    @DefaultMessage("Quick Add")
    String productCategoryType_description_QUICKADD_CATEGORY();
    @DefaultMessage("Search")
    String productCategoryType_description_SEARCH_CATEGORY();
    @DefaultMessage("Tax")
    String productCategoryType_description_TAX_CATEGORY();
    @DefaultMessage("Usage")
    String productCategoryType_description_USAGE_CATEGORY();
    @DefaultMessage("Upload Category Image")
    String productCategoryUploadImage();
    @DefaultMessage("Permission required to add product to \"ViewAllow\" category")
    String productCategoryViewAllowPermReqd();
    @DefaultMessage("Categories With No Parent Categories")
    String productCategoryWithNoParent();
    @DefaultMessage("Category [ID]")
    String productCategory_Id();
    @DefaultMessage("If you change Per Unit Price then it will also get update in Supplier product last price and order item price, would you like to continue.")
    String productChangePerUnitPrice();
    @DefaultMessage("This cannot be changed without re-creating the Product Catalog.")
    String productChangeWithoutProductCatalog();
    @DefaultMessage("Channel")
    String productChannel();
    @DefaultMessage("Charge Shipping")
    String productChargeShipping();
    @DefaultMessage("Check Existing")
    String productCheckExisting();
    @DefaultMessage("Check Inventory")
    String productCheckInventory();
    @DefaultMessage("Checking for Existing Product in Category")
    String productCheckingForExistingProductInCategory();
    @DefaultMessage("Child")
    String productChild();
    @DefaultMessage("Child Category ID")
    String productChildCategoryId();
    @DefaultMessage("Child Group ID")
    String productChildGroupId();
    @DefaultMessage("Choose Catalog")
    String productChooseCatalog();
    @DefaultMessage("Choose a Feature Category")
    String productChooseFeatureCategory();
    @DefaultMessage("Choose a Feature Group")
    String productChooseFeatureGroup();
    @DefaultMessage("Choose QuickAdd Category")
    String productChooseQuickAddCategory();
    @DefaultMessage("Choose Top Category")
    String productChooseTopCategory();
    @DefaultMessage("Compare list successfully cleared")
    String productClearCompareListSuccess();
    @DefaultMessage("Comments")
    String productComments();
    @DefaultMessage("Commissions")
    String productCommissions();
    @DefaultMessage("Part of the Open For Business Family of Open Source Software")
    String productCompanySubtitle();
    @DefaultMessage("Compare At")
    String productCompareAtPrice();
    @DefaultMessage("Compare Products")
    String productCompareProducts();
    @DefaultMessage("Complete")
    String productComplete();
    @DefaultMessage("Force Complete")
    String productCompleteForce();
    @DefaultMessage("Complete Requested Transfers")
    String productCompleteRequestedTransfers();
    @DefaultMessage("Components")
    String productComponents();
    @DefaultMessage("Conditions")
    String productConditions();
    @DefaultMessage("Config Item")
    String productConfigItem();
    @DefaultMessage("Configurations")
    String productConfigItems();
    @DefaultMessage("Config Items Found")
    String productConfigItemsFound();
    @DefaultMessage("Config Option List")
    String productConfigOptionList();
    @DefaultMessage("Config Options")
    String productConfigOptions();
    @DefaultMessage("Configurations")
    String productConfigs();
    @DefaultMessage("Confirm selected moves")
    String productConfirmSelectedMoves();
    @DefaultMessage("Confirm Shipment with DHL")
    String productConfirmShipmentDHL();
    @DefaultMessage("Confirm Shipment with Fedex")
    String productConfirmShipmentFedex();
    @DefaultMessage("Confirm Shipment with UPS")
    String productConfirmShipmentUps();
    @DefaultMessage("Contact Type Information")
    String productContactTypeInformation();
    @DefaultMessage("C")
    String productContainerLetter();
    @DefaultMessage("Content")
    String productContent();
    @DefaultMessage("Html Body")
    String productContentHtmlBody();
    @DefaultMessage("Content ID")
    String productContentId();
    @DefaultMessage("Content Info Text")
    String productContentInfoText();
    @DefaultMessage("Content Path Prefix")
    String productContentPathPrefix();
    @DefaultMessage("Plain Body")
    String productContentPlainBody();
    @DefaultMessage("Image - Additional View 1")
    String productContentType_description_ADDITIONAL_IMAGE_1();
    @DefaultMessage("Image - Additional View 2")
    String productContentType_description_ADDITIONAL_IMAGE_2();
    @DefaultMessage("Image - Additional View 3")
    String productContentType_description_ADDITIONAL_IMAGE_3();
    @DefaultMessage("Image - Additional View 4")
    String productContentType_description_ADDITIONAL_IMAGE_4();
    @DefaultMessage("Add To Cart Image")
    String productContentType_description_ADDTOCART_IMAGE();
    @DefaultMessage("Add To Cart Label")
    String productContentType_description_ADDTOCART_LABEL();
    @DefaultMessage("Delivery Info")
    String productContentType_description_DELIVERY_INFO();
    @DefaultMessage("Description")
    String productContentType_description_DESCRIPTION();
    @DefaultMessage("Image Alt Text - Detail")
    String productContentType_description_DETAIL_IMAGE_ALT();
    @DefaultMessage("Image - Detail")
    String productContentType_description_DETAIL_IMAGE_URL();
    @DefaultMessage("Digital Download")
    String productContentType_description_DIGITAL_DOWNLOAD();
    @DefaultMessage("Directions")
    String productContentType_description_DIRECTIONS();
    @DefaultMessage("Fulfillment Email")
    String productContentType_description_FULFILLMENT_EMAIL();
    @DefaultMessage("Fulfillment External (Async)")
    String productContentType_description_FULFILLMENT_EXTASYNC();
    @DefaultMessage("Fulfillment External (Sync)")
    String productContentType_description_FULFILLMENT_EXTSYNC();
    @DefaultMessage("Ingredients")
    String productContentType_description_INGREDIENTS();
    @DefaultMessage("Image Alt Text - Large")
    String productContentType_description_LARGE_IMAGE_ALT();
    @DefaultMessage("Image - Large")
    String productContentType_description_LARGE_IMAGE_URL();
    @DefaultMessage("Description - Long")
    String productContentType_description_LONG_DESCRIPTION();
    @DefaultMessage("Image Alt Text - Medium")
    String productContentType_description_MEDIUM_IMAGE_ALT();
    @DefaultMessage("Image - Medium")
    String productContentType_description_MEDIUM_IMAGE_URL();
    @DefaultMessage("Online Access")
    String productContentType_description_ONLINE_ACCESS();
    @DefaultMessage("Image - Original")
    String productContentType_description_ORIGINAL_IMAGE_URL();
    @DefaultMessage("Price Detail Text")
    String productContentType_description_PRICE_DETAIL_TEXT();
    @DefaultMessage("Product Name")
    String productContentType_description_PRODUCT_NAME();
    @DefaultMessage("Short Sales Pitch")
    String productContentType_description_SHORT_SALES_PITCH();
    @DefaultMessage("Image Alt Text - Small")
    String productContentType_description_SMALL_IMAGE_ALT();
    @DefaultMessage("Image - Small")
    String productContentType_description_SMALL_IMAGE_URL();
    @DefaultMessage("Special Instructions")
    String productContentType_description_SPECIALINSTRUCTIONS();
    @DefaultMessage("Terms and Conditions")
    String productContentType_description_TERMS_AND_CONDS();
    @DefaultMessage("Unique Ingredients")
    String productContentType_description_UNIQUE_INGREDIENTS();
    @DefaultMessage("Warnings")
    String productContentType_description_WARNINGS();
    @DefaultMessage("Content [ID]")
    String productContent_Id();
    @DefaultMessage("Copy Product Category Members to Another Category")
    String productCopyProductCategoryMembersToAnotherCategory();
    @DefaultMessage("Cost Price")
    String productCostPrice();
    @DefaultMessage("Costs")
    String productCosts();
    @DefaultMessage("Could Not Find Facility with ID")
    String productCouldNotFindFacilityWithId();
    @DefaultMessage("Could Not Find Product with ID")
    String productCouldNotFindProduct();
    @DefaultMessage("Could not Find Product Catalog with Id")
    String productCouldNotFindProductCatalogWithId();
    @DefaultMessage("Could not Find Product Category with Id")
    String productCouldNotFindProductCategoryWithId();
    @DefaultMessage("Could Not Find Product Config Item with ID")
    String productCouldNotFindProductConfigItem();
    @DefaultMessage("Could not find Config Item with ID")
    String productCouldNotFindProductConfigItemWithId();
    @DefaultMessage("Could not find Product Feature Type with ID")
    String productCouldNotFindProductFeatureType();
    @DefaultMessage("Could not find ProductPromoCode with ID")
    String productCouldNotFindProductPromoCode();
    @DefaultMessage("Could not find Product Promotion with ID")
    String productCouldNotFindProductPromotion();
    @DefaultMessage("Could not find Shipment with ID")
    String productCouldNotFindProductShipmentWithId();
    @DefaultMessage("Country")
    String productCountry();
    @DefaultMessage("Country of Origin")
    String productCountryOfOrigin();
    @DefaultMessage("Create a Product Feature Category")
    String productCreateAProductFeatureCategory();
    @DefaultMessage("Create information for new supplier")
    String productCreateInformationNewSupplier();
    @DefaultMessage("Create New Catalog")
    String productCreateNewCatalog();
    @DefaultMessage("Create New Category")
    String productCreateNewCategory();
    @DefaultMessage("Create New Config Options")
    String productCreateNewConfigOptions();
    @DefaultMessage("Create New Facility")
    String productCreateNewFacility();
    @DefaultMessage("Create New Feature")
    String productCreateNewFeature();
    @DefaultMessage("Create New Inventory Item for this Facility")
    String productCreateNewInventoryItemFacility();
    @DefaultMessage("Create New Inventory Item for this Product")
    String productCreateNewInventoryItemProduct();
    @DefaultMessage("Create NewProd Catalog")
    String productCreateNewProdCatalog();
    @DefaultMessage("Create New Product")
    String productCreateNewProduct();
    @DefaultMessage("Create New Product Config Item Content")
    String productCreateNewProductConfigItemContent();
    @DefaultMessage("Create New Product Content")
    String productCreateNewProductContent();
    @DefaultMessage("Create New ProductPromo")
    String productCreateNewProductPromo();
    @DefaultMessage("Create New Product Store")
    String productCreateNewProductStore();
    @DefaultMessage("New Web Site")
    String productCreateNewProductStoreWebSite();
    @DefaultMessage("Create Picklist")
    String productCreatePicklist();
    @DefaultMessage("Create Product")
    String productCreateProduct();
    @DefaultMessage("Create a Product Feature Group")
    String productCreateProductFeatureGroup();
    @DefaultMessage("Create Product Feature in This Category")
    String productCreateProductFeatureInThisCategory();
    @DefaultMessage("Create Product in Category")
    String productCreateProductInCategory();
    @DefaultMessage("Create Product in Category Check Existing")
    String productCreateProductInCategoryCheckExisting();
    @DefaultMessage("Thank you, your review was successfully submitted.")
    String productCreateProductReviewSuccess();
    @DefaultMessage("Create ProductStoreRole")
    String productCreateProductStoreRole();
    @DefaultMessage("Create Rule")
    String productCreateRule();
    @DefaultMessage("Create Simple Text Content For Alternate Locale")
    String productCreateSimpleTextContentForAlternateLocale();
    @DefaultMessage("Create Virtual Product")
    String productCreateVirtualProduct();
    @DefaultMessage("Created By User Login")
    String productCreatedByUserLogin();
    @DefaultMessage("Created Date")
    String productCreatedDate();
    @DefaultMessage("created/modified by")
    String productCreatedModifiedBy();
    @DefaultMessage("You might be interested in these as well:")
    String productCrossSell();
    @DefaultMessage("Currency")
    String productCurrency();
    @DefaultMessage("Currency UOM")
    String productCurrencyUom();
    @DefaultMessage("Currency Uom Id")
    String productCurrencyUomId();
    @DefaultMessage("Current package sequence")
    String productCurrentPackageSequence();
    @DefaultMessage("Custom Method")
    String productCustomMethod();
    @DefaultMessage("Customer")
    String productCustomer();
    @DefaultMessage("Customer Rating")
    String productCustomerRating();
    @DefaultMessage("DL")
    String productDL();
    @DefaultMessage("Date Filter")
    String productDateFilter();
    @DefaultMessage("Date Received")
    String productDateReceived();
    @DefaultMessage("Days To Ship")
    String productDaysToShip();
    @DefaultMessage("Default Amount")
    String productDefaultAmount();
    @DefaultMessage("Default Days To Ship")
    String productDefaultDaysToShip();
    @DefaultMessage("Default Price")
    String productDefaultPrice();
    @DefaultMessage("Default Sequence Number")
    String productDefaultSequenceNumber();
    @DefaultMessage("Default Shipment Box Type Id")
    String productDefaultShipmentBoxTypeId();
    @DefaultMessage("Defaults to")
    String productDefaultsTo();
    @DefaultMessage("Defective")
    String productDefective();
    @DefaultMessage("Delete All Keywords")
    String productDeleteAllKeywords();
    @DefaultMessage("Depth")
    String productDepth();
    @DefaultMessage("Depth Uom Id")
    String productDepthUomId();
    @DefaultMessage("Dest")
    String productDest();
    @DefaultMessage("Dest. Facility")
    String productDestFacility();
    @DefaultMessage("Destination")
    String productDestination();
    @DefaultMessage("Destination Facility")
    String productDestinationFacility();
    @DefaultMessage("Destination Facility is")
    String productDestinationFacilityIs();
    @DefaultMessage("Destination Phone Number Id")
    String productDestinationPhoneNumberId();
    @DefaultMessage("Destination Postal Address Id")
    String productDestinationPostalAddressId();
    @DefaultMessage("Detail Image")
    String productDetailImage();
    @DefaultMessage("Detail Screen")
    String productDetailScreen();
    @DefaultMessage("for screens in other files use something like")
    String productDetailScreenMessage();
    @DefaultMessage("example: component://ecommerce/widget/CatalogScreens.xml#categorydetail")
    String productDetailSubScreenTooltip();
    @DefaultMessage("Diameter Uom Id")
    String productDiameterUomId();
    @DefaultMessage("Items with different currencies")
    String productDifferentCurrencies();
    @DefaultMessage("Discount")
    String productDiscount();
    @DefaultMessage("Distinguishing Features")
    String productDistinguishingFeatures();
    @DefaultMessage("Drop Shipment")
    String productDropShipment();
    @DefaultMessage("Duplicate Product")
    String productDuplicateProduct();
    @DefaultMessage("Duplicate a Product Category")
    String productDuplicateProductCategory();
    @DefaultMessage("Duplicate Selected with New ID")
    String productDuplicateProductCategorySelected();
    @DefaultMessage("Duplicate / Remove Selected with New ID")
    String productDuplicateRemoveSelectedWithNewId();
    @DefaultMessage("each Product")
    String productEach();
    @DefaultMessage("Edit Catalog")
    String productEditCatalog();
    @DefaultMessage("Edit Catalog with Catalog ID")
    String productEditCatalogWithCatalogId();
    @DefaultMessage("Edit Category")
    String productEditCategory();
    @DefaultMessage("Edit Category with Category ID")
    String productEditCategoryWithCategoryId();
    @DefaultMessage("Edit Content")
    String productEditContent();
    @DefaultMessage("Edit Facility")
    String productEditFacility();
    @DefaultMessage("Edit Facility Geo Location")
    String productEditFacilityGeoLocation();
    @DefaultMessage("Edit Feature")
    String productEditFeature();
    @DefaultMessage("Product Feature Group Applications")
    String productEditFeatureGroupAppls();
    @DefaultMessage("Edit Feature with ID")
    String productEditFeatureId();
    @DefaultMessage("Edit Features for Feature Category")
    String productEditFeaturesForFeatureCategory();
    @DefaultMessage("Edit Inventory Item with ID")
    String productEditInventoryItemWithId();
    @DefaultMessage("Edit Product")
    String productEditProduct();
    @DefaultMessage("Edit Product Maints")
    String productEditProductMaints();
    @DefaultMessage("Edit Product Meters")
    String productEditProductMeters();
    @DefaultMessage("Edit Product with Product ID")
    String productEditProductWithProductId();
    @DefaultMessage("Edit Shipment")
    String productEditShipment();
    @DefaultMessage("Email Return Shipping Label (UPS)")
    String productEmailReturnShippingLabelUPS();
    @DefaultMessage("Entire Catalog")
    String productEntireCatalog();
    @DefaultMessage("Error: facility")
    String productErrorFacility();
    @DefaultMessage("ProductErrorFacilityIdNotFound")
    String productErrorFacilityIdNotFound(String facilityId);
    @DefaultMessage("Error: No Facility Available")
    String productErrorNoFacilityAvailable();
    @DefaultMessage("ERROR: No packages found for this shipment")
    String productErrorNoPackagesFoundForShipment();
    @DefaultMessage("ERROR: Nothing To Export")
    String productErrorNothingToExport();
    @DefaultMessage("ProductErrorOrderIdNotFound")
    String productErrorOrderIdNotFound(String orderId);
    @DefaultMessage("ProductErrorOrderNotPurchaseOrder")
    String productErrorOrderNotPurchaseOrder(String orderId);
    @DefaultMessage("ERROR: Product not found")
    String productErrorProductNotFound();
    @DefaultMessage("ProductErrorShipmentNotPurchaseShipment")
    String productErrorShipmentNotPurchaseShipment(String shipmentId);
    @DefaultMessage("Error: Type")
    String productErrorType();
    @DefaultMessage("Estimate ID")
    String productEstimateId();
    @DefaultMessage("Estimate Ship Cost")
    String productEstimateShipCost();
    @DefaultMessage("Estimated Arrival Date")
    String productEstimatedArrivalDate();
    @DefaultMessage("Estimated Arrival Event")
    String productEstimatedArrivalEvent();
    @DefaultMessage("Estimated Arrival Work Eff Id")
    String productEstimatedArrivalWorkEffId();
    @DefaultMessage("Estimated Standard Costs")
    String productEstimatedCosts();
    @DefaultMessage("Estimated Dates")
    String productEstimatedDates();
    @DefaultMessage("Estimated Ready Date")
    String productEstimatedReadyDate();
    @DefaultMessage("Estimated Ship Cost")
    String productEstimatedShipCost();
    @DefaultMessage("Estimated Ship Cost for Ship Group")
    String productEstimatedShipCostForShipGroup();
    @DefaultMessage("Estimated Ship Cost for Packages")
    String productEstimatedShipCostPackages();
    @DefaultMessage("Estimated Ship Date")
    String productEstimatedShipDate();
    @DefaultMessage("Estimated Ship Event")
    String productEstimatedShipEvent();
    @DefaultMessage("Estimated Ship Work Eff Id")
    String productEstimatedShipWorkEffId();
    @DefaultMessage("Estimated (Start-Arrive)")
    String productEstimatedStartArrive();
    @DefaultMessage("Exc Feature")
    String productExcFeature();
    @DefaultMessage("Exc Geo")
    String productExcGeo();
    @DefaultMessage("Exclude Feature Group")
    String productExcludeFeature();
    @DefaultMessage("Displays only if all items have no features in this group")
    String productExcludeFeatureMessage();
    @DefaultMessage("Exclude Geo")
    String productExcludeGeo();
    @DefaultMessage("Displays only if ship-to is not in this geo")
    String productExcludeGeoMessage();
    @DefaultMessage("Exclude Variants")
    String productExcludeVariants();
    @DefaultMessage("Existing Inventory Item")
    String productExistingInventoryItem();
    @DefaultMessage("Existing Variant IDs")
    String productExistingVariant();
    @DefaultMessage("Expire All Product Members")
    String productExpireAllProductMembers();
    @DefaultMessage("Expire Date")
    String productExpireDate();
    @DefaultMessage("Expire Results From")
    String productExpireResultsFrom();
    @DefaultMessage("Explode Order Items")
    String productExplodeOrderItems();
    @DefaultMessage("Facilities")
    String productFacilities();
    @DefaultMessage("Facilities List")
    String productFacilitiesList();
    @DefaultMessage("Facility")
    String productFacility();
    @DefaultMessage("ProductFacilityChildren")
    String productFacilityChildren(String facility_facilityName, String facility_facilityId);
    @DefaultMessage("Facility / Container")
    String productFacilityContainer();
    @DefaultMessage("Facility or Container ID")
    String productFacilityContainerId();
    @DefaultMessage("You do not have permission to view this page. (\"FACILITY_CREATE\" or \"FACILITY_ADMIN\" needed)")
    String productFacilityCreatePermissionError();
    @DefaultMessage("Area Unit")
    String productFacilityDefaultAreaUnit();
    @DefaultMessage("Default Inventory Item Type")
    String productFacilityDefaultInventoryItemType();
    @DefaultMessage("Default Weight Unit")
    String productFacilityDefaultWeightUnit();
    @DefaultMessage("Facility Group")
    String productFacilityGroup();
    @DefaultMessage("Facility Group ID")
    String productFacilityGroupId();
    @DefaultMessage("Facility Group List")
    String productFacilityGroupList();
    @DefaultMessage("Facility-Group Member Maintenance")
    String productFacilityGroupMemberMaintenance();
    @DefaultMessage("Facility Group Name [ID]")
    String productFacilityGroupNameId();
    @DefaultMessage("FacilityGroup Rollup : Parent Groups")
    String productFacilityGroupRollupParentGroups();
    @DefaultMessage("Facility Group Type")
    String productFacilityGroupType();
    @DefaultMessage("Facility Groups")
    String productFacilityGroups();
    @DefaultMessage("Facility ID")
    String productFacilityId();
    @DefaultMessage("F")
    String productFacilityLetter();
    @DefaultMessage("Facility Location")
    String productFacilityLocation();
    @DefaultMessage("Facility Locations")
    String productFacilityLocations();
    @DefaultMessage("Facility Manager")
    String productFacilityManager();
    @DefaultMessage("Facility Manager Application")
    String productFacilityManagerApplication();
    @DefaultMessage("Movement")
    String productFacilityMovement();
    @DefaultMessage("Facility Name [ID]")
    String productFacilityNameId();
    @DefaultMessage("Owner")
    String productFacilityOwner();
    @DefaultMessage("ProductFacilityPermissionError")
    String productFacilityPermissionError(String resourceDescription, String mainAction);
    @DefaultMessage("Facility Role Member Maintenance")
    String productFacilityRoleMemberMaintenance();
    @DefaultMessage("Area")
    String productFacilitySize();
    @DefaultMessage("Facility Type")
    String productFacilityType();
    @DefaultMessage("Facility Type ID")
    String productFacilityTypeId();
    @DefaultMessage("You do not have permission to view this page. (\"FACILITY_VIEW\" or \"FACILITY_ADMIN\" needed)")
    String productFacilityViewPermissionError();
    @DefaultMessage("Fast Load Catalog into Cache")
    String productFastLoadCatalogIntoCache();
    @DefaultMessage("Feature")
    String productFeature();
    @DefaultMessage("Distinguishing")
    String productFeatureApplType_description_DISTINGUISHING_FEAT();
    @DefaultMessage("Optional")
    String productFeatureApplType_description_OPTIONAL_FEATURE();
    @DefaultMessage("Required")
    String productFeatureApplType_description_REQUIRED_FEATURE();
    @DefaultMessage("Selectable")
    String productFeatureApplType_description_SELECTABLE_FEATURE();
    @DefaultMessage("Standard")
    String productFeatureApplType_description_STANDARD_FEATURE();
    @DefaultMessage("Feature Application Type")
    String productFeatureApplicationType();
    @DefaultMessage("Feature Appls")
    String productFeatureAppls();
    @DefaultMessage("Product Feature Attributes")
    String productFeatureAttributes();
    @DefaultMessage("Feature Categories and Groups")
    String productFeatureCategoriesGroups();
    @DefaultMessage("Feature Category")
    String productFeatureCategory();
    @DefaultMessage("Attach Features to Category from Products")
    String productFeatureCategoryAttach();
    @DefaultMessage("Hazmat Features")
    String productFeatureCategory_description_1000();
    @DefaultMessage("Model Year Features")
    String productFeatureCategory_description_1001();
    @DefaultMessage("Equipment Class Features")
    String productFeatureCategory_description_1002();
    @DefaultMessage("Gift Card Features")
    String productFeatureCategory_description_2000();
    @DefaultMessage("Account Features")
    String productFeatureCategory_description_2100();
    @DefaultMessage("Taste")
    String productFeatureCategory_description_3000();
    @DefaultMessage("License Features")
    String productFeatureCategory_description_8000();
    @DefaultMessage("Widget Features")
    String productFeatureCategory_description_9000();
    @DefaultMessage("Features")
    String productFeatureCats();
    @DefaultMessage("Finished w/ This Category")
    String productFeatureFinishedWithCategories();
    @DefaultMessage("Feature Group")
    String productFeatureGroup();
    @DefaultMessage("Feature Group Appls")
    String productFeatureGroupAppls();
    @DefaultMessage("FEATURE_IACTN_DEPEND")
    String productFeatureIactnType_description_FEATURE_IACTN_DEPEND();
    @DefaultMessage("Feature IACTN Incomp")
    String productFeatureIactnType_description_FEATURE_IACTN_INCOMP();
    @DefaultMessage("Feature Id")
    String productFeatureId();
    @DefaultMessage("Feature Interaction")
    String productFeatureInteraction();
    @DefaultMessage("Below surcharge(s) will be added per-product * per-feature")
    String productFeatureMessage();
    @DefaultMessage("Per-Feature Percent")
    String productFeaturePerFeaturePercent();
    @DefaultMessage("Per-Feature Price")
    String productFeaturePerFeaturePrice();
    @DefaultMessage("Features group charges")
    String productFeatureTitle();
    @DefaultMessage("Feature Type")
    String productFeatureType();
    @DefaultMessage("Accessory")
    String productFeatureType_description_ACCESSORY();
    @DefaultMessage("Amount")
    String productFeatureType_description_AMOUNT();
    @DefaultMessage("Artist")
    String productFeatureType_description_ARTIST();
    @DefaultMessage("Billing Feature")
    String productFeatureType_description_BILLING_FEATURE();
    @DefaultMessage("Brand")
    String productFeatureType_description_BRAND();
    @DefaultMessage("Care")
    String productFeatureType_description_CARE();
    @DefaultMessage("Color")
    String productFeatureType_description_COLOR();
    @DefaultMessage("Dimension")
    String productFeatureType_description_DIMENSION();
    @DefaultMessage("Equipment Class")
    String productFeatureType_description_EQUIP_CLASS();
    @DefaultMessage("Fabric")
    String productFeatureType_description_FABRIC();
    @DefaultMessage("Genre")
    String productFeatureType_description_GENRE();
    @DefaultMessage("Gift Wrap")
    String productFeatureType_description_GIFT_WRAP();
    @DefaultMessage("Hardware Feature")
    String productFeatureType_description_HARDWARE_FEATURE();
    @DefaultMessage("Hazmat")
    String productFeatureType_description_HAZMAT();
    @DefaultMessage("License")
    String productFeatureType_description_LICENSE();
    @DefaultMessage("Model Year")
    String productFeatureType_description_MODEL_YEAR();
    @DefaultMessage("Net Weight")
    String productFeatureType_description_NET_WEIGHT();
    @DefaultMessage("Origin")
    String productFeatureType_description_ORIGIN();
    @DefaultMessage("Other Feature")
    String productFeatureType_description_OTHER_FEATURE();
    @DefaultMessage("Product Quality")
    String productFeatureType_description_PRODUCT_QUALITY();
    @DefaultMessage("Size")
    String productFeatureType_description_SIZE();
    @DefaultMessage("Software Feature")
    String productFeatureType_description_SOFTWARE_FEATURE();
    @DefaultMessage("Style")
    String productFeatureType_description_STYLE();
    @DefaultMessage("Symptom")
    String productFeatureType_description_SYMPTOM();
    @DefaultMessage("Topic")
    String productFeatureType_description_TOPIC();
    @DefaultMessage("Type")
    String productFeatureType_description_TYPE();
    @DefaultMessage("Warranty")
    String productFeatureType_description_WARRANTY();
    @DefaultMessage("Year Made")
    String productFeatureType_description_YEAR_MADE();
    @DefaultMessage("Feature Types")
    String productFeatureTypes();
    @DefaultMessage("HAZMAT")
    String productFeature_description_HAZMAT();
    @DefaultMessage("Features")
    String productFeatures();
    @DefaultMessage("File")
    String productFile();
    @DefaultMessage("Filtered by Introduction and Sales Discontinuation Dates")
    String productFilterByAvailabilityDates();
    @DefaultMessage("Find Facilities")
    String productFindFacilities();
    @DefaultMessage("Find Location")
    String productFindLocation();
    @DefaultMessage("Find Locations for")
    String productFindLocationsFor();
    @DefaultMessage("Find Orders to pick")
    String productFindOrdersToPick();
    @DefaultMessage("Find Product")
    String productFindProduct();
    @DefaultMessage("Find Product with ID Value")
    String productFindProductWithIdValue();
    @DefaultMessage("Find Subscriptions for Resource")
    String productFindResourceSubscriptions();
    @DefaultMessage("Find Rule")
    String productFindRule();
    @DefaultMessage("Find Shipment(s)")
    String productFindShipment();
    @DefaultMessage("Find Shipment(s)")
    String productFindShipmentTitle();
    @DefaultMessage("Fl. Oz.")
    String productFlOz();
    @DefaultMessage("Flag picking started")
    String productFlagPickingStarted();
    @DefaultMessage("Flat Base Percent")
    String productFlatBasePercent();
    @DefaultMessage("Flat Base Price")
    String productFlatBasePrice();
    @DefaultMessage("Flat Item Price")
    String productFlatItemPrice();
    @DefaultMessage("Flat Shipping Percent")
    String productFlatShippingPercent();
    @DefaultMessage("Flat charges")
    String productFlatTitle();
    @DefaultMessage("from Order")
    String productFromAnOrder();
    @DefaultMessage("From Geo")
    String productFromGeo();
    @DefaultMessage("From Location")
    String productFromLocation();
    @DefaultMessage("Product from order")
    String productFromOrder();
    @DefaultMessage("From Party")
    String productFromParty();
    @DefaultMessage("Future Party / RoleList")
    String productFuturePartyRoleList();
    @DefaultMessage("For something interesting make sure you are logged in, try username:admin, password:ofbiz")
    String productGeneralMessage();
    @DefaultMessage("Generate Shipment Manifest Report")
    String productGenerateShipmentManifestReport();
    @DefaultMessage("Geos")
    String productGeos();
    @DefaultMessage("Get Item")
    String productGetItem();
    @DefaultMessage("GL Account")
    String productGlAccount();
    @DefaultMessage("COGS")
    String productGlAccountType_description_COGS();
    @DefaultMessage("Inventory")
    String productGlAccountType_description_INVENTORY();
    @DefaultMessage("sales")
    String productGlAccountType_description_SALES();
    @DefaultMessage("GL Accounts")
    String productGlAccounts();
    @DefaultMessage("Global")
    String productGlobal();
    @DefaultMessage("Global Price Rule")
    String productGlobalPriceRule();
    @DefaultMessage("Global Price Rules")
    String productGlobalPriceRules();
    @DefaultMessage("Go to Feature Category")
    String productGoToFeatureCategory();
    @DefaultMessage("Good Identification")
    String productGoodIdentification();
    @DefaultMessage("Good Identification Type")
    String productGoodIdentificationType();
    @DefaultMessage("Good Identification Type Value")
    String productGoodIdentificationTypeValue();
    @DefaultMessage("Good Identification Value")
    String productGoodIdentificationValue();
    @DefaultMessage("Goods Receipt")
    String productGoodsReceipt();
    @DefaultMessage("Grams")
    String productGrams();
    @DefaultMessage("Group Member Maintenance")
    String productGroupMemberMaintenance();
    @DefaultMessage("Group Rollup : Add Child Groups")
    String productGroupRollupChildGroupsAdd();
    @DefaultMessage("Group (select Category and enter From Date)")
    String productGroupSelectCategoryFromDate();
    @DefaultMessage("Group (select Group and enter From Date)")
    String productGroupSelectGroupFromDate();
    @DefaultMessage("Groups")
    String productGroups();
    @DefaultMessage("Groups for")
    String productGroupsFor();
    @DefaultMessage("HZ")
    String productHZ();
    @DefaultMessage("Handling Instructions")
    String productHandlingInstructions();
    @DefaultMessage("Header Logo")
    String productHeaderLogo();
    @DefaultMessage("Height")
    String productHeight();
    @DefaultMessage("Height Uom Id")
    String productHeightUomId();
    @DefaultMessage("Hide Empty Items")
    String productHideEmptyItems();
    @DefaultMessage("Hide Grid")
    String productHideGrid();
    @DefaultMessage("High to Low")
    String productHighToLow();
    @DefaultMessage("date/time entries denote that the current time is before the From Date or after the Thru Date. If the From Date is red, association has not started yet; if Thru Date is red, association has expired (and should probably be deleted).")
    String productHighlightedExplanation();
    @DefaultMessage("Host")
    String productHost();
    @DefaultMessage("HTML Search Parameters")
    String productHtmlSearchParameters();
    @DefaultMessage("ID Code")
    String productIdCode();
    @DefaultMessage("ID Seq Num")
    String productIdSeqNum();
    @DefaultMessage("ID Type")
    String productIdType();
    @DefaultMessage("ID Value")
    String productIdValue();
    @DefaultMessage("If not specified defaults to")
    String productIfNotSpecifiedDefaultsIsProductdetail();
    @DefaultMessage("example: /images/categories/linkOne/100.jpg")
    String productImageUrlTooltip();
    @DefaultMessage("In Inventory")
    String productInInventory();
    @DefaultMessage("In Production")
    String productInProduction();
    @DefaultMessage("Inc Feature")
    String productIncFeature();
    @DefaultMessage("Inc FreeShip")
    String productIncFreeship();
    @DefaultMessage("Inc Geo")
    String productIncGeo();
    @DefaultMessage("Include All Sub Categories")
    String productIncludeAllSubCategories();
    @DefaultMessage("Include Feature Group")
    String productIncludeFeature();
    @DefaultMessage("Displays only if all items have all features in this group")
    String productIncludeFeatureMessage();
    @DefaultMessage("Include Free Ship Items")
    String productIncludeFreeship();
    @DefaultMessage("Set to N to hide when the cart contains ONLY free shipping items")
    String productIncludeFreeshipMessage();
    @DefaultMessage("Include Geo")
    String productIncludeGeo();
    @DefaultMessage("Displays only if ship-to is in this geo")
    String productIncludeGeoMessage();
    @DefaultMessage("Include In Promotions")
    String productIncludePromotions();
    @DefaultMessage("Include sub-categories?")
    String productIncludeSubCategories();
    @DefaultMessage("Incoming Production Runs")
    String productIncomingProductionRuns();
    @DefaultMessage("Incoming Shipments")
    String productIncomingShipments();
    @DefaultMessage("Initial Inventory Item Status")
    String productInitialInventoryItemStatus();
    @DefaultMessage("Input, Operator Value")
    String productInputOperatorValue();
    @DefaultMessage("Insert Default Image URL")
    String productInsertDefaultImageUrl();
    @DefaultMessage("Instruction")
    String productInstruction();
    @DefaultMessage("Internal Name")
    String productInternalName();
    @DefaultMessage("Inventory")
    String productInventory();
    @DefaultMessage("Avail")
    String productInventoryAvail();
    @DefaultMessage("Inventory Average Costs")
    String productInventoryAverageCosts();
    @DefaultMessage("Inventory By Product")
    String productInventoryByProduct();
    @DefaultMessage("Inventory Details")
    String productInventoryDetails();
    @DefaultMessage("Inventory Facility")
    String productInventoryFacility();
    @DefaultMessage("Inventory Item")
    String productInventoryItem();
    @DefaultMessage("Inventory Item Grand Totals")
    String productInventoryItemGrandTotals();
    @DefaultMessage("Inventory Item Id")
    String productInventoryItemId();
    @DefaultMessage("Inventory Item Label")
    String productInventoryItemLabel();
    @DefaultMessage("Label Applicability")
    String productInventoryItemLabelAppl();
    @DefaultMessage("Label Types")
    String productInventoryItemLabelTypes();
    @DefaultMessage("Inventory Item Labels")
    String productInventoryItemLabels();
    @DefaultMessage("Inventory Item Reservations")
    String productInventoryItemReservations();
    @DefaultMessage("Inventory Item Totals")
    String productInventoryItemTotals();
    @DefaultMessage("Export Inventory Item Totals")
    String productInventoryItemTotalsExport();
    @DefaultMessage("Inventory Item Type")
    String productInventoryItemType();
    @DefaultMessage("InventoryItem Type ID")
    String productInventoryItemTypeId();
    @DefaultMessage("Inventory Items")
    String productInventoryItems();
    @DefaultMessage("Inventory Items Details")
    String productInventoryItemsDetails();
    @DefaultMessage("Inventory Items Details for")
    String productInventoryItemsDetailsFor();
    @DefaultMessage("Inventory Items for")
    String productInventoryItemsFor();
    @DefaultMessage("Inventory Items to Pick")
    String productInventoryItemsToPick();
    @DefaultMessage("Inventory Message")
    String productInventoryMessage();
    @DefaultMessage("Not Avail")
    String productInventoryNotAvail();
    @DefaultMessage("Receive Inventory")
    String productInventoryReceive();
    @DefaultMessage("Should inventory be required to purchase this product? If not specified defaults to Store setting.")
    String productInventoryRequiredProduct();
    @DefaultMessage("Inventory Summary")
    String productInventorySummary();
    @DefaultMessage("Inventory Transfer")
    String productInventoryTransfer();
    @DefaultMessage("Inventory Transfers for")
    String productInventoryTransfersFor();
    @DefaultMessage("Inventory Xfers")
    String productInventoryXfers();
    @DefaultMessage("Issue")
    String productIssue();
    @DefaultMessage("Issue All")
    String productIssueAll();
    @DefaultMessage("Issue Inventory Item(s) to Shipment")
    String productIssueInventoryItemsToShipment();
    @DefaultMessage("Issued : Ordered")
    String productIssuedOrdered();
    @DefaultMessage("Issued Quantity")
    String productIssuedQuantity();
    @DefaultMessage("[Issued + Reserved=Total]=Ordered")
    String productIssuedReservedTotalOrdered();
    @DefaultMessage("Item")
    String productItem();
    @DefaultMessage("Item ATP")
    String productItemATP();
    @DefaultMessage("Item Description")
    String productItemDescription();
    @DefaultMessage("Item ID")
    String productItemId();
    @DefaultMessage("The Item ID on an action is a Product ID for Gift With Purchase actions or for Free Shipping actions it is Shipment Method Type ID to give free shipping on (if blank any Shipment Method Types may receive free shipping)")
    String productItemIdGiftPurchaseFreeShipping();
    @DefaultMessage("This item is out of stock")
    String productItemOutOfStock();
    @DefaultMessage("Item Prc")
    String productItemPrc();
    @DefaultMessage("Item : Product")
    String productItemProduct();
    @DefaultMessage("Item QOH")
    String productItemQOH();
    @DefaultMessage("Item Type")
    String productItemType();
    @DefaultMessage("Items")
    String productItems();
    @DefaultMessage("Items Issued")
    String productItemsIssued();
    @DefaultMessage("Items Issued or Reserved")
    String productItemsIssuedReserved();
    @DefaultMessage("Keyword")
    String productKeyword();
    @DefaultMessage("all words match")
    String productKeywordAllWordsMatch();
    @DefaultMessage("any word matches")
    String productKeywordAnyWordMatches();
    @DefaultMessage("Keyword Relevancy")
    String productKeywordRelevancy();
    @DefaultMessage("where")
    String productKeywordWhere();
    @DefaultMessage("Keywords")
    String productKeywords();
    @DefaultMessage("Label")
    String productLabel();
    @DefaultMessage("Labels")
    String productLabels();
    @DefaultMessage("Large Image")
    String productLargeImage();
    @DefaultMessage("Last Created By")
    String productLastCreatedBy();
    @DefaultMessage("Last Modified By")
    String productLastModifiedBy();
    @DefaultMessage("Last Modified By User Login")
    String productLastModifiedByUserLogin();
    @DefaultMessage("Last Modified Date")
    String productLastModifiedDate();
    @DefaultMessage("Last price")
    String productLastPrice();
    @DefaultMessage("Last Search")
    String productLastSearch();
    @DefaultMessage("Latest Cancel Date")
    String productLatestCancelDate();
    @DefaultMessage("Leave empty for entire PO receiving")
    String productLeaveEntirePoReceiving();
    @DefaultMessage("Leave empty for single product receiving")
    String productLeaveSingleProductReceiving();
    @DefaultMessage("Level")
    String productLevel();
    @DefaultMessage("Line")
    String productLine();
    @DefaultMessage("Link One Image URL")
    String productLinkOneImageUrl();
    @DefaultMessage("Link Two Image URL")
    String productLinkTwoImageUrl();
    @DefaultMessage("Link Type Enum")
    String productLinkTypeEnumId();
    @DefaultMessage("List Associated Content Infos")
    String productListAssociatedContentInfos();
    @DefaultMessage("List Facility Location")
    String productListFacilityLocation();
    @DefaultMessage("List Feature Interactions")
    String productListFeatureInteractions();
    @DefaultMessage("List Price")
    String productListPrice();
    @DefaultMessage("List Price Range")
    String productListPriceRange();
    @DefaultMessage("Loading Catalog Caches")
    String productLoadingCatalogCaches();
    @DefaultMessage("Locale String")
    String productLocaleString();
    @DefaultMessage("Location")
    String productLocation();
    @DefaultMessage("Location for")
    String productLocationFor();
    @DefaultMessage("Location Product(s)")
    String productLocationProduct();
    @DefaultMessage("Location SeqID")
    String productLocationSeqId();
    @DefaultMessage("Locations")
    String productLocations();
    @DefaultMessage("Location(s) for")
    String productLocationsFor();
    @DefaultMessage("Long Description")
    String productLongDescription();
    @DefaultMessage("Lookup Inventory(s)")
    String productLookupInventory();
    @DefaultMessage("Lookup Shipment(s)")
    String productLookupShipment();
    @DefaultMessage("Lot Id")
    String productLotId();
    @DefaultMessage("Low Level Code")
    String productLowLevelCode();
    @DefaultMessage("Low to High")
    String productLowToHigh();
    @DefaultMessage("ML")
    String productML();
    @DefaultMessage("Main")
    String productMain();
    @DefaultMessage("Chassis Lubrication")
    String productMaintType_description_CHASSIS_LUBE();
    @DefaultMessage("Check Battery")
    String productMaintType_description_CHECK_BATTERY();
    @DefaultMessage("Check/Recharge Refrigerant")
    String productMaintType_description_HVAC_CHECK_REFR();
    @DefaultMessage("HVAC Maintenance")
    String productMaintType_description_HVAC_MAINT();
    @DefaultMessage("Replace Air Filter")
    String productMaintType_description_HVAC_REPLACE_FILTER();
    @DefaultMessage("Oil Change")
    String productMaintType_description_OIL_CHANGE();
    @DefaultMessage("Re-Fuel")
    String productMaintType_description_REFUEL();
    @DefaultMessage("Replace Battery")
    String productMaintType_description_REPLACE_BATTERY();
    @DefaultMessage("Rotate Tires")
    String productMaintType_description_ROTATE_TIRES();
    @DefaultMessage("Serpentine Belt Replacement")
    String productMaintType_description_SERP_BELT();
    @DefaultMessage("Tune Up")
    String productMaintType_description_TUNE_UP();
    @DefaultMessage("Vehicle Maintenance")
    String productMaintType_description_VEHICLE_MAINT();
    @DefaultMessage("Wash")
    String productMaintType_description_WASH();
    @DefaultMessage("Maintenance")
    String productMaintenance();
    @DefaultMessage("Maintenance FacilityGroup Party Role")
    String productMaintenanceFacilityGroupPartyRole();
    @DefaultMessage("MakeTop")
    String productMakeTop();
    @DefaultMessage("Manufacturing")
    String productManufacturing();
    @DefaultMessage("Mark as Accepted")
    String productMarkAsAccepted();
    @DefaultMessage("ATP from Components")
    String productMarketingPackageATP();
    @DefaultMessage("QOH from Components")
    String productMarketingPackageQOH();
    @DefaultMessage("Max Pr")
    String productMaxPr();
    @DefaultMessage("Max Qt")
    String productMaxQt();
    @DefaultMessage("Max Size")
    String productMaxSize();
    @DefaultMessage("Displays only if largest product size is equal/less than this value")
    String productMaxSizeMessage();
    @DefaultMessage("Max Sz")
    String productMaxSz();
    @DefaultMessage("Max Tot")
    String productMaxTot();
    @DefaultMessage("Max Total")
    String productMaxTotal();
    @DefaultMessage("Displays only if total price is equal/less than this value")
    String productMaxTotalMessage();
    @DefaultMessage("Max Weight")
    String productMaxWeight();
    @DefaultMessage("Displays only if total weight is equal/less than this value")
    String productMaxWeightMessage();
    @DefaultMessage("Max Wt")
    String productMaxWt();
    @DefaultMessage("Maximum")
    String productMaximum();
    @DefaultMessage("Maximum Price")
    String productMaximumPrice();
    @DefaultMessage("Medium Image")
    String productMediumImage();
    @DefaultMessage("By default, only movements affecting the qoh are shown; remove the 0 here to get also the movements related to reservations.")
    String productMessageQoh();
    @DefaultMessage("Copy Count Meter")
    String productMeterType_description_COPY_COUNT();
    @DefaultMessage("Distance Meter")
    String productMeterType_description_DISTANCE();
    @DefaultMessage("Use Event Data Recorder")
    String productMeterType_description_EVENT_DATA_RECORDER();
    @DefaultMessage("Motor Time Meter")
    String productMeterType_description_MOTOR_TIME();
    @DefaultMessage("Odometer")
    String productMeterType_description_ODOMETER();
    @DefaultMessage("Use Pedometer")
    String productMeterType_description_PEDOMETER();
    @DefaultMessage("Speedometer")
    String productMeterType_description_SPEEDOMETER();
    @DefaultMessage("Use Tacograph")
    String productMeterType_description_TACHOGRAPH();
    @DefaultMessage("Tachometer")
    String productMeterType_description_TACHOMETER();
    @DefaultMessage("Use Taximeter")
    String productMeterType_description_TAXIMETER();
    @DefaultMessage("Use Trip Meter")
    String productMeterType_description_TRIP_METER();
    @DefaultMessage("Use Count Meter")
    String productMeterType_description_USE_COUNT();
    @DefaultMessage("Meters")
    String productMeters();
    @DefaultMessage("Method")
    String productMethod();
    @DefaultMessage("Method Type")
    String productMethodType();
    @DefaultMessage("Min Item Price")
    String productMinItemPrice();
    @DefaultMessage("0 min -> up to max; 0 max -> from min and up")
    String productMinMax();
    @DefaultMessage("Min - Max (span)")
    String productMinMaxSpan();
    @DefaultMessage("Min Pr")
    String productMinPr();
    @DefaultMessage("Min Purchase")
    String productMinPurchase();
    @DefaultMessage("Min Qt")
    String productMinQt();
    @DefaultMessage("Min Size")
    String productMinSize();
    @DefaultMessage("Displays only if smallest product size is equal/greater than this value")
    String productMinSizeMessage();
    @DefaultMessage("Min Sz")
    String productMinSz();
    @DefaultMessage("Min Tot")
    String productMinTot();
    @DefaultMessage("Min Total")
    String productMinTotal();
    @DefaultMessage("Displays only if total price is equal/greater than this value")
    String productMinTotalMessage();
    @DefaultMessage("Min Weight")
    String productMinWeight();
    @DefaultMessage("Displays only if total weight is equal/greater than this value")
    String productMinWeightMessage();
    @DefaultMessage("Min Wt")
    String productMinWt();
    @DefaultMessage("Minimum Item Price")
    String productMinimumItemPrice();
    @DefaultMessage("Minimum order quantity")
    String productMinimumOrderQuantity();
    @DefaultMessage("Minimum Price")
    String productMinimumPrice();
    @DefaultMessage("Minimum Purchase")
    String productMinimumPurchase();
    @DefaultMessage("Minimum Stock")
    String productMinimumStock();
    @DefaultMessage("Minimum Stock & Move Quantity")
    String productMinimumStockAndMoveQuantity();
    @DefaultMessage("Minimum Stock Reorder Quantity Days To Ship")
    String productMinimumStockReorderQuantityDaysToShip();
    @DefaultMessage("More options available in drop down.")
    String productMoreOptions();
    @DefaultMessage("More than one package found for this shipment. You must ship this manually")
    String productMorePackageFoundShipment();
    @DefaultMessage("More than one route segment found. You must ship this manually")
    String productMoreRouteSegmentFound();
    @DefaultMessage("Move Quantity")
    String productMoveQuantity();
    @DefaultMessage("Multi Choice")
    String productMultiChoice();
    @DefaultMessage("Multiple order items for this product")
    String productMultipleOrderItemsProduct();
    @DefaultMessage("Name")
    String productName();
    @DefaultMessage("Need stock move")
    String productNeedStockMove();
    @DefaultMessage("New Article")
    String productNewArticle();
    @DefaultMessage("New Category")
    String productNewCategory();
    @DefaultMessage("New Contact Mech")
    String productNewContactMech();
    @DefaultMessage("New Facility")
    String productNewFacility();
    @DefaultMessage("New Facility Location")
    String productNewFacilityLocation();
    @DefaultMessage("New Feature Category")
    String productNewFeatureCategory();
    @DefaultMessage("New Feature InterAction")
    String productNewFeatureInterAction();
    @DefaultMessage("New Feature Type")
    String productNewFeatureType();
    @DefaultMessage("New Group")
    String productNewGroup();
    @DefaultMessage("New Inventory Item")
    String productNewInventoryItem();
    @DefaultMessage("New Item")
    String productNewItem();
    @DefaultMessage("New Package")
    String productNewPackage();
    @DefaultMessage("New Prod Catalog")
    String productNewProdCatalog();
    @DefaultMessage("New Product")
    String productNewProduct();
    @DefaultMessage("New Product Id and Create")
    String productNewProductCreate();
    @DefaultMessage("New Product ID")
    String productNewProductId();
    @DefaultMessage("New Product Promo")
    String productNewProductPromo();
    @DefaultMessage("New Product Store")
    String productNewProductStore();
    @DefaultMessage("New Product Supplier")
    String productNewProductSupplier();
    @DefaultMessage("New Promotion Code")
    String productNewPromotionCode();
    @DefaultMessage("New Search")
    String productNewSearch();
    @DefaultMessage("New Segment")
    String productNewSegment();
    @DefaultMessage("New Shipment")
    String productNewShipment();
    @DefaultMessage("New Shipment Estimate")
    String productNewShipmentEstimate();
    @DefaultMessage("New Shipment Method")
    String productNewShipmentMethod();
    @DefaultMessage("New Subscription")
    String productNewSubscription();
    @DefaultMessage("New Subscription Resource")
    String productNewSubscriptionResource();
    @DefaultMessage("New Virtual Product")
    String productNewVirtualProduct();
    @DefaultMessage("New Method")
    String productNewVirtualVariantMethod();
    @DefaultMessage("Next Package")
    String productNextPackage();
    @DefaultMessage("Next Shipment")
    String productNextShipment();
    @DefaultMessage("No category specified")
    String productNoCategorySpecified();
    @DefaultMessage("No Child Categories found")
    String productNoChildCategoriesFound();
    @DefaultMessage("NoChild GroupsFound")
    String productNoChildGroupsFound();
    @DefaultMessage("No description")
    String productNoDescription();
    @DefaultMessage("No existing Products found")
    String productNoExistingProductsFound();
    @DefaultMessage("no Facility")
    String productNoFacility();
    @DefaultMessage("No file specified for Upload")
    String productNoFileSpecifiedForUpload();
    @DefaultMessage("No Inventory found to pick")
    String productNoInventoryFoundToPick();
    @DefaultMessage("No Inventory Reservation Information Available")
    String productNoInventoryReservation();
    @DefaultMessage("there should be no items left to issue from this order")
    String productNoItemsLeft();
    @DefaultMessage("No Items in PO")
    String productNoItemsPo();
    @DefaultMessage("There are no items in the PO to receive")
    String productNoItemsPoReceive();
    @DefaultMessage("No Items in Return")
    String productNoItemsReturn();
    @DefaultMessage("There are no items to receive")
    String productNoItemsToReceive();
    @DefaultMessage("No Keywords Found")
    String productNoKeywordsFound();
    @DefaultMessage("No Location")
    String productNoLocation();
    @DefaultMessage("No Longer Available")
    String productNoLongerAvailable();
    @DefaultMessage("No orders found that are ready to pick or that need stock moves")
    String productNoOrdersFoundReadyToPickOrNeedStockMoves();
    @DefaultMessage("No Parent Categories found")
    String productNoParentCategoriesFound();
    @DefaultMessage("No Parent Groups found")
    String productNoParentGroupsFound();
    @DefaultMessage("No picks are started right now")
    String productNoPicksStarted();
    @DefaultMessage("No Price Rules found")
    String productNoPriceRulesFound();
    @DefaultMessage("No Product Found")
    String productNoProductFound();
    @DefaultMessage("No products in category")
    String productNoProductsInCategory();
    @DefaultMessage("There are no products in this category")
    String productNoProductsInThisCategory();
    @DefaultMessage("You have no products to compare.")
    String productNoProductsToCompare();
    @DefaultMessage("No results found")
    String productNoResultsFound();
    @DefaultMessage("No selectable Features found . Please create some and try again.")
    String productNoSelectableFeaturesFound();
    @DefaultMessage("No shipments found")
    String productNoShipmentsFound();
    @DefaultMessage("No specific shipment (Receive entire PO)")
    String productNoSpecificShipment();
    @DefaultMessage("Product-based UoM conversion requires a valid productId")
    String productNoSpecifiedForUomConversion();
    @DefaultMessage("No Stock moves needed right now")
    String productNoStockMovesNeeded();
    @DefaultMessage("Not Available")
    String productNotAvailable();
    @DefaultMessage("Cannot create location without FacilityId")
    String productNotCreateLocationFacilityId();
    @DefaultMessage("Could not find inventoryItem with ID")
    String productNotFindInventoryItemWithId();
    @DefaultMessage("Could not find product with ID")
    String productNotFindProductId();
    @DefaultMessage("This cannot be changed without re-creating the facility")
    String productNotModificationRecrationFacility();
    @DefaultMessage("This cannot be changed without re-creating the facility group")
    String productNotModificationRecrationFacilityGroup();
    @DefaultMessage("This cannot be changed without re-creating the inventoryItem")
    String productNotModificationRecrationInventoryItem();
    @DefaultMessage("This cannot be changed without re-creating the product content association.")
    String productNotModificationRecrationProductContentAssociation();
    @DefaultMessage("This cannot be changed without re-creating the product")
    String productNotModificationRecreatingProduct();
    @DefaultMessage("This cannot be changed without re-creating the Product Catalog")
    String productNotModificationRecreatingProductCatalog();
    @DefaultMessage("This cannot be changed without re-creating the Config Item")
    String productNotModificationRecreatingProductConfigItems();
    @DefaultMessage("This cannot be changed without re-creating the Shipment")
    String productNotModificationRecreatingProductShipment();
    @DefaultMessage("This cannot be changed without re-creating the Product Store")
    String productNotModificationRecreatingProductStore();
    @DefaultMessage("This cannot be changed without re-creating the category")
    String productNotModificationRecreationCategory();
    @DefaultMessage("Not In Origin Facility")
    String productNotOriginFacility();
    @DefaultMessage("but this is NOT a Purchase Shipment")
    String productNotPurchaseShipment();
    @DefaultMessage("but this is NOT a Sales Shipment")
    String productNotSalesShipment();
    @DefaultMessage("Not Set")
    String productNotSet();
    @DefaultMessage("You have not viewed any products this session")
    String productNotViewedAnyProducts();
    @DefaultMessage("Not Yet Available")
    String productNotYetAvailable();
    @DefaultMessage("NOTE")
    String productNote();
    @DefaultMessage("NOTE: For content options, use the Content tab.")
    String productNoteForContentOptions();
    @DefaultMessage("The check boxes above are used only to add to and remove from the text box below, they will not limit the other actions for the forms below!")
    String productNoteKeywordSearch();
    @DefaultMessage("Keywords are automatically created when product information is changed, but you may manually CREATE or DELETE keywords here as well.")
    String productNoteKeywordsAutomaticallyCreated();
    @DefaultMessage("NOTE on Item ID")
    String productNoteOnItemId();
    @DefaultMessage("NOTE on Party ID")
    String productNoteOnPartyId();
    @DefaultMessage("NOTE: Order Status is")
    String productNoteOrderStatus();
    @DefaultMessage("NOTE: Order Type is")
    String productNoteOrderType();
    @DefaultMessage("NOTE: Only user entered promos included in drop-down")
    String productNoteUserPromotionEntered();
    @DefaultMessage("Sale Price")
    String productNotifySale();
    @DefaultMessage("Nt. Wt.")
    String productNtWt();
    @DefaultMessage("number")
    String productNumber();
    @DefaultMessage("Number of Order Items")
    String productNumberOfOrderItems();
    @DefaultMessage("Number / Quantity")
    String productNumberQuantity();
    @DefaultMessage("makes these products obsolete:")
    String productObsolescense();
    @DefaultMessage("is made obsolete by these products:")
    String productObsolete();
    @DefaultMessage("OEM Party ID")
    String productOemPartyId();
    @DefaultMessage("Product OEM Name")
    String productOemPartyName();
    @DefaultMessage("ID at the manufacturer")
    String productOemProductId();
    @DefaultMessage("One Inventory Facility")
    String productOneInventoryFacility();
    @DefaultMessage("only applies if within span")
    String productOnlyAppliesWithinSpan();
    @DefaultMessage("ProductOnlyShowingFirstN")
    String productOnlyShowingFirstN(String viewSize, String listSize);
    @DefaultMessage("Open")
    String productOpenQuantity();
    @DefaultMessage("Optional")
    String productOptional();
    @DefaultMessage("optional will create new if empty")
    String productOptionalCreateNew();
    @DefaultMessage("Optional Expiration Date")
    String productOptionalExpirationDate();
    @DefaultMessage("Optional Expired Before Date")
    String productOptionalExpiredBeforeDate();
    @DefaultMessage("Optional Filter With Date")
    String productOptionalFilterWithDate();
    @DefaultMessage("OR enter a Container ID")
    String productOrEnterContainerId();
    @DefaultMessage("Order ID")
    String productOrderId();
    @DefaultMessage("Order Item")
    String productOrderItem();
    @DefaultMessage("Order Items")
    String productOrderItems();
    @DefaultMessage("Order not ready for picking, needs stock move")
    String productOrderNotReadyForPickNeedStockMove();
    @DefaultMessage("Order Number")
    String productOrderNumber();
    @DefaultMessage("Order qty increments")
    String productOrderQtyIncrements();
    @DefaultMessage("Ship Group ID")
    String productOrderShipGroupId();
    @DefaultMessage("orderTotal")
    String productOrderTotal();
    @DefaultMessage("Ordered Quantity")
    String productOrderedQuantity();
    @DefaultMessage("Orders Status")
    String productOrdersStatus();
    @DefaultMessage("Organization")
    String productOrganization();
    @DefaultMessage("Origin")
    String productOrigin();
    @DefaultMessage("Origin-Destination Address ID")
    String productOriginDestinationAddressId();
    @DefaultMessage("Origin-Destination Facility")
    String productOriginDestinationFacility();
    @DefaultMessage("Origin-Destination Phone ID")
    String productOriginDestinationPhoneId();
    @DefaultMessage("Origin Facility")
    String productOriginFacility();
    @DefaultMessage("Origin Facility is")
    String productOriginFacilityIs();
    @DefaultMessage("Origin Phone Number Id")
    String productOriginPhoneNumberId();
    @DefaultMessage("Origin Postal Address Id")
    String productOriginPostalAddressId();
    @DefaultMessage("Original")
    String productOriginal();
    @DefaultMessage("Original Image")
    String productOriginalImage();
    @DefaultMessage("Automatic scale of the original image, related to the configuration")
    String productOriginalImageMessage();
    @DefaultMessage("Outgoing Production Runs")
    String productOutgoingProductionRuns();
    @DefaultMessage("Outgoing Shipments")
    String productOutgoingShipments();
    @DefaultMessage("Outstanding Purchase Orders")
    String productOutstandingPurchaseOrders();
    @DefaultMessage("Override")
    String productOverride();
    @DefaultMessage("Override Simple Fields")
    String productOverrideSimpleFields();
    @DefaultMessage("oversize")
    String productOversize();
    @DefaultMessage("number of product(s) in oversize")
    String productOversizeNumber();
    @DefaultMessage("Oversize Surcharge")
    String productOversizeSurcharge();
    @DefaultMessage("Oversize surcharge")
    String productOversizeTitle();
    @DefaultMessage("Oversize Unit")
    String productOversizeUnit();
    @DefaultMessage("Pack Item")
    String productPackItem();
    @DefaultMessage("Pack Order")
    String productPackOrder();
    @DefaultMessage("Qty to Pack")
    String productPackQty();
    @DefaultMessage("Package")
    String productPackage();
    @DefaultMessage("Package input box")
    String productPackageInputBox();
    @DefaultMessage("Package Qty")
    String productPackageQty();
    @DefaultMessage("Packages")
    String productPackages();
    @DefaultMessage("Packed Qty")
    String productPackedQty();
    @DefaultMessage("Packed Weight")
    String productPackedWeight();
    @DefaultMessage("Packing")
    String productPacking();
    @DefaultMessage("Packing Slip")
    String productPackingSlip();
    @DefaultMessage("Parent")
    String productParent();
    @DefaultMessage("Parent Category")
    String productParentCategory();
    @DefaultMessage("Parent Category [ID]")
    String productParentCategoryId();
    @DefaultMessage("Parent Group [Id]")
    String productParentGroupId();
    @DefaultMessage("Product Parent Type")
    String productParentType();
    @DefaultMessage("Parties")
    String productParties();
    @DefaultMessage("Party Customer")
    String productPartyCustomer();
    @DefaultMessage("The Party ID for Free Shipping actions is Carrier Party ID to give free shipping for (if blank any Carrier Parties may receive free shipping).")
    String productPartyFreeShipping();
    @DefaultMessage("Payment Props")
    String productPaymentProps();
    @DefaultMessage("Payment Types")
    String productPaymentTypes();
    @DefaultMessage("Review By")
    String productPendingReviewBy();
    @DefaultMessage("Review Date")
    String productPendingReviewDate();
    @DefaultMessage("Update & Approve")
    String productPendingReviewUpdateAndApprove();
    @DefaultMessage("Per Unit Price")
    String productPerUnitPrice();
    @DefaultMessage("Per Unit Price (Facility)")
    String productPerUnitPriceFacility();
    @DefaultMessage("Per Unit Price (Order)")
    String productPerUnitPriceOrder();
    @DefaultMessage("percent")
    String productPercent();
    @DefaultMessage("ProductPermissionError")
    String productPermissionError(String resourceDescription, String mainAction);
    @DefaultMessage("persons")
    String productPersons();
    @DefaultMessage("Phone Numbers")
    String productPhoneNumbers();
    @DefaultMessage("Physical Inventory")
    String productPhysicalInventory();
    @DefaultMessage("(This can be changed by doing a physical inventory variance below)")
    String productPhysicalInventoryVariance();
    @DefaultMessage("Physical Inventory Variances")
    String productPhysicalInventoryVariances();
    @DefaultMessage("Pick")
    String productPick();
    @DefaultMessage("Pick first")
    String productPickFirst();
    @DefaultMessage("Picklist")
    String productPickList();
    @DefaultMessage("Pick Pack Warnings")
    String productPickPackWarnings();
    @DefaultMessage("Pick started")
    String productPickStarted();
    @DefaultMessage("Picking")
    String productPicking();
    @DefaultMessage("Detail")
    String productPickingDetail();
    @DefaultMessage("Open Picklists")
    String productPicklistManage();
    @DefaultMessage("Create Picklists")
    String productPicklistOptions();
    @DefaultMessage("Picks in progress")
    String productPicksInProgress();
    @DefaultMessage("Picks started in progress")
    String productPicksStartedInProgress();
    @DefaultMessage("Pieces Included")
    String productPiecesIncluded();
    @DefaultMessage("Plain Search Parameters")
    String productPlainSearchParameters();
    @DefaultMessage("Planned Quantity")
    String productPlannedQuantity();
    @DefaultMessage("PO")
    String productPo();
    @DefaultMessage("Popularity by Orders")
    String productPopularityByOrders();
    @DefaultMessage("Popularity by Views")
    String productPopularityByViews();
    @DefaultMessage("Populate New Form")
    String productPopulateNewForm();
    @DefaultMessage("Port")
    String productPort();
    @DefaultMessage("Position")
    String productPosition();
    @DefaultMessage("Prepare Create")
    String productPrepareCreate();
    @DefaultMessage("Define the prefix of the content placement file . Start up by a / and finish without /")
    String productPrependedImageContentPaths();
    @DefaultMessage("Define the skeleton of the content placement file . Start up by a / and finish without /")
    String productPrependedTemplatePaths();
    @DefaultMessage("Price")
    String productPrice();
    @DefaultMessage("Flat Amount Override")
    String productPriceActionType_description_PRICE_FLAT();
    @DefaultMessage("Flat Amount Modify")
    String productPriceActionType_description_PRICE_FOL();
    @DefaultMessage("Promo Amount Override")
    String productPriceActionType_description_PRICE_PFLAT();
    @DefaultMessage("Percent Of Average Cost")
    String productPriceActionType_description_PRICE_POAC();
    @DefaultMessage("Percent Of Default Price")
    String productPriceActionType_description_PRICE_POD();
    @DefaultMessage("Percent Of List Price")
    String productPriceActionType_description_PRICE_POL();
    @DefaultMessage("Percent Of Margin")
    String productPriceActionType_description_PRICE_POM();
    @DefaultMessage("Wholesale Amount Override")
    String productPriceActionType_description_PRICE_WFLAT();
    @DefaultMessage("PriceBreakId")
    String productPriceBreakId();
    @DefaultMessage("You do not have permission to maintain price information. (\"CATALOG_PRICE_MAINT\" needed)")
    String productPriceMaintPermissionError();
    @DefaultMessage("Component Price")
    String productPricePurpose_description_COMPONENT_PRICE();
    @DefaultMessage("Purchase/Initial")
    String productPricePurpose_description_PURCHASE();
    @DefaultMessage("Recurring Charge")
    String productPricePurpose_description_RECURRING_CHARGE();
    @DefaultMessage("Usage Charge")
    String productPricePurpose_description_USAGE_CHARGE();
    @DefaultMessage("Price Rule Name [ID]")
    String productPriceRuleNameId();
    @DefaultMessage("Price Rules")
    String productPriceRules();
    @DefaultMessage("Price charge")
    String productPriceTitle1();
    @DefaultMessage("Price Type")
    String productPriceType();
    @DefaultMessage("Average Cost")
    String productPriceType_description_AVERAGE_COST();
    @DefaultMessage("Competitive Price")
    String productPriceType_description_COMPETITIVE_PRICE();
    @DefaultMessage("Component Price")
    String productPriceType_description_COMPONENT_PRICE();
    @DefaultMessage("Default Price")
    String productPriceType_description_DEFAULT_PRICE();
    @DefaultMessage("List Price")
    String productPriceType_description_LIST_PRICE();
    @DefaultMessage("Maximum Price")
    String productPriceType_description_MAXIMUM_PRICE();
    @DefaultMessage("Minimum Price")
    String productPriceType_description_MINIMUM_PRICE();
    @DefaultMessage("Promotional Price")
    String productPriceType_description_PROMO_PRICE();
    @DefaultMessage("Recurring Charge")
    String productPriceType_description_RECURRING_CHARGE();
    @DefaultMessage("Special Promo Price")
    String productPriceType_description_SPECIAL_PROMO_PRICE();
    @DefaultMessage("Usage Charge")
    String productPriceType_description_USAGE_CHARGE();
    @DefaultMessage("Wholesale Price")
    String productPriceType_description_WHOLESALE_PRICE();
    @DefaultMessage("Prices")
    String productPrices();
    @DefaultMessage("Primary Category")
    String productPrimaryCategory();
    @DefaultMessage("Primary Order ID")
    String productPrimaryOrderId();
    @DefaultMessage("Primary Parent Category")
    String productPrimaryParentCategory();
    @DefaultMessage("Primary Parent Group")
    String productPrimaryParentGroup();
    @DefaultMessage("Primary Return ID")
    String productPrimaryReturnId();
    @DefaultMessage("Primary Ship Group Seq Id")
    String productPrimaryShipGroupSeqId();
    @DefaultMessage("Prioritize Products in Category")
    String productPrioritizeProductsInCategory();
    @DefaultMessage("Prod Cat Content Type Id")
    String productProdCatContentTypeId();
    @DefaultMessage("Product")
    String productProduct();
    @DefaultMessage("Product ATP")
    String productProductATP();
    @DefaultMessage("ATP Var")
    String productProductATPVar();
    @DefaultMessage("Product Catalogs List")
    String productProductCatalogsList();
    @DefaultMessage("Product Category")
    String productProductCategory();
    @DefaultMessage("Product Category Description")
    String productProductCategoryDescription();
    @DefaultMessage("Product Category ID")
    String productProductCategoryId();
    @DefaultMessage("Product Category Member Maintenance")
    String productProductCategoryMemberMaintenance();
    @DefaultMessage("Product Category Name")
    String productProductCategoryName();
    @DefaultMessage("Product Category Type")
    String productProductCategoryType();
    @DefaultMessage("Product Config Item Content Type Id")
    String productProductConfigItemContentTypeId();
    @DefaultMessage("Product Content Type Id")
    String productProductContentTypeId();
    @DefaultMessage("Product Depth")
    String productProductDepth();
    @DefaultMessage("Product Description")
    String productProductDescription();
    @DefaultMessage("Product Diameter")
    String productProductDiameter();
    @DefaultMessage("Product Feature Categories")
    String productProductFeatureCategories();
    @DefaultMessage("Product Feature Maintenance")
    String productProductFeatureMaintenance();
    @DefaultMessage("Product Height")
    String productProductHeight();
    @DefaultMessage("Product ID")
    String productProductId();
    @DefaultMessage("Product Id is mandatory")
    String productProductIdMissing();
    @DefaultMessage("Product ID To")
    String productProductIdTo();
    @DefaultMessage("Product Jump")
    String productProductJump();
    @DefaultMessage("Product Name")
    String productProductName();
    @DefaultMessage("Product Name Id")
    String productProductNameId();
    @DefaultMessage("This product is no longer available for sale")
    String productProductNoLongerAvailable();
    @DefaultMessage("Product not found for Product ID")
    String productProductNotFound();
    @DefaultMessage("Product not found with Product ID")
    String productProductNotFoundWithProduct();
    @DefaultMessage("This product hasn''t been reviewed yet")
    String productProductNotReviewedYet();
    @DefaultMessage("This product has not yet been made available for sale")
    String productProductNotYetMadeAvailable();
    @DefaultMessage("Product #")
    String productProductNumber();
    @DefaultMessage("Product Page")
    String productProductPage();
    @DefaultMessage("Product Promo Content List")
    String productProductPromoContentList();
    @DefaultMessage("Product Promo Content Type")
    String productProductPromoContentType();
    @DefaultMessage("Product Promotions List")
    String productProductPromotionsList();
    @DefaultMessage("Product QOH")
    String productProductQOH();
    @DefaultMessage("QOH Var")
    String productProductQOHVar();
    @DefaultMessage("Product Search")
    String productProductSearch();
    @DefaultMessage("Product Store")
    String productProductStore();
    @DefaultMessage("Product Store Email Settings")
    String productProductStoreEmailSettings();
    @DefaultMessage("Product Store Group")
    String productProductStoreGroup();
    @DefaultMessage("Product Store Group Id")
    String productProductStoreGroupId();
    @DefaultMessage("Product Store Keyword Override Settings")
    String productProductStoreKeywordOverrideSettings();
    @DefaultMessage("Product Store List")
    String productProductStoreList();
    @DefaultMessage("Product Store Payment Settings")
    String productProductStorePaymentSettings();
    @DefaultMessage("Product Store Roles")
    String productProductStoreRoles();
    @DefaultMessage("Product Store Shipment Settings")
    String productProductStoreShipmentSettings();
    @DefaultMessage("Product Store Tax Settings")
    String productProductStoreTaxSettings();
    @DefaultMessage("Product Store WebSites")
    String productProductStoreWebSites();
    @DefaultMessage("Product Type")
    String productProductType();
    @DefaultMessage("Product Weight")
    String productProductWeight();
    @DefaultMessage("Product Width")
    String productProductWidth();
    @DefaultMessage("Products")
    String productProducts();
    @DefaultMessage("Products Last Viewed")
    String productProductsLastViewed();
    @DefaultMessage("Leave blank to auto-generate a unique promo code")
    String productPromoCodeBlank();
    @DefaultMessage("Promo Code Emails")
    String productPromoCodeEmails();
    @DefaultMessage("Promo Code Parties")
    String productPromoCodeParties();
    @DefaultMessage("Promotion/Coupon Codes")
    String productPromoCodes();
    @DefaultMessage("Entered Codes:")
    String productPromoCodesEntered();
    @DefaultMessage("Promo Name [ID]")
    String productPromoNameId();
    @DefaultMessage("Promo Show To Customer")
    String productPromoShowToCustomer();
    @DefaultMessage("Promo Text")
    String productPromoText();
    @DefaultMessage("User Entered")
    String productPromoUserEntered();
    @DefaultMessage("Promos")
    String productPromos();
    @DefaultMessage("Promotion")
    String productPromotion();
    @DefaultMessage("Add Set of Promotion Codes")
    String productPromotionAddSetOfPromotionCodes();
    @DefaultMessage("Promotion Code")
    String productPromotionCode();
    @DefaultMessage("Imported Only")
    String productPromotionImported();
    @DefaultMessage("Manual Only")
    String productPromotionManual();
    @DefaultMessage("Promotion Manual Imported")
    String productPromotionManualImported();
    @DefaultMessage("Per Code")
    String productPromotionPerCode();
    @DefaultMessage("Per Customer")
    String productPromotionPerCustomer();
    @DefaultMessage("Promotion Products")
    String productPromotionProducts();
    @DefaultMessage("Req. Code")
    String productPromotionReqCode();
    @DefaultMessage("Req. Email or Party")
    String productPromotionReqEmailOrParty();
    @DefaultMessage("Upload Set of Promotion Codes")
    String productPromotionUploadSetOfPromotionCodes();
    @DefaultMessage("Use Limits")
    String productPromotionUseLimits();
    @DefaultMessage("Promotions")
    String productPromotions();
    @DefaultMessage("Publish View")
    String productPublishAndView();
    @DefaultMessage("Purchase From")
    String productPurchaseFrom();
    @DefaultMessage("Purchase From Date")
    String productPurchaseFromDate();
    @DefaultMessage("Purchase Order")
    String productPurchaseOrder();
    @DefaultMessage("Purchase Order Number")
    String productPurchaseOrderNumber();
    @DefaultMessage("Purchase Shipment Status")
    String productPurchaseShipmentStatus();
    @DefaultMessage("Purchase Thru")
    String productPurchaseThru();
    @DefaultMessage("Purchase Thru Date")
    String productPurchaseThruDate();
    @DefaultMessage("Purchases")
    String productPurchases();
    @DefaultMessage("Purpose Type not found with ID")
    String productPurposeTypeNotFoundWithId();
    @DefaultMessage("QOH")
    String productQoh();
    @DefaultMessage("Qty Offset")
    String productQtyOffset();
    @DefaultMessage("ATP minus Min Stock")
    String productQtyOffsetATP();
    @DefaultMessage("ATP minus Min Stock less than")
    String productQtyOffsetATPBelow();
    @DefaultMessage("QtyOffsetBelow")
    String productQtyOffsetBelow();
    @DefaultMessage("QOH minus Min Stock")
    String productQtyOffsetQOH();
    @DefaultMessage("QOH minus Min Stock less than")
    String productQtyOffsetQOHBelow();
    @DefaultMessage("Qty Received")
    String productQtyReceived();
    @DefaultMessage("Qty Rejected")
    String productQtyRejected();
    @DefaultMessage("Quantity")
    String productQuantity();
    @DefaultMessage("Quantity Accepted")
    String productQuantityAccepted();
    @DefaultMessage("Quantity Break Id")
    String productQuantityBreakId();
    @DefaultMessage("Quantity Breaks")
    String productQuantityBreaks();
    @DefaultMessage("Quantity Included")
    String productQuantityIncluded();
    @DefaultMessage("Quantity Not Available")
    String productQuantityNotAvailable();
    @DefaultMessage("Quantity Not Set")
    String productQuantityNotSet();
    @DefaultMessage("Quantity in this package")
    String productQuantityOfPackage();
    @DefaultMessage("Quantity On Hand")
    String productQuantityOnHand();
    @DefaultMessage("Quantity Rejected")
    String productQuantityRejected();
    @DefaultMessage("Quantity Requested")
    String productQuantityRequested();
    @DefaultMessage("Quantity Shipped")
    String productQuantityShipped();
    @DefaultMessage("Quantity in this Shipment")
    String productQuantityShippedOfPackage();
    @DefaultMessage("Quantity charge")
    String productQuantityTitle1();
    @DefaultMessage("Quantity To Bin")
    String productQuantityToBin();
    @DefaultMessage("Quantity To Transfer")
    String productQuantityToTransfer();
    @DefaultMessage("Quantity UomId")
    String productQuantityUomId();
    @DefaultMessage("Question")
    String productQuestion();
    @DefaultMessage("Quick Add Variants")
    String productQuickAddVariants();
    @DefaultMessage("Quick Admin")
    String productQuickAdmin();
    @DefaultMessage("Quick Apply Product Feature")
    String productQuickApplyFeature();
    @DefaultMessage("Quick Create Virtual from Variants")
    String productQuickCreateVirtualFromVariants();
    @DefaultMessage("Quick Reorder")
    String productQuickReorder();
    @DefaultMessage("Quick Ship Order:")
    String productQuickShipOrder();
    @DefaultMessage("Quick Ship Order From")
    String productQuickShipOrderFrom();
    @DefaultMessage("Quick Stock Move")
    String productQuickStockMove();
    @DefaultMessage("Rating")
    String productRating();
    @DefaultMessage("Rating Type Enum")
    String productRatingTypeEnum();
    @DefaultMessage("Re-induce Keywords")
    String productReInduceKeywords();
    @DefaultMessage("Re-Weigh Package")
    String productReWeighPackage();
    @DefaultMessage("Ready to pick")
    String productReadyToPick();
    @DefaultMessage("Reason")
    String productReason();
    @DefaultMessage("Receipt")
    String productReceipt();
    @DefaultMessage("Receipt(s) For Return")
    String productReceiptForReturn();
    @DefaultMessage("Receipt(s) For Purchase Order")
    String productReceiptPurchaseOrder();
    @DefaultMessage("ProductReceiveInventory")
    String productReceiveInventory(String facility_facilityName, String facility_facilityId);
    @DefaultMessage("Add Product to Receive")
    String productReceiveInventoryAddProductToReceive();
    @DefaultMessage("Receive Against PO")
    String productReceiveInventoryAgainstPO();
    @DefaultMessage("Receive Inventory Against Purchase Order")
    String productReceiveInventoryAgainstPurchaseOrder();
    @DefaultMessage("ProductReceiveInventoryAgainstPurchaseOrderProductNotFound")
    String productReceiveInventoryAgainstPurchaseOrderProductNotFound(String productId, String orderId);
    @DefaultMessage("ProductReceiveInventoryAgainstPurchaseOrderQuantityExceedsAvailableToReceive")
    String productReceiveInventoryAgainstPurchaseOrderQuantityExceedsAvailableToReceive(String newQuantity, String productId);
    @DefaultMessage("ProductReceiveInventoryAgainstPurchaseOrderQuantityGoesToBackOrder")
    String productReceiveInventoryAgainstPurchaseOrderQuantityGoesToBackOrder(String quantityToBackOrder, String quantityToReceive, String productId);
    @DefaultMessage("Receive Item(s)")
    String productReceiveItem();
    @DefaultMessage("Receive Product(s)")
    String productReceiveProduct();
    @DefaultMessage("Receive Purchase Order")
    String productReceivePurchaseOrder();
    @DefaultMessage("Receive Return")
    String productReceiveReturn();
    @DefaultMessage("Receive Selected Product(s)")
    String productReceiveSelectedProduct();
    @DefaultMessage("Receive Selected Shipment")
    String productReceiveSelectedShipment();
    @DefaultMessage("Received")
    String productReceived();
    @DefaultMessage("(You must re-create the association to change this.)")
    String productRecreateAssociation();
    @DefaultMessage("Regular Price")
    String productRegularPrice();
    @DefaultMessage("Rejected Reason")
    String productRejectedReason();
    @DefaultMessage("Rejection Reason")
    String productRejectionReason();
    @DefaultMessage("Relationship")
    String productRelationship();
    @DefaultMessage("Product Remove Before")
    String productRemoveBefore();
    @DefaultMessage("Remove Expired Product Members")
    String productRemoveExpiredProductMembers();
    @DefaultMessage("Remove Feature")
    String productRemoveFeature();
    @DefaultMessage("Remove Feature from Results")
    String productRemoveFeatureFromResults();
    @DefaultMessage("ProductRemoveFromCompareListSuccess")
    String productRemoveFromCompareListSuccess(String name);
    @DefaultMessage("Remove From Site")
    String productRemoveFromSite();
    @DefaultMessage("Remove Results From")
    String productRemoveResultsFrom();
    @DefaultMessage("Reorder Quantity")
    String productReorderQuantity();
    @DefaultMessage("Replace Original")
    String productReplaceOriginal();
    @DefaultMessage("Require Amount")
    String productRequireAmount();
    @DefaultMessage("Require Co")
    String productRequireCo();
    @DefaultMessage("Require Company Addr")
    String productRequireCoAddr();
    @DefaultMessage("Require the customer to enter an amount.")
    String productRequireCustomerAmount();
    @DefaultMessage("Require Inventory")
    String productRequireInventory();
    @DefaultMessage("Require Inventory For Purchase")
    String productRequireInventoryForPurchase();
    @DefaultMessage("Setting ignored if Allow is ''N''")
    String productRequireMessage();
    @DefaultMessage("Require USPS")
    String productRequireUSPS();
    @DefaultMessage("Require USPS Addr (PO Box, RR, etc)")
    String productRequireUSPSAddr();
    @DefaultMessage("Requirement Method Enum Id")
    String productRequirementMethodEnumId();
    @DefaultMessage("Second person add.price percentage")
    String productReserv2ndPPPerc();
    @DefaultMessage("Max.Nbr. of Persons for rental")
    String productReservMaxPersons();
    @DefaultMessage("Nth person add.price percentage")
    String productReservNthPPPerc();
    @DefaultMessage("Second")
    String productReservSecond();
    @DefaultMessage("3rd")
    String productReservThird();
    @DefaultMessage("Reservation Order")
    String productReservationOrder();
    @DefaultMessage("Reserve inventory")
    String productReserveInventory();
    @DefaultMessage("Reserve inventory from facility")
    String productReserveInventoryFromFacility();
    @DefaultMessage("Reserved")
    String productReserved();
    @DefaultMessage("Reset Date")
    String productResetDate();
    @DefaultMessage("Result of image Upload")
    String productResultOfImageUpload();
    @DefaultMessage("Retail Price")
    String productRetailPrice();
    @DefaultMessage("This return is completely received")
    String productReturnCompletelyReceived();
    @DefaultMessage("Return Number")
    String productReturnNumber();
    @DefaultMessage("Return to Edit Product")
    String productReturnToEditProduct();
    @DefaultMessage("Return to Edit Product Features")
    String productReturnToEditProductFeatures();
    @DefaultMessage("Return to Receiving")
    String productReturnToReceiving();
    @DefaultMessage("Returnable")
    String productReturnable();
    @DefaultMessage("Returned")
    String productReturned();
    @DefaultMessage("Review This Product!")
    String productReviewThisProduct();
    @DefaultMessage("Reviews")
    String productReviews();
    @DefaultMessage("No Reviews Pending Approval")
    String productReviewsNoPendingApproval();
    @DefaultMessage("Reviews Pending Approval")
    String productReviewsPendingApproval();
    @DefaultMessage("Rollup")
    String productRollup();
    @DefaultMessage("Rollups")
    String productRollups();
    @DefaultMessage("Route Segment")
    String productRouteSegment();
    @DefaultMessage("Route Segments")
    String productRouteSegments();
    @DefaultMessage("Routings")
    String productRoutings();
    @DefaultMessage("Rule ID")
    String productRuleId();
    @DefaultMessage("Rule Name")
    String productRuleName();
    @DefaultMessage("Rule Name, Description, From Date, Thru Date")
    String productRuleNameFromDateThruDate();
    @DefaultMessage("Rules")
    String productRules();
    @DefaultMessage("SRCH")
    String productSRCH();
    @DefaultMessage("ST")
    String productST();
    @DefaultMessage("Sale Rule")
    String productSaleRule();
    @DefaultMessage("Sales")
    String productSales();
    @DefaultMessage("Disc. When Inv. Not Avail?")
    String productSalesDiscontinuationNotAvailable();
    @DefaultMessage("Sales Shipment Status")
    String productSalesShipmentStatus();
    @DefaultMessage("Sales Tax")
    String productSalesTax();
    @DefaultMessage("Sales Discontinuation Thru Date")
    String productSalesThruDate();
    @DefaultMessage("Schedule")
    String productSchedule();
    @DefaultMessage("Schedule These Route Segments")
    String productScheduleTheseRouteSegments();
    @DefaultMessage("Scheduling")
    String productScheduling();
    @DefaultMessage("Search Catalog")
    String productSearchCatalog();
    @DefaultMessage("Export")
    String productSearchExport();
    @DefaultMessage("Export Product List to Screen")
    String productSearchExportProductList();
    @DefaultMessage("Search feature category")
    String productSearchFeatureCategory();
    @DefaultMessage("Search feature interAction")
    String productSearchFeatureInterAction();
    @DefaultMessage("Search feature type")
    String productSearchFeatureType();
    @DefaultMessage("you searched for")
    String productSearchFor();
    @DefaultMessage("Search in Category")
    String productSearchInCategory();
    @DefaultMessage("Search by Labels")
    String productSearchInventoryItemsByLabels();
    @DefaultMessage("Search Products")
    String productSearchProducts();
    @DefaultMessage("ID Value was the actual productId of this product.")
    String productSearchResultsFound();
    @DefaultMessage("Search Results for Product with ID Value")
    String productSearchResultsWithIdValue();
    @DefaultMessage("Section")
    String productSection();
    @DefaultMessage("Segment")
    String productSegment();
    @DefaultMessage("Segment Id")
    String productSegmentGroupId();
    @DefaultMessage("Type Id")
    String productSegmentGroupTypeId();
    @DefaultMessage("Segments")
    String productSegments();
    @DefaultMessage("Select all")
    String productSelectAll();
    @DefaultMessage("Select Category")
    String productSelectCategory();
    @DefaultMessage("Select a Facility")
    String productSelectFacility();
    @DefaultMessage("Select One")
    String productSelectOne();
    @DefaultMessage("Select Shipment to Receive")
    String productSelectShipmentReceive();
    @DefaultMessage("Select To Edit")
    String productSelectToEdit();
    @DefaultMessage("Selectable")
    String productSelectable();
    @DefaultMessage("Selectable Features")
    String productSelectableFeatures();
    @DefaultMessage("Selected")
    String productSelected();
    @DefaultMessage("Seq Id")
    String productSeqId();
    @DefaultMessage("Seq Num")
    String productSeqNum();
    @DefaultMessage("Sequence")
    String productSequence();
    @DefaultMessage("Sequence Num")
    String productSequenceNum();
    @DefaultMessage("Serial# or ATP/QOH")
    String productSerialAtpQoh();
    @DefaultMessage("Serial Number")
    String productSerialNumber();
    @DefaultMessage("Serialized Inventory Found")
    String productSerializedInventoryFound();
    @DefaultMessage("Serialized Inventory Summary")
    String productSerializedInventorySummary();
    @DefaultMessage("ServerDirectory")
    String productServerDirectory();
    @DefaultMessage("Server file name")
    String productServerFileName();
    @DefaultMessage("Service Config")
    String productServiceConfig();
    @DefaultMessage("Service Name")
    String productServiceName();
    @DefaultMessage("Service Type")
    String productServiceType();
    @DefaultMessage("Set Item")
    String productSetItem();
    @DefaultMessage("Set store on WebSite")
    String productSetStoreOnWebSite();
    @DefaultMessage("Set Weight")
    String productSetWeight();
    @DefaultMessage("Get Settings From Primary Order")
    String productSettingsFromPrimaryOrder();
    @DefaultMessage("Ship Date")
    String productShipDate();
    @DefaultMessage("Ship Method")
    String productShipMethod();
    @DefaultMessage("Ship Order")
    String productShipOrder();
    @DefaultMessage("Ship-To Address")
    String productShipToAddress();
    @DefaultMessage("shipamount")
    String productShipamount();
    @DefaultMessage("shipamount=shipamount + (orderTotal * percent)")
    String productShipamountOrderTotalPercent();
    @DefaultMessage("shipamount=shipamount + price")
    String productShipamountPrice();
    @DefaultMessage("shipamount=shipamount + (shipamount * percent)")
    String productShipamountShippingTotalPercent();
    @DefaultMessage("shipamount=shipamount + (totalQuantity * price)")
    String productShipamountTotalQuantityPrice();
    @DefaultMessage("Box Type")
    String productShipmentBoxType();
    @DefaultMessage("Cost Estimate Id")
    String productShipmentCostEstimateId();
    @DefaultMessage("Appointment")
    String productShipmentFedexHomeAppointment();
    @DefaultMessage("Date Certain")
    String productShipmentFedexHomeDateCertain();
    @DefaultMessage("Home Delivery Type/Date (FedEx only)")
    String productShipmentFedexHomeDeliveryTypeDate();
    @DefaultMessage("Evening")
    String productShipmentFedexHomeEvening();
    @DefaultMessage("Shipment Id")
    String productShipmentId();
    @DefaultMessage("Insured Value")
    String productShipmentInsuredValuePackage();
    @DefaultMessage("Shipment Item Seq Id")
    String productShipmentItemSeqId();
    @DefaultMessage("Manifest for Shipment")
    String productShipmentManifest();
    @DefaultMessage("Shipment Method")
    String productShipmentMethod();
    @DefaultMessage("Shipment Method Type")
    String productShipmentMethodType();
    @DefaultMessage("Shipment Method Types")
    String productShipmentMethodTypes();
    @DefaultMessage("None")
    String productShipmentNone();
    @DefaultMessage("The Shipment was not found with ID")
    String productShipmentNotFoundId();
    @DefaultMessage("ProductShipmentPackageNotFound")
    String productShipmentPackageNotFound(String shipmentPackageSeqId, String shipmentId);
    @DefaultMessage("Shipment Plan")
    String productShipmentPlan();
    @DefaultMessage("Add To Shipment Plan")
    String productShipmentPlanAdd();
    @DefaultMessage("List for Shipment Plan")
    String productShipmentPlanList();
    @DefaultMessage("Shipment Plan --> Order Items")
    String productShipmentPlanToOrderItems();
    @DefaultMessage("Shipment Qty")
    String productShipmentQty();
    @DefaultMessage("Quick Complete Drop Shipment")
    String productShipmentQuickComplete();
    @DefaultMessage("Shipment Receipts")
    String productShipmentReceipts();
    @DefaultMessage("Shipment Receipts for")
    String productShipmentReceiptsFor();
    @DefaultMessage("Third Party Account Number")
    String productShipmentThirdPartyAccountNumber();
    @DefaultMessage("Third Party Country Code")
    String productShipmentThirdPartyCountryCode();
    @DefaultMessage("Third Party Postal Code")
    String productShipmentThirdPartyPostalCode();
    @DefaultMessage("Total Volume")
    String productShipmentTotalVolume();
    @DefaultMessage("Total Weight")
    String productShipmentTotalWeight();
    @DefaultMessage("Shipment Type")
    String productShipmentType();
    @DefaultMessage("Shipment type Id")
    String productShipmentTypeId();
    @DefaultMessage("in")
    String productShipmentUomAbbreviation_LEN_in();
    @DefaultMessage("kg")
    String productShipmentUomAbbreviation_WT_kg();
    @DefaultMessage("lbs")
    String productShipmentUomAbbreviation_WT_lb();
    @DefaultMessage("Residential Delivery")
    String productShipmentUpsResidential();
    @DefaultMessage("Shipments")
    String productShipments();
    @DefaultMessage("Shipments Found")
    String productShipmentsFound();
    @DefaultMessage("Shipping")
    String productShipping();
    @DefaultMessage("Shipping Address")
    String productShippingAddress();
    @DefaultMessage("In Shipping Box ?")
    String productShippingBox();
    @DefaultMessage("Shipping Depth")
    String productShippingDepth();
    @DefaultMessage("Shipping Dimensions and Weights")
    String productShippingDimensionsAndWeights();
    @DefaultMessage("Shipping Height")
    String productShippingHeight();
    @DefaultMessage("Shipping Label")
    String productShippingLabel();
    @DefaultMessage("Shipping Weight")
    String productShippingWeight();
    @DefaultMessage("Shipping Width")
    String productShippingWidth();
    @DefaultMessage("Short Description")
    String productShortDescription();
    @DefaultMessage("Show Active")
    String productShowActive();
    @DefaultMessage("Show All")
    String productShowAll();
    @DefaultMessage("showAllFacilities")
    String productShowAllFacilities();
    @DefaultMessage("Show Empty Items")
    String productShowEmptyItems();
    @DefaultMessage("showProductFacilities")
    String productShowProductFacilities();
    @DefaultMessage("Show Products Per Page")
    String productShowProductsPerPage();
    @DefaultMessage("Show Products Sold Thru")
    String productShowProductsSoldThruTimestamp();
    @DefaultMessage("Similar Products That Might Interest You...")
    String productSimilarProducts();
    @DefaultMessage("Single Choice")
    String productSingleChoice();
    @DefaultMessage("Single order item for this product")
    String productSingleOrderItemProduct();
    @DefaultMessage("Single Use")
    String productSingleUse();
    @DefaultMessage("Small Image")
    String productSmallImage();
    @DefaultMessage("Soft Identifier")
    String productSoftIdentifier();
    @DefaultMessage("Sort Order")
    String productSortOrder();
    @DefaultMessage("Sorted by")
    String productSortedBy();
    @DefaultMessage("Special Promo Price")
    String productSpecialPromoPrice();
    @DefaultMessage("SqFt")
    String productSqFt();
    @DefaultMessage("Standard")
    String productStandard();
    @DefaultMessage("Standard Features")
    String productStandardFeatures();
    @DefaultMessage("Standard lead time days")
    String productStandardLeadTimeDays();
    @DefaultMessage("State")
    String productState();
    @DefaultMessage("Status Id")
    String productStatusId();
    @DefaultMessage("Stock Moves")
    String productStockMoves();
    @DefaultMessage("Stock Moves Needed")
    String productStockMovesNeeded();
    @DefaultMessage("Store")
    String productStore();
    @DefaultMessage("Product Store Financial Account Settings")
    String productStoreFinAccountSettings();
    @DefaultMessage("Not Applicable")
    String productStoreGroup_description__NA_();
    @DefaultMessage("Not Applicable")
    String productStoreGroup_productStoreGroupName__NA_();
    @DefaultMessage("Store ID")
    String productStoreId();
    @DefaultMessage("Store Keyword Overrides")
    String productStoreKeywordOverrides();
    @DefaultMessage("Store Name")
    String productStoreName();
    @DefaultMessage("Store Name [ID]")
    String productStoreNameId();
    @DefaultMessage("Store Shipment Method Associations")
    String productStoreShipmentMethodAssociations();
    @DefaultMessage("Result Template Path")
    String productStoreSurveyResultTemplatePath();
    @DefaultMessage("Store Survey Settings")
    String productStoreSurveySettings();
    @DefaultMessage("Survey Template Path")
    String productStoreSurveyTemplatePath();
    @DefaultMessage("Product Store Vendor Payments")
    String productStoreVendorPayments();
    @DefaultMessage("Product Store Vendor Shipments")
    String productStoreVendorShipments();
    @DefaultMessage("Stores")
    String productStores();
    @DefaultMessage("Stores For")
    String productStoresFor();
    @DefaultMessage("Style Sheet")
    String productStyleSheet();
    @DefaultMessage("SubCats")
    String productSubCats();
    @DefaultMessage("SubProduct")
    String productSubProduct();
    @DefaultMessage("Sub-Title")
    String productSubTitle();
    @DefaultMessage("Subject")
    String productSubject();
    @DefaultMessage("Submit")
    String productSubmit();
    @DefaultMessage("Subscription")
    String productSubscription();
    @DefaultMessage("Subscription Attributes")
    String productSubscriptionAttributes();
    @DefaultMessage("k Communication Event")
    String productSubscriptionCommEvent();
    @DefaultMessage("Subscription Resource")
    String productSubscriptionResource();
    @DefaultMessage("Subscription Resource View Permission Error")
    String productSubscriptionResourceViewPermissionError();
    @DefaultMessage("Subscription Resources")
    String productSubscriptionResources();
    @DefaultMessage("Subscription View Permission Error")
    String productSubscriptionViewPermissionError();
    @DefaultMessage("Subscriptions")
    String productSubscriptions();
    @DefaultMessage("Supplier")
    String productSupplier();
    @DefaultMessage("Supplier can drop ship?")
    String productSupplierCanDropShip();
    @DefaultMessage("Supplier pref order Id")
    String productSupplierPrefOrderId();
    @DefaultMessage("Supplier product Id")
    String productSupplierProductId();
    @DefaultMessage("Supplier product name")
    String productSupplierProductName();
    @DefaultMessage("Product supplier rating type Id")
    String productSupplierRatingTypeId();
    @DefaultMessage("Supplier Specific Feature Information")
    String productSupplierSpecificFeatureInformation();
    @DefaultMessage("Suppliers")
    String productSuppliers();
    @DefaultMessage("Suppliers Id")
    String productSuppliersId();
    @DefaultMessage("Support Thru Date")
    String productSupportThruDate();
    @DefaultMessage("surcharge")
    String productSurcharge();
    @DefaultMessage("TD")
    String productTD();
    @DefaultMessage("Target Product Category")
    String productTargetProductCategory();
    @DefaultMessage("Target Type")
    String productTargetType();
    @DefaultMessage("Target Type Enum [Id]")
    String productTargetTypeEnumId();
    @DefaultMessage("Tax Rate")
    String productTaxRate();
    @DefaultMessage("Tax Shipping")
    String productTaxShipping();
    @DefaultMessage("Tax Vat Code")
    String productTaxVatCode();
    @DefaultMessage("Taxable")
    String productTaxable();
    @DefaultMessage("Template Path")
    String productTemplatePath();
    @DefaultMessage("Template Path Prefix")
    String productTemplatePathPrefix();
    @DefaultMessage("Text")
    String productText();
    @DefaultMessage("Text Data Resource Id")
    String productTextDataResourceId();
    @DefaultMessage("The file on your computer")
    String productTheFileOnYourComputer();
    @DefaultMessage("The URL of your Uploaded File")
    String productTheUrlOfYourUploadedFile();
    @DefaultMessage("Thesaurus")
    String productThesaurus();
    @DefaultMessage("This is it")
    String productThisIsIt();
    @DefaultMessage("Thru Date, Amount, Sequence, Application Type")
    String productThruDateAmountSequenceApplicationType();
    @DefaultMessage("Thru Date/Time, Price")
    String productThruDateTimePrice();
    @DefaultMessage("Thru Date/Time Sequence")
    String productThruDateTimeSequence();
    @DefaultMessage("Thru Date/Time, Sequence Quantity")
    String productThruDateTimeSequenceQuantity();
    @DefaultMessage("Thru Date/Time, Sequence Type")
    String productThruDateTimeSequenceType();
    @DefaultMessage("Title")
    String productTitle();
    @DefaultMessage("To Facility / Container")
    String productToFacilityContainer();
    @DefaultMessage("To Geo")
    String productToGeo();
    @DefaultMessage("To Location")
    String productToLocation();
    @DefaultMessage("To Pack")
    String productToPack();
    @DefaultMessage("To Party")
    String productToParty();
    @DefaultMessage("To Pick")
    String productToPick();
    @DefaultMessage("To Receive")
    String productToReceive();
    @DefaultMessage("Tot Issued Quantity")
    String productTotIssuedQuantity();
    @DefaultMessage("Tot Ordered Quantity")
    String productTotOrderedQuantity();
    @DefaultMessage("Tot Planned Quantity")
    String productTotPlannedQuantity();
    @DefaultMessage("Total Cost Price")
    String productTotalCostPrice();
    @DefaultMessage("total feature(s) applied")
    String productTotalFeaturesApplied();
    @DefaultMessage("Total List Price")
    String productTotalListPrice();
    @DefaultMessage("Total Retail Price")
    String productTotalRetailPrice();
    @DefaultMessage("Track")
    String productTrack();
    @DefaultMessage("Track UPS Shipment")
    String productTrackUpsShipment();
    @DefaultMessage("Tracking")
    String productTracking();
    @DefaultMessage("Tracking Number")
    String productTrackingNumber();
    @DefaultMessage("Transfer")
    String productTransfer();
    @DefaultMessage("Transfer ID")
    String productTransferId();
    @DefaultMessage("Transfer Item")
    String productTransferItem();
    @DefaultMessage("Transfer Receive Date")
    String productTransferReceiveDate();
    @DefaultMessage("Transfer Send Date")
    String productTransferSendDate();
    @DefaultMessage("Transfer Status")
    String productTransferStatus();
    @DefaultMessage("Type")
    String productType();
    @DefaultMessage("Configurable Good")
    String productType_description_AGGREGATED();
    @DefaultMessage("Configurable Good Configuration")
    String productType_description_AGGREGATED_CONF();
    @DefaultMessage("Fixed Asset Usage")
    String productType_description_ASSET_USAGE();
    @DefaultMessage("Digital Good")
    String productType_description_DIGITAL_GOOD();
    @DefaultMessage("Finished/Digital Good")
    String productType_description_FINDIG_GOOD();
    @DefaultMessage("Finished Good")
    String productType_description_FINISHED_GOOD();
    @DefaultMessage("Good")
    String productType_description_GOOD();
    @DefaultMessage("Marketing Package")
    String productType_description_MARKETING_PKG();
    @DefaultMessage("Marketing Package: Auto Manufactured")
    String productType_description_MARKETING_PKG_AUTO();
    @DefaultMessage("Marketing Package: Pick Assembly")
    String productType_description_MARKETING_PKG_PICK();
    @DefaultMessage("Raw Material")
    String productType_description_RAW_MATERIAL();
    @DefaultMessage("Service")
    String productType_description_SERVICE();
    @DefaultMessage("Subassembly")
    String productType_description_SUBASSEMBLY();
    @DefaultMessage("Work In Process")
    String productType_description_WIP();
    @DefaultMessage("UPCA")
    String productUPCA();
    @DefaultMessage("Unit Of Measure")
    String productUnitOfMeasure();
    @DefaultMessage("Unit of Measure ID")
    String productUnitOfMeasureId();
    @DefaultMessage("Units Included")
    String productUnitsIncluded();
    @DefaultMessage("unknown, serialNumber")
    String productUnknownSerialNumber();
    @DefaultMessage("Unknown; specify a type")
    String productUnknownSpecifyType();
    @DefaultMessage("Uom Id")
    String productUomId();
    @DefaultMessage("Try these instead of")
    String productUpSell();
    @DefaultMessage("Update Categories")
    String productUpdateCategories();
    @DefaultMessage("Update Category Content Assoc")
    String productUpdateCategoryContentAssoc();
    @DefaultMessage("Update Download Content for Product")
    String productUpdateDownloadContentProduct();
    @DefaultMessage("Update Email Content for Product")
    String productUpdateEmailContentProduct();
    @DefaultMessage("Update External Content for Product")
    String productUpdateExternalContentProduct();
    @DefaultMessage("Update Name")
    String productUpdateName();
    @DefaultMessage("Update Product")
    String productUpdateProduct();
    @DefaultMessage("Update Product Variants")
    String productUpdateProductVariants();
    @DefaultMessage("Update Shipping")
    String productUpdateShipping();
    @DefaultMessage("Update Simple Text Content for Category")
    String productUpdateSimpleTextContentCategory();
    @DefaultMessage("Update Simple Text Content for Product")
    String productUpdateSimpleTextContentProduct();
    @DefaultMessage("Upload Category Image")
    String productUploadCategoryImage();
    @DefaultMessage("Upload Image")
    String productUploadImage();
    @DefaultMessage("Upload Link One Image")
    String productUploadLinkOneImage();
    @DefaultMessage("Upload Link Two Image")
    String productUploadLinkTwoImage();
    @DefaultMessage("Usage")
    String productUsage();
    @DefaultMessage("Use Count")
    String productUseCount();
    @DefaultMessage("Use Count Limit")
    String productUseCountLimit();
    @DefaultMessage("Use Days")
    String productUseDays();
    @DefaultMessage("Use Days Limit")
    String productUseDaysLimit();
    @DefaultMessage("Use Quick Add")
    String productUseQuickAdd();
    @DefaultMessage("Use Role")
    String productUseRole();
    @DefaultMessage("Use Time")
    String productUseTime();
    @DefaultMessage("Use Time Uom")
    String productUseTimeUom();
    @DefaultMessage("Used For Display Ordering")
    String productUsedForDisplayOrdering();
    @DefaultMessage("Usually ships in")
    String productUsuallyShipsIn();
    @DefaultMessage("Value, Type")
    String productValueType();
    @DefaultMessage("Add Variant Products")
    String productVariantAdd();
    @DefaultMessage("Is VARIANT Product ?")
    String productVariantProduct();
    @DefaultMessage("Variant Product IDs")
    String productVariantProductIds();
    @DefaultMessage("Variant Product Inventory Summary")
    String productVariantProductInventorySummary();
    @DefaultMessage("Variants")
    String productVariants();
    @DefaultMessage("Vat Tax Authority Geo not set.")
    String productVatTaxAuthGeoNotSet();
    @DefaultMessage("Vat Tax Auth Party not set.")
    String productVatTaxAuthPartyNotSet();
    @DefaultMessage("Vendor Payments")
    String productVendorPayments();
    @DefaultMessage("Vendor Product")
    String productVendorProduct();
    @DefaultMessage("Vendor Shipments")
    String productVendorShipments();
    @DefaultMessage("Verified")
    String productVerified();
    @DefaultMessage("Verify")
    String productVerify();
    @DefaultMessage("Verify Pick")
    String productVerifyPick();
    @DefaultMessage("Shipping Estimates")
    String productViewEstimates();
    @DefaultMessage("View Label Image")
    String productViewLabelImage();
    @DefaultMessage("You do not have permission to view this page. (\"CATALOG_VIEW\" or \"CATALOG_ADMIN\" needed)")
    String productViewPermissionError();
    @DefaultMessage("Virtual Product")
    String productVirtualFieldGroup();
    @DefaultMessage("Is VIRTUAL Product ?")
    String productVirtualProduct();
    @DefaultMessage("Virtual Variant Method")
    String productVirtualVariantMethod();
    @DefaultMessage("Void UPS Shipment")
    String productVoidUpsShipment();
    @DefaultMessage("Void UPS Shipment Confirmation")
    String productVoidUpsShipmentConfirmation();
    @DefaultMessage("Warehouse Area")
    String productWarehouseArea();
    @DefaultMessage("WARNING: Order Status is")
    String productWarningOrderStatus();
    @DefaultMessage("WARNING: Order Type is")
    String productWarningOrderType();
    @DefaultMessage("This product is not a virtual product, variants will not generally be used.")
    String productWarningProductNotVirtual();
    @DefaultMessage("This is a virtual product and generally should not have inventory items associated with it")
    String productWarningVirtualProduct();
    @DefaultMessage("Web Site")
    String productWebSite();
    @DefaultMessage("WebSite [ID]")
    String productWebSiteId();
    @DefaultMessage("Web Sites")
    String productWebSites();
    @DefaultMessage("Weigh Packages Only")
    String productWeighPackageOnly();
    @DefaultMessage("Weight")
    String productWeight();
    @DefaultMessage("WeightBreakId")
    String productWeightBreakId();
    @DefaultMessage("Weight charge")
    String productWeightTitle1();
    @DefaultMessage("Weight Unit")
    String productWeightUnit();
    @DefaultMessage("Weight Uom Id")
    String productWeightUomId();
    @DefaultMessage("Whole Sale Price")
    String productWholeSalePrice();
    @DefaultMessage("Width")
    String productWidth();
    @DefaultMessage("Width Uom Id")
    String productWidthUomId();
    @DefaultMessage("Wording And Comment")
    String productWordingAndComment();
    @DefaultMessage("Work Effort")
    String productWorkEffort();
    @DefaultMessage("Work Effort Name")
    String productWorkEffortName();
    @DefaultMessage("Work Item")
    String productWorkItem();
    @DefaultMessage("you searched for")
    String productYouSearchedFor();
    @DefaultMessage("product.no_longer_for_sale")
    String product_no_longer_for_sale(String param_0, String param_1);
    @DefaultMessage("product.not_found")
    String product_not_found(String param_0);
    @DefaultMessage("product.not_yet_for_sale")
    String product_not_yet_for_sale(String param_0, String param_1);
    @DefaultMessage("product.out_of_stock")
    String product_out_of_stock(String param_0, String param_1);
    @DefaultMessage("productpromoworker.promotion_code_already_been_entered")
    String productpromoworker_promotion_code_already_been_entered(String productPromoCodeId);
    @DefaultMessage("productpromoworker.promotion_code_error_lookup")
    String productpromoworker_promotion_code_error_lookup(String productPromoCodeId);
    @DefaultMessage("productpromoworker.promotion_code_is_expired_at")
    String productpromoworker_promotion_code_is_expired_at(String productPromoCodeId, String thruDate);
    @DefaultMessage("productpromoworker.promotion_code_maximum_limit")
    String productpromoworker_promotion_code_maximum_limit(String productPromoCodeId);
    @DefaultMessage("productpromoworker.promotion_code_no_account_or_email")
    String productpromoworker_promotion_code_no_account_or_email(String productPromoCodeId);
    @DefaultMessage("productpromoworker.promotion_code_not_valid")
    String productpromoworker_promotion_code_not_valid(String productPromoCodeId);
    @DefaultMessage("productpromoworker.promotion_code_will_be_activated_at")
    String productpromoworker_promotion_code_will_be_activated_at(String productPromoCodeId);
    @DefaultMessage("Project")
    String project();
    @DefaultMessage("Actual Hours")
    String projectMgrActualHours();
    @DefaultMessage("Planned Hours")
    String projectMgrPlannedHours();
    @DefaultMessage("Project Name")
    String projectMgrProjectName();
    @DefaultMessage("Portuguese")
    String pt();
    @DefaultMessage("Portuguese Brazil")
    String pt_BR();
    @DefaultMessage("Portuguese Portugal")
    String pt_PT();
    @DefaultMessage("PuchBshError_CannotFindProductsForSupplier")
    String puchBshError_CannotFindProductsForSupplier(String supplierPartyId);
    @DefaultMessage("Add Existing Backup Warehouse")
    String purchAddExistingBackupWarehouse();
    @DefaultMessage("Add New Backup Warehouse")
    String purchAddNewBackupWarehouse();
    @DefaultMessage("Approved Internal Requirements")
    String purchApprovedInternalRequirements();
    @DefaultMessage("Approved Orders")
    String purchApprovedOrders();
    @DefaultMessage("Approved Requirements")
    String purchApprovedRequirements();
    @DefaultMessage("Approved Transfer Requirements")
    String purchApprovedTransferRequirements();
    @DefaultMessage("Backorder Date")
    String purchBackOrdersReportBackorderDate();
    @DefaultMessage("Main Supplier")
    String purchBackOrdersReportMainSupplier();
    @DefaultMessage("Min Stock")
    String purchBackOrdersReportMinStock();
    @DefaultMessage("Order Date")
    String purchBackOrdersReportOrderDate();
    @DefaultMessage("Sales")
    String purchBackOrdersReportProductSales();
    @DefaultMessage("Disc?")
    String purchBackOrdersReportProductSalesDiscontinued();
    @DefaultMessage("Reorder Qty")
    String purchBackOrdersReportReorderQty();
    @DefaultMessage("Open Sales Order Items Report")
    String purchBackOrdersReportTitle();
    @DefaultMessage("Backorders")
    String purchBackorders();
    @DefaultMessage("Backup Warehouse")
    String purchBackupWarehouse();
    @DefaultMessage("Backup Warehouses")
    String purchBackupWarehouses();
    @DefaultMessage("BOM")
    String purchBom();
    @DefaultMessage("Only for Routing")
    String purchBomComponentOnlyForRouting();
    @DefaultMessage("Configure Warehouses")
    String purchConfigureWarehouses();
    @DefaultMessage("Confirm Merge Suppliers")
    String purchConfirmMergeSuppliers();
    @DefaultMessage("Consolidate Requirements")
    String purchConsolidateRequirements();
    @DefaultMessage("Create Purchase Agreement")
    String purchCreateAgreement();
    @DefaultMessage("Create Agreement Term")
    String purchCreateAgreementTerm();
    @DefaultMessage("Create Inventory Transfer")
    String purchCreateInventoryTransfer();
    @DefaultMessage("Create Supplier")
    String purchCreateSupplier();
    @DefaultMessage("PurchCreateSupplierDuplicateCheckFail")
    String purchCreateSupplierDuplicateCheckFail(String partyId);
    @DefaultMessage("Create Supplier Ignoring Duplicates")
    String purchCreateSupplierIgnoreDuplicate();
    @DefaultMessage("Created Orders")
    String purchCreatedOrders();
    @DefaultMessage("Delivery Schedule")
    String purchDeliverySchedule();
    @DefaultMessage("Edit Agreement")
    String purchEditAgreement();
    @DefaultMessage("Edit Estimated Delivery Date")
    String purchEditEstDeliveryDate();
    @DefaultMessage("Edit Order Items Estimated Delivery Date")
    String purchEditOrderItemsEstDeliveryDate();
    @DefaultMessage("Edit Product Estimated Delivery Date")
    String purchEditProductEstDeliveryDate();
    @DefaultMessage("PurchError_CannotFindProductFacilityForMrpInventoryEvent")
    String purchError_CannotFindProductFacilityForMrpInventoryEvent(String inventoryEventPlanTypeId);
    @DefaultMessage("Failed to create production runs from the pending internal requirements.")
    String purchError_CreateProdRunFromPendingRequirementsFail();
    @DefaultMessage("Failed to create supplier")
    String purchError_CreateSupplierFail();
    @DefaultMessage("Requested order item doesn''t exist in database.")
    String purchError_OrderItemNotExists();
    @DefaultMessage("Failed to retrieve list of requirements for supplier")
    String purchError_RequirementFailToListBySupplier();
    @DefaultMessage("Failed to retrieve requested requirement")
    String purchError_RequirementFailToRetrieve();
    @DefaultMessage("Requested requirement doesn''t exist in database.")
    String purchError_RequirementNotExists();
    @DefaultMessage("PurchError_RequirementNotExpectedType")
    String purchError_RequirementNotExpectedType(String requirementId, String requirementTypeId);
    @DefaultMessage("Failed to transfer inventory from the requirement.")
    String purchError_RequirementNotTransferred();
    @DefaultMessage("Failed to update requirement status.")
    String purchError_RequirementNotUpdated();
    @DefaultMessage("Failed to update the estimated delivery date")
    String purchError_UpdateOrderItemEstimatedDeliveryDateFail();
    @DefaultMessage("Failed to update supplier:")
    String purchError_UpdateSupplierFail();
    @DefaultMessage("Est. Delivery Date")
    String purchEstDeliveryDate();
    @DefaultMessage("Estimated Delivery Dates Report")
    String purchEstDeliveryDateReportTitle();
    @DefaultMessage("Estimated Delivery Date")
    String purchEstimatedDeliveryDate();
    @DefaultMessage("Find Requirements")
    String purchFindRequirements();
    @DefaultMessage("Find Suppliers")
    String purchFindSuppliers();
    @DefaultMessage("From Supplier")
    String purchFromSupplier();
    @DefaultMessage("Held Orders")
    String purchHeldOrders();
    @DefaultMessage("Requirements")
    String purchHomeRequirements();
    @DefaultMessage("Initial Manager")
    String purchInitialManager();
    @DefaultMessage("Invoice Supplies")
    String purchInvoiceSupplies();
    @DefaultMessage("Max Quantity")
    String purchMaxQuantity();
    @DefaultMessage("Merge Suppliers")
    String purchMergeSuppliers();
    @DefaultMessage("Min Quantity")
    String purchMinQuantity();
    @DefaultMessage("Create Pending Internal Requirements?")
    String purchMrpCreatePendingManufacturingRequirements();
    @DefaultMessage("Create Transfer Requirements?")
    String purchMrpCreateTransferRequirements();
    @DefaultMessage("PurchMrpInventoryTransferFromToAt")
    String purchMrpInventoryTransferFromToAt(String inventoryTransferIds, String fromFacilityName, String toFacilityName, String transferTime);
    @DefaultMessage("Percentage of Sales Forecast to Use")
    String purchMrpPercentageOfSalesForecast();
    @DefaultMessage("Inventory Receipt Time Buffer")
    String purchMrpReceiptEventBuffer();
    @DefaultMessage("Default Years in Future for Sales Orders")
    String purchMrpSalesOrderDefaultYearsInFuture();
    @DefaultMessage("MRP Store Group")
    String purchMrpStoreGroup();
    @DefaultMessage("PurchMrpTransferRequirementFromToAt")
    String purchMrpTransferRequirementFromToAt(String requirementId, String fromFacilityName, String toFacilityName, String transferTime);
    @DefaultMessage("PurchNavHistoryOrder")
    String purchNavHistoryOrder(String orderId);
    @DefaultMessage("Net Quantity")
    String purchNetQuantity();
    @DefaultMessage("There are no agreements for this supplier")
    String purchNoAgreements();
    @DefaultMessage("No open purchase orders found.")
    String purchNoOrdersFound();
    @DefaultMessage("No shipping address")
    String purchNoShippingAddress();
    @DefaultMessage("Number of Approved Production Requirements")
    String purchNumInternalRequirementsApproved();
    @DefaultMessage("Number of New Transfer Requirements")
    String purchNumNewTransferRequirements();
    @DefaultMessage("Number of Approved Orders")
    String purchNumOrdersApproved();
    @DefaultMessage("Number of New Orders")
    String purchNumOrdersCreated();
    @DefaultMessage("Number of Orders on Hold")
    String purchNumOrdersHeld();
    @DefaultMessage("Number of New Production Requirements")
    String purchNumProductionRequirementsCreated();
    @DefaultMessage("Number of Approved Purchasing Requirements")
    String purchNumPurchasingRequirementsApproved();
    @DefaultMessage("Number of New Purchasing Requirements")
    String purchNumPurchasingRequirementsCreated();
    @DefaultMessage("Number of Approved Transfer Requirements")
    String purchNumTransferRequirementsApproved();
    @DefaultMessage("# Products")
    String purchNumberProducts();
    @DefaultMessage("This address will be used for this purchase order only")
    String purchOnlyThisOrder();
    @DefaultMessage("Open Orders")
    String purchOpenOrders();
    @DefaultMessage("Open Requirements")
    String purchOpenRequirements();
    @DefaultMessage("Allocated Orders")
    String purchOpenRequirementsAllocatedOrders();
    @DefaultMessage("Order All")
    String purchOrderAll();
    @DefaultMessage("Are you sure to change the agreement for the order (current terms will be removed first)?")
    String purchOrderConfirmChangeAgreement();
    @DefaultMessage("This product is not set up to be purchased from the supplier. Add anyway?")
    String purchOrderConfirmNotExistSupplierProduct();
    @DefaultMessage("PurchOrderCreateSupplierProductByUserLogin")
    String purchOrderCreateSupplierProductByUserLogin(String userLoginId);
    @DefaultMessage("Order Item Description")
    String purchOrderItemDescription();
    @DefaultMessage("Set Order Options and Shipping")
    String purchOrderOptionAndShipToSettings();
    @DefaultMessage("Single Use Address")
    String purchOrderOtherAddress();
    @DefaultMessage("Review Order")
    String purchOrderReviewOrder();
    @DefaultMessage("Or Set Order Terms from an Agreement")
    String purchOrderSetOrderTermsFromAgreement();
    @DefaultMessage("Ship to")
    String purchOrderShipTo();
    @DefaultMessage("Special Instructions")
    String purchOrderShippingInstructions();
    @DefaultMessage("Single Use Address")
    String purchOrderSingleUseAddress();
    @DefaultMessage("Order Terms")
    String purchOrderTerms();
    @DefaultMessage("Outsource a Task")
    String purchOutsourceRoutingTask();
    @DefaultMessage("Planning")
    String purchPlanning();
    @DefaultMessage("Primary Warehouse")
    String purchPrimaryWarehouse();
    @DefaultMessage("Purchases by Product")
    String purchPurchasesByProductReport();
    @DefaultMessage("Purchases by Supplier")
    String purchPurchasesBySupplierReport();
    @DefaultMessage("Only taking into account products where the Id matches")
    String purchReportFilteredByProductId();
    @DefaultMessage("Only showing products where the Supplier Id matches")
    String purchReportFilteredBySupplierId();
    @DefaultMessage("PurchRequirementInHistory")
    String purchRequirementInHistory(String requirementId, String productId);
    @DefaultMessage("PurchRequirementNotExist")
    String purchRequirementNotExist(String requirementId);
    @DefaultMessage("Run MRP")
    String purchRunMRP();
    @DefaultMessage("See All Delivery Dates")
    String purchSeeAllDeliveryDates();
    @DefaultMessage("Select Warehouse")
    String purchSelectWarehouse();
    @DefaultMessage("Set all to")
    String purchSetAllRowsToThisDate();
    @DefaultMessage("Shipping Destination")
    String purchShipToSettings();
    @DefaultMessage("Shipping Information")
    String purchShippingInformation();
    @DefaultMessage("PurchSuccess_CreatedProductionRunsFromPendingRequirementsSuccess")
    String purchSuccess_CreatedProductionRunsFromPendingRequirementsSuccess(String supplierName, String numberOfRequirements);
    @DefaultMessage("PurchSuccess_RequirementsBatchCancelSuccess")
    String purchSuccess_RequirementsBatchCancelSuccess(String supplierName, String numberOfRequirements);
    @DefaultMessage("Supplier Details")
    String purchSupplierDetails();
    @DefaultMessage("Supplier Name")
    String purchSupplierName();
    @DefaultMessage("Suppliers")
    String purchSuppliers();
    @DefaultMessage("Duplicates found")
    String purchSuppliersWithDuplicateName();
    @DefaultMessage("Task")
    String purchTask();
    @DefaultMessage("To Supplier")
    String purchToSupplier();
    @DefaultMessage("Edit Supplier")
    String purchUpdateSupplier();
    @DefaultMessage("Agreement Details")
    String purchViewAgreement();
    @DefaultMessage("View MRP")
    String purchViewMRP();
    @DefaultMessage("Warehouses with Backups")
    String purchWarehousesWithBackups();
    @DefaultMessage("Opentaps Purchasing Login")
    String purchasingLoginGreeting();
    @DefaultMessage("Price Component Order Value Break")
    String quantityBreakType_description_ORDER_VALUE();
    @DefaultMessage("Price Component Quantity Break")
    String quantityBreakType_description_QUANTITY();
    @DefaultMessage("Shipping Price Break")
    String quantityBreakType_description_SHIP_PRICE();
    @DefaultMessage("Shipping Quantity Break")
    String quantityBreakType_description_SHIP_QUANTITY();
    @DefaultMessage("Shipping Weight Break")
    String quantityBreakType_description_SHIP_WEIGHT();
    @DefaultMessage("Charge Type")
    String quoteReportItemChargeType();
    @DefaultMessage("ID")
    String quoteReportItemID();
    @DefaultMessage("Product Name")
    String quoteReportItemProductName();
    @DefaultMessage("Quantity")
    String quoteReportItemQuantity();
    @DefaultMessage("Subtotal")
    String quoteReportItemSubtotal();
    @DefaultMessage("Unit Price")
    String quoteReportItemUnitPrice();
    @DefaultMessage("Notice: Our acceptance of a purchase order does not necessarily constitute acceptance of all terms specified therein. Quotes are subject to all catalog terms and our approval when your order is placed. Terms are net 30. Shipping is FOB factory. There may be a variance in product dimensions and a +/- 10% over/underrun factor.")
    String quoteReportNotice();
    @DefaultMessage("Quoted items")
    String quoteReportProductItemTitle();
    @DefaultMessage("Additional charges")
    String quoteReportServiceItemTitle();
    @DefaultMessage("Refresh")
    String refresh();
    @DefaultMessage("Damaged")
    String rejectionReason_description_SRJ_DAMAGED();
    @DefaultMessage("Not Ordered")
    String rejectionReason_description_SRJ_NOT_ORDERED();
    @DefaultMessage("Over Shipped")
    String rejectionReason_description_SRJ_OVER_SHIPPED();
    @DefaultMessage("Revert")
    String revert();
    @DefaultMessage("Russian")
    String ru();
    @DefaultMessage("SFA")
    String sFA();
    @DefaultMessage("Save All")
    String saveAll();
    @DefaultMessage("Search")
    String search();
    @DefaultMessage("Item")
    String searchItem();
    @DefaultMessage("Items")
    String searchItems();
    @DefaultMessage("searchNoResults")
    String searchNoResults(String query);
    @DefaultMessage("Search Results")
    String searchResults();
    @DefaultMessage("serverEmptyResponseError")
    String serverEmptyResponseError(String resource);
    @DefaultMessage("serverHttpError")
    String serverHttpError(String code, String resource);
    @DefaultMessage("Shark")
    String shark();
    @DefaultMessage("Trouble getting OrderItemShipGrpInvRes List")
    String shipBeforeDateOrderTroubleGettingOrderItemShipGrpInvResList();
    @DefaultMessage("Ship From Address")
    String shipmentContactMechType_description_SHIP_FROM_ADDRESS();
    @DefaultMessage("Ship From Telecom")
    String shipmentContactMechType_description_SHIP_FROM_TELECOM();
    @DefaultMessage("Ship To Address")
    String shipmentContactMechType_description_SHIP_TO_ADDRESS();
    @DefaultMessage("Ship To Email")
    String shipmentContactMechType_description_SHIP_TO_EMAIL();
    @DefaultMessage("Ship To Telecom")
    String shipmentContactMechType_description_SHIP_TO_TELECOM();
    @DefaultMessage("Drop Shipment")
    String shipmentType_description_DROP_SHIPMENT();
    @DefaultMessage("Incoming")
    String shipmentType_description_INCOMING_SHIPMENT();
    @DefaultMessage("Manufacturing Ship")
    String shipmentType_description_MANUFACTURING_SHIP();
    @DefaultMessage("Outgoing")
    String shipmentType_description_OUTGOING_SHIPMENT();
    @DefaultMessage("Purchase Return")
    String shipmentType_description_PURCHASE_RETURN();
    @DefaultMessage("Purchase Shipment")
    String shipmentType_description_PURCHASE_SHIPMENT();
    @DefaultMessage("Sales Return")
    String shipmentType_description_SALES_RETURN();
    @DefaultMessage("Sales Shipment")
    String shipmentType_description_SALES_SHIPMENT();
    @DefaultMessage("Transfer")
    String shipmentType_description_TRANSFER();
    @DefaultMessage("Could not select alternate gift, alternateGwpLine is not a valid number")
    String shoppingCartEvents_invalid_alternateGwpLine();
    @DefaultMessage("Could not select alternate gift, no alternateGwpLine passed")
    String shoppingCartEvents_no_alternateGwpLine();
    @DefaultMessage("Could not select alternate gift, no alternateGwpProductId passed")
    String shoppingCartEvents_no_alternateGwpProductId();
    @DefaultMessage("Could not select alternate gift, no cart line item found for S")
    String shoppingCartEvents_no_cartline_item_01();
    @DefaultMessage("does not appear to be a valid promotional gift")
    String shoppingCartEvents_no_cartline_item_02();
    @DefaultMessage("Problem in parsing item desired delivery date string")
    String shoppingCartEvents_problem_parsing_item_desiredDeliveryDate_string();
    @DefaultMessage("No items found to add")
    String shoppingCartHelper_no_items_found_to_add();
    @DefaultMessage("Error calling the updateShoppingListItem in handleShoppingListItemVariant")
    String shoppingListEvents_error_calling_update();
    @DefaultMessage("shoppinglistevents.added_product_to_cart")
    String shoppinglistevents_added_product_to_cart(String productId);
    @DefaultMessage("Cannot create new shopping list.")
    String shoppinglistevents_cannot_create_new_shopping_list();
    @DefaultMessage("Please choose a shopping list.")
    String shoppinglistevents_choose_shopping_list();
    @DefaultMessage("Error adding item to shopping list.")
    String shoppinglistevents_error_adding_item_to_shopping_list();
    @DefaultMessage("Error getting shopping list and items.")
    String shoppinglistevents_error_getting_shopping_list_and_items();
    @DefaultMessage("No items were added.")
    String shoppinglistevents_no_items_added();
    @DefaultMessage("shoppinglistevents.problem_adding_product_to_cart")
    String shoppinglistevents_problem_adding_product_to_cart(String productId);
    @DefaultMessage("Please select item(s) to add to the shopping list.")
    String shoppinglistevents_select_items_to_add_to_list();
    @DefaultMessage("shoppingListId is a required parameter.")
    String shoppinglistevents_shoppingListId_is_required_parameter();
    @DefaultMessage("State / Province")
    String stateOrProvince();
    @DefaultMessage("Newsgroup")
    String subscriptionType_description_NEWSGROUP_SUBSCR();
    @DefaultMessage("Other")
    String subscriptionType_description_OTHER_SUBSCR();
    @DefaultMessage("Product Info")
    String subscriptionType_description_PRODUCT_INFO_SUBSCR();
    @DefaultMessage("Product")
    String subscriptionType_description_PRODUCT_SUBSCR();
    @DefaultMessage("Type text")
    String suggestEmpty();
    @DefaultMessage("Searching...")
    String suggestSearching();
    @DefaultMessage("Supplier Id")
    String supplierId();
    @DefaultMessage("Supplier List")
    String supplierList();
    @DefaultMessage("Supplier Name")
    String supplierName();
    @DefaultMessage("Agreement Termination")
    String termType_AGREEMENT_TERMINATIO();
    @DefaultMessage("Incoterm Cost and Freight")
    String termType_CFR();
    @DefaultMessage("Incoterm Cost, Insurance and Freight")
    String termType_CIF();
    @DefaultMessage("Incoterm Carriage and Insurance Paid to")
    String termType_CIP();
    @DefaultMessage("Clause For Renewal")
    String termType_CLAUSE_FOR_RENEWAL();
    @DefaultMessage("Commission")
    String termType_COMMISSION_TERM();
    @DefaultMessage("Incoterm Carriage Paid To")
    String termType_CPT();
    @DefaultMessage("Incoterm Delivered At Frontier")
    String termType_DAF();
    @DefaultMessage("Incoterm Delivered Duty Paid")
    String termType_DDP();
    @DefaultMessage("Incoterm Delivered Duty Unpaid")
    String termType_DDU();
    @DefaultMessage("Incoterm Delivered Ex Quay")
    String termType_DEQ();
    @DefaultMessage("Incoterm Delivered Ex Ship")
    String termType_DES();
    @DefaultMessage("Exclusive Relationship")
    String termType_EXCLUSIVE_RELATIONSH();
    @DefaultMessage("Incoterm Ex Works")
    String termType_EXW();
    @DefaultMessage("Incoterm Free Alongside Ship")
    String termType_FAS();
    @DefaultMessage("Incoterm Free Carrier")
    String termType_FCA();
    @DefaultMessage("Financial")
    String termType_FINANCIAL_TERM();
    @DefaultMessage("TermType_FIN_COLLECT_TERM")
    String termType_FIN_COLLECT_TERM(String termValue);
    @DefaultMessage("Commission Term Fixed Per Unit")
    String termType_FIN_COMM_FIXED();
    @DefaultMessage("Commission Term Maximum Per Unit")
    String termType_FIN_COMM_MAX();
    @DefaultMessage("Commission Term Minimum Per Unit")
    String termType_FIN_COMM_MIN();
    @DefaultMessage("Commission Term Variable")
    String termType_FIN_COMM_VARIABLE();
    @DefaultMessage("TermType_FIN_LATE_FEE_TERM")
    String termType_FIN_LATE_FEE_TERM(String termValue);
    @DefaultMessage("Non-Returnable")
    String termType_FIN_NORTN_ITEM_TERM();
    @DefaultMessage("TermType_FIN_PAYMENT_DISC")
    String termType_FIN_PAYMENT_DISC(String termValue, String termDays);
    @DefaultMessage("TermType_FIN_PAYMENT_FIXDAY")
    String termType_FIN_PAYMENT_FIXDAY(String termValue, String minQuantity);
    @DefaultMessage("TermType_FIN_PAYMENT_TERM")
    String termType_FIN_PAYMENT_TERM(String termDays);
    @DefaultMessage("Incoterm Free On Board")
    String termType_FOB();
    @DefaultMessage("Incentive")
    String termType_INCENTIVE();
    @DefaultMessage("Incoterm")
    String termType_INCO_TERM();
    @DefaultMessage("Indemnification")
    String termType_INDEMNIFICATION();
    @DefaultMessage("Legal")
    String termType_LEGAL_TERM();
    @DefaultMessage("Non-Compete")
    String termType_NON_COMPETE();
    @DefaultMessage("Other")
    String termType_OTHER_TERM();
    @DefaultMessage("Purchasing")
    String termType_PURCHASING();
    @DefaultMessage("TermType_PURCH_FREIGHT")
    String termType_PURCH_FREIGHT(String textValue);
    @DefaultMessage("TermType_PURCH_VENDOR_ID")
    String termType_PURCH_VENDOR_ID(String textValue);
    @DefaultMessage("Threshold")
    String termType_THRESHOLD();
    @DefaultMessage("Earn Commission Term")
    String termType_description_COMM_TIMING_AT();
    @DefaultMessage("Thru Date")
    String thruDate();
    @DefaultMessage("To Name")
    String toName();
    @DefaultMessage("Damaged")
    String varianceReason_description_VAR_DAMAGED();
    @DefaultMessage("Found")
    String varianceReason_description_VAR_FOUND();
    @DefaultMessage("Integration")
    String varianceReason_description_VAR_INTEGR();
    @DefaultMessage("Lost")
    String varianceReason_description_VAR_LOST();
    @DefaultMessage("Mis-shipped Item Ordered (+)")
    String varianceReason_description_VAR_MISSHIP_ORDERED();
    @DefaultMessage("Mis-shipped Item Shipped (-)")
    String varianceReason_description_VAR_MISSHIP_SHIPPED();
    @DefaultMessage("Sample (Giveaway)")
    String varianceReason_description_VAR_SAMPLE();
    @DefaultMessage("Stolen")
    String varianceReason_description_VAR_STOLEN();
    @DefaultMessage("Address Not Known Yet")
    String warehouseAddressUnknown();
    @DefaultMessage("Allocated To Orders")
    String warehouseAllocatedToOrders();
    @DefaultMessage("Apply Variance")
    String warehouseApplyVariance();
    @DefaultMessage("Assembly")
    String warehouseAssembly();
    @DefaultMessage("Open Back Orders")
    String warehouseBackOrderedItems();
    @DefaultMessage("Number of Back Orders")
    String warehouseBackOrderedOrderCount();
    @DefaultMessage("Number of Products Back Ordered")
    String warehouseBackOrderedProductCount();
    @DefaultMessage("This product is currently back ordered")
    String warehouseBackOrderedProductIsBackOrdered();
    @DefaultMessage("Back-Orders")
    String warehouseBackOrders();
    @DefaultMessage("Bar Code")
    String warehouseBarCode();
    @DefaultMessage("Bin")
    String warehouseBin();
    @DefaultMessage("Carrier/Shipment Method")
    String warehouseCarrierAndShipmentMethod();
    @DefaultMessage("Choose a Warehouse")
    String warehouseChooseWarehouse();
    @DefaultMessage("Clear Packed Items")
    String warehouseClearPackedItems();
    @DefaultMessage("Close")
    String warehouseClosePicklists();
    @DefaultMessage("Close")
    String warehouseCloseProductionRun();
    @DefaultMessage("Configuration")
    String warehouseConfiguration();
    @DefaultMessage("Confirm Shipment and Print Labels")
    String warehouseConfirmShipmentAndPrintLabels();
    @DefaultMessage("Crating")
    String warehouseCrating();
    @DefaultMessage("Create and Print")
    String warehouseCreateAndPrint();
    @DefaultMessage("Create Inventory Transfers for Upcoming Production")
    String warehouseCreateInventoryTransfersForProduction();
    @DefaultMessage("Create New Lot")
    String warehouseCreateNewLot();
    @DefaultMessage("Create a New Warehouse")
    String warehouseCreateNewWarehouse();
    @DefaultMessage("Create Picklist")
    String warehouseCreatePicklist();
    @DefaultMessage("Create Production Run")
    String warehouseCreateProductionRun();
    @DefaultMessage("Production Transfers")
    String warehouseCreateProductionTransfers();
    @DefaultMessage("Create Reverse Assembly")
    String warehouseCreateReverseAssembly();
    @DefaultMessage("Current Back-Ordered Quantity")
    String warehouseCurrentBackOrderedQty();
    @DefaultMessage("Default Days to Ship")
    String warehouseDefaultDaysToShip();
    @DefaultMessage("Disassembly")
    String warehouseDisassembly();
    @DefaultMessage("Documents Available for Shipment")
    String warehouseDocumentsAvailableForShipment();
    @DefaultMessage("Edit Inventory Item")
    String warehouseEditInventoryItem();
    @DefaultMessage("Edit Lot")
    String warehouseEditLot();
    @DefaultMessage("Edit Production Run")
    String warehouseEditProductionRun();
    @DefaultMessage("Enter Task Details")
    String warehouseEnterTaskDetails();
    @DefaultMessage("warehouse.shipping.labels.printing.batchPrintingScreenLocation property is not configured in warehouse.properties")
    String warehouseErrorBatchPrintScreenNotConfigured();
    @DefaultMessage("WarehouseErrorClosePicklistNotAllowed")
    String warehouseErrorClosePicklistNotAllowed(String picklistId);
    @DefaultMessage("WarehouseErrorInvalidCarrier")
    String warehouseErrorInvalidCarrier(String carrierPartyId);
    @DefaultMessage("WarehouseErrorInvalidPicklistStatus")
    String warehouseErrorInvalidPicklistStatus(String picklistId);
    @DefaultMessage("WarehouseErrorInventoryItemNotFound")
    String warehouseErrorInventoryItemNotFound(String inventoryItemId);
    @DefaultMessage("WarehouseErrorInventoryItemProductQOHUnderZero")
    String warehouseErrorInventoryItemProductQOHUnderZero(String productId);
    @DefaultMessage("WarehouseErrorInventoryItemQOHUnderZero")
    String warehouseErrorInventoryItemQOHUnderZero(String inventoryItemId);
    @DefaultMessage("WarehouseErrorLotIdNotFound")
    String warehouseErrorLotIdNotFound(String lotId);
    @DefaultMessage("WarehouseErrorNotSetCurrencyNoCurrency")
    String warehouseErrorNotSetCurrencyNoCurrency(String shipmentId);
    @DefaultMessage("WarehouseErrorNotSetCurrencyNoFacility")
    String warehouseErrorNotSetCurrencyNoFacility(String shipmentId);
    @DefaultMessage("WarehouseErrorNotSetPackageValueNoValue")
    String warehouseErrorNotSetPackageValueNoValue(String shipmentPackageSeqId, String shipmentId);
    @DefaultMessage("WarehouseErrorNotSetPackageValueTooLow")
    String warehouseErrorNotSetPackageValueTooLow(String shipmentPackageSeqId, String shipmentId);
    @DefaultMessage("WarehouseErrorNotSetPackageValuesNoCurrency")
    String warehouseErrorNotSetPackageValuesNoCurrency(String shipmentId);
    @DefaultMessage("WarehouseErrorNotSetPackageValuesTurnedOff")
    String warehouseErrorNotSetPackageValuesTurnedOff(String shipmentId);
    @DefaultMessage("WarehouseErrorOrderIdAndShipGroupSeqIdNotFound")
    String warehouseErrorOrderIdAndShipGroupSeqIdNotFound(String orderId, String shipGroupSeqId);
    @DefaultMessage("WarehouseErrorOrderNotApproved")
    String warehouseErrorOrderNotApproved(String orderId);
    @DefaultMessage("WarehouseErrorPicklistNotFound")
    String warehouseErrorPicklistNotFound(String picklistId);
    @DefaultMessage("WarehouseErrorShipmentNotFound")
    String warehouseErrorShipmentNotFound(String shipmentId);
    @DefaultMessage("WarehouseErrorShipmentNotPacked")
    String warehouseErrorShipmentNotPacked(String shipmentId);
    @DefaultMessage("WarehouseErrorShipmentPackageNotFound")
    String warehouseErrorShipmentPackageNotFound(String shipmentPackageSeqId, String shipmentId);
    @DefaultMessage("WarehouseErrorShipmentReceivedWrongFacility")
    String warehouseErrorShipmentReceivedWrongFacility(String shipmentId, String facilityId);
    @DefaultMessage("WarehouseErrorShipmentRouteSegmentAlreadyStarted")
    String warehouseErrorShipmentRouteSegmentAlreadyStarted(String shipmentRouteSegmentId, String shipmentId);
    @DefaultMessage("WarehouseErrorShipmentRouteSegmentNotFound")
    String warehouseErrorShipmentRouteSegmentNotFound(String shipmentRouteSegmentId, String shipmentId);
    @DefaultMessage("Cannot add routing task:")
    String warehouseError_CannotAddRoutingTask();
    @DefaultMessage("Cannot create production run:")
    String warehouseError_CannotCreateProductionRun();
    @DefaultMessage("WarehouseError_CannotFindFacilityAssoc")
    String warehouseError_CannotFindFacilityAssoc(String facilityAssocTypeId, String facilityId, String facilityIdTo);
    @DefaultMessage("WarehouseError_CannotFindOutsourcedTask")
    String warehouseError_CannotFindOutsourcedTask(String workEffortId);
    @DefaultMessage("WarehouseError_CannotFindProductionRunTemplate")
    String warehouseError_CannotFindProductionRunTemplate(String productId, String defaultRoutingId);
    @DefaultMessage("This task is not running, so materials cannot be issued to this task.")
    String warehouseError_CannotIssueProductionRunTask();
    @DefaultMessage("WarehouseError_CannotOutsourceNonRoutingTask")
    String warehouseError_CannotOutsourceNonRoutingTask(String workEffortId);
    @DefaultMessage("Cannot outsource task:")
    String warehouseError_CannotOutsourceTask();
    @DefaultMessage("WarehouseError_CannotRevertProductionRunThereIsNoParts")
    String warehouseError_CannotRevertProductionRunThereIsNoParts(String workEffortId);
    @DefaultMessage("Cannot update production run:")
    String warehouseError_CannotUpdateProductionRun();
    @DefaultMessage("WarehouseError_DecomposedInventoryNotFound")
    String warehouseError_DecomposedInventoryNotFound(String inventoryItemId);
    @DefaultMessage("In order to get inventory trace log you have to provide either inventory item id or lot id")
    String warehouseError_MissingAttributesForTrace();
    @DefaultMessage("Please enter a product name or a supplier product name.")
    String warehouseError_MissingProductNameOrSupplierProductName();
    @DefaultMessage("WarehouseError_MissingRoutingTask")
    String warehouseError_MissingRoutingTask(String workEffortId);
    @DefaultMessage("WarehouseError_MissingRoutingTaskDisassemble")
    String warehouseError_MissingRoutingTaskDisassemble(String productId, String productionRunId);
    @DefaultMessage("There is no label image for current route segment.")
    String warehouseError_NoLabelImage();
    @DefaultMessage("WarehouseError_OrderHaveUnknownAddress")
    String warehouseError_OrderHaveUnknownAddress(String orderId, String shipGroupSeqId);
    @DefaultMessage("WarehouseError_OrderNotApprovedPacking")
    String warehouseError_OrderNotApprovedPacking(String orderId, String orderStatus);
    @DefaultMessage("WarehouseError_StatusIs")
    String warehouseError_StatusIs(String status);
    @DefaultMessage("Find Inventory Item")
    String warehouseFindInventoryItem();
    @DefaultMessage("Find Lot")
    String warehouseFindLot();
    @DefaultMessage("Find Production Run")
    String warehouseFindProductionRun();
    @DefaultMessage("Find Shipment")
    String warehouseFindShipment();
    @DefaultMessage("Find Receipts")
    String warehouseFindShipmentReceipts();
    @DefaultMessage("Force Complete")
    String warehouseForceComplete();
    @DefaultMessage("Force Issue Additional Material")
    String warehouseForceIssueAdditionalMaterial();
    @DefaultMessage("From Warehouse")
    String warehouseFromWarehouse();
    @DefaultMessage("Fulfilled Back-Orders")
    String warehouseFulfilledBackOrders();
    @DefaultMessage("Handling")
    String warehouseHandling();
    @DefaultMessage("In orders")
    String warehouseInOrders();
    @DefaultMessage("Incoming Shipments")
    String warehouseIncomingShipments();
    @DefaultMessage("Insurance")
    String warehouseInsurance();
    @DefaultMessage("Inventory")
    String warehouseInventory();
    @DefaultMessage("Adjust Quantities")
    String warehouseInventoryAdjustQuantities();
    @DefaultMessage("Adjust Available/On Hand Quantities")
    String warehouseInventoryAdjustQuantitiesAvailableOnHand();
    @DefaultMessage("Inventory Item Reservations")
    String warehouseInventoryItemReservations();
    @DefaultMessage("Inventory Tracking")
    String warehouseInventoryTracking();
    @DefaultMessage("Transfer Inventory")
    String warehouseInventoryTransfer();
    @DefaultMessage("Issue Additional Material")
    String warehouseIssueAdditionalMaterial();
    @DefaultMessage("Items Already Packed")
    String warehouseItemsAlreadyPacked();
    @DefaultMessage("Items to be Packed")
    String warehouseItemsToBePacked();
    @DefaultMessage("Locations")
    String warehouseLocations();
    @DefaultMessage("Opentaps Warehouse Login")
    String warehouseLoginGreeting();
    @DefaultMessage("Lookup Lot(s)")
    String warehouseLookupLot();
    @DefaultMessage("Lot")
    String warehouseLot();
    @DefaultMessage("Lot Details")
    String warehouseLotDetails();
    @DefaultMessage("Lot/Serial #")
    String warehouseLotOrSerial();
    @DefaultMessage("Lots")
    String warehouseLots();
    @DefaultMessage("Manage Lots")
    String warehouseManageLots();
    @DefaultMessage("Manufacturing")
    String warehouseManufacturing();
    @DefaultMessage("Manufacturing Calendar")
    String warehouseManufacturingCalendar();
    @DefaultMessage("Fixed Assets")
    String warehouseManufacturingFixedAssets();
    @DefaultMessage("Items Manufactured")
    String warehouseManufacturingInventoryItemsManufactured();
    @DefaultMessage("Issue All Components")
    String warehouseManufacturingIssueAllComponents();
    @DefaultMessage("Materials")
    String warehouseManufacturingMaterials();
    @DefaultMessage("Manufacturing Queue")
    String warehouseManufacturingQueue();
    @DefaultMessage("Revert")
    String warehouseManufacturingRevert();
    @DefaultMessage("Tasks")
    String warehouseManufacturingTasks();
    @DefaultMessage("Mark As Shipped")
    String warehouseMarkAsShipped();
    @DefaultMessage("WarehouseNavHistoryInventoryItem")
    String warehouseNavHistoryInventoryItem(String productName);
    @DefaultMessage("WarehouseNavHistoryLot")
    String warehouseNavHistoryLot(String lotId);
    @DefaultMessage("WarehouseNavHistoryShipment")
    String warehouseNavHistoryShipment(String shipmentId);
    @DefaultMessage("Order Net")
    String warehouseNetOrdered();
    @DefaultMessage("WarehouseNoOutsourcedRequirementsForProductionRun")
    String warehouseNoOutsourcedRequirementsForProductionRun(String productionRunId);
    @DefaultMessage("No postal address on file.")
    String warehouseNoPostalAddress();
    @DefaultMessage("No printer configured for printing shipping label.")
    String warehouseNoPrinterForLabel();
    @DefaultMessage("No shipment receipts found")
    String warehouseNoShipmentReceiptsFound();
    @DefaultMessage("# Orders")
    String warehouseNumberOfOrder();
    @DefaultMessage("Open Picklists")
    String warehouseOpenPicklists();
    @DefaultMessage("Carrier")
    String warehouseOrderCarrier();
    @DefaultMessage("Order Date")
    String warehouseOrderDate();
    @DefaultMessage("Ship By Date")
    String warehouseOrderShipByDate();
    @DefaultMessage("Order/ShipGroup")
    String warehouseOrderShipGroup();
    @DefaultMessage("Ship Group PDF")
    String warehouseOrderShipGroupPDF();
    @DefaultMessage("Shipping Method")
    String warehouseOrderShippingMethod();
    @DefaultMessage("Orders Ready to Pick")
    String warehouseOrdersReadyToPick();
    @DefaultMessage("Orders Ready to Ship")
    String warehouseOrdersReadyToShip();
    @DefaultMessage("Outgoing Shipments")
    String warehouseOutgoingShipments();
    @DefaultMessage("WarehouseOutsourcedRequirementDescription")
    String warehouseOutsourcedRequirementDescription(String productionRunId);
    @DefaultMessage("Outsourced Task ID")
    String warehouseOutsourcedTaskId();
    @DefaultMessage("Pack")
    String warehousePack();
    @DefaultMessage("Pack Order")
    String warehousePackOrder();
    @DefaultMessage("Box Type")
    String warehousePackageBoxType();
    @DefaultMessage("Tracking Code")
    String warehousePackageTrackingCode();
    @DefaultMessage("Packages")
    String warehousePackages();
    @DefaultMessage("Packed")
    String warehousePacked();
    @DefaultMessage("Packing List")
    String warehousePackingList();
    @DefaultMessage("Physical Inventory Variances")
    String warehousePhysicalInventoryVariances();
    @DefaultMessage("Picklists to be Shipped")
    String warehousePickedPicklists();
    @DefaultMessage("Pickers")
    String warehousePickers();
    @DefaultMessage("Picklist Details")
    String warehousePicklistDetails();
    @DefaultMessage("The pick list has no items")
    String warehousePicklistEmpty();
    @DefaultMessage("WarehousePicklistHistory")
    String warehousePicklistHistory(String picklistId);
    @DefaultMessage("The pick list has been closed.")
    String warehousePicklistIsClosed();
    @DefaultMessage("Print Shipping Labels")
    String warehousePrintLabels();
    @DefaultMessage("Printer")
    String warehousePrinter();
    @DefaultMessage("Produced to Lots")
    String warehouseProducedToLot();
    @DefaultMessage("Product ID to disassemble")
    String warehouseProductIDToDisassemble();
    @DefaultMessage("Disc?")
    String warehouseProductSalesDiscontinued();
    @DefaultMessage("Production Facility")
    String warehouseProductionFacility();
    @DefaultMessage("WarehouseProductionRunHistory")
    String warehouseProductionRunHistory(String productionRunId);
    @DefaultMessage("Production Run Id")
    String warehouseProductionRunId();
    @DefaultMessage("Confirmed Production Runs")
    String warehouseProductionRunsConfirmed();
    @DefaultMessage("New Production Runs")
    String warehouseProductionRunsCreated();
    @DefaultMessage("Active Production Runs")
    String warehouseProductionRunsRunning();
    @DefaultMessage("Scheduled Production Runs")
    String warehouseProductionRunsScheduled();
    @DefaultMessage("ATP/QOH")
    String warehouseQuantityATPQOH();
    @DefaultMessage("QOH")
    String warehouseQuantityQOH();
    @DefaultMessage("Qty Issued")
    String warehouseQuantityQtyIssued();
    @DefaultMessage("Qty Needed")
    String warehouseQuantityQtyNeeded();
    @DefaultMessage("Quantity to Disassemble")
    String warehouseQuantityToDisassemble();
    @DefaultMessage("Ready To Ship")
    String warehouseReadyToShip();
    @DefaultMessage("reason is")
    String warehouseReasonIs();
    @DefaultMessage("Receive & Close PO")
    String warehouseReceiveAndClosePO();
    @DefaultMessage("Receive & Keep Open")
    String warehouseReceiveAndKeepOpen();
    @DefaultMessage("Receive an Item")
    String warehouseReceiveInventoryItem();
    @DefaultMessage("Receive Outsourced PO")
    String warehouseReceiveOutsourcedPO();
    @DefaultMessage("Receive PO into Shipment")
    String warehouseReceivePOIntoShipment();
    @DefaultMessage("Receive Purchase Order")
    String warehouseReceivePurchaseOrder();
    @DefaultMessage("Received By")
    String warehouseReceivedByUserLogin();
    @DefaultMessage("Requested Inventory Transfers")
    String warehouseRequestedInventoryTransfers();
    @DefaultMessage("Reverse Assemblies")
    String warehouseReverseAssemblies();
    @DefaultMessage("Reverse Assembly")
    String warehouseReverseAssembly();
    @DefaultMessage("Running")
    String warehouseRunning();
    @DefaultMessage("Schedule a Shipment")
    String warehouseScheduleAShipment();
    @DefaultMessage("Batch Schedule Shipments")
    String warehouseScheduleShipments();
    @DefaultMessage("Schedule Shipment")
    String warehouseScheduleThisShipment();
    @DefaultMessage("Scheduled")
    String warehouseScheduled();
    @DefaultMessage("Serial Numbers")
    String warehouseSerialNumbers();
    @DefaultMessage("Shipment")
    String warehouseShipment();
    @DefaultMessage("Shipping")
    String warehouseShipping();
    @DefaultMessage("Show Allocated Orders Only?")
    String warehouseShowReceiptsWithAllocatedOrdersOnly();
    @DefaultMessage("Stock Moves")
    String warehouseStockMoves();
    @DefaultMessage("Required Stock Moves")
    String warehouseStockMovesRequired();
    @DefaultMessage("Supplier Product")
    String warehouseSupplierProduct();
    @DefaultMessage("Bill to Account #")
    String warehouseThirdPartyShippingAccount();
    @DefaultMessage("to Inventory Item Id")
    String warehouseToInventoryItemId();
    @DefaultMessage("Trace Backward")
    String warehouseTraceBackward();
    @DefaultMessage("Usages of the Inventory")
    String warehouseTraceDerivativeInventoryItems();
    @DefaultMessage("Trace Forward")
    String warehouseTraceForward();
    @DefaultMessage("Trace Inventory")
    String warehouseTraceInventory();
    @DefaultMessage("Level")
    String warehouseTraceLevel();
    @DefaultMessage("Sources of the Inventory")
    String warehouseTraceSourceInventoryItems();
    @DefaultMessage("Usage Type")
    String warehouseTraceUsageType();
    @DefaultMessage("Variance")
    String warehouseVariance();
    @DefaultMessage("Variance Reason")
    String warehouseVarianceReason();
    @DefaultMessage("View All Inventory Items")
    String warehouseViewAllInventoryItems();
    @DefaultMessage("View Shipment")
    String warehouseViewShipment();
    @DefaultMessage("View Warehouse")
    String warehouseViewWarehouse();
    @DefaultMessage("Warehouse Facility")
    String warehouseWarehouseFacility();
    @DefaultMessage("Bank Wire Fee")
    String warehouseWireFee();
    @DefaultMessage("WebTools")
    String webTools();
    @DefaultMessage("Web Pos")
    String web_Pos();
    @DefaultMessage("WorkEffort")
    String workEffort();
    @DefaultMessage("Accept Assignment")
    String workEffortAcceptAssignment();
    @DefaultMessage("Activity Detail")
    String workEffortActivityDetail();
    @DefaultMessage("Activity Name")
    String workEffortActivityName();
    @DefaultMessage("Activity Status")
    String workEffortActivityStatus();
    @DefaultMessage("Add/modify a calendar event")
    String workEffortAddCalendarEvent();
    @DefaultMessage("Add New WorkEffort Child")
    String workEffortAddChild();
    @DefaultMessage("Add An Existing Task (WorkEffortId)")
    String workEffortAddExistingTask();
    @DefaultMessage("Add Existing WorkEffort Child")
    String workEffortAddExistingWorkEffortChild();
    @DefaultMessage("Add Good Standard")
    String workEffortAddGoodStandard();
    @DefaultMessage("Add Task")
    String workEffortAddTask();
    @DefaultMessage("Agreement Appls")
    String workEffortAgreementAppls();
    @DefaultMessage("All Phases")
    String workEffortAllPhases();
    @DefaultMessage("All Tasks")
    String workEffortAllTasks();
    @DefaultMessage("Any Assoc Type")
    String workEffortAnyAssocType();
    @DefaultMessage("This application is meant for those who maintain and use calendar events tasks and workflow activities")
    String workEffortApplicationEventsTasksWorkflowActivities();
    @DefaultMessage("Assigned Tasks")
    String workEffortAssignedTasks();
    @DefaultMessage("WorkEffort Association")
    String workEffortAssoc();
    @DefaultMessage("(associated from parent to child)")
    String workEffortAssociatedFromParentToChild();
    @DefaultMessage("Attender")
    String workEffortAttender();
    @DefaultMessage("Enter existing Communication Event Id below")
    String workEffortBanner3();
    @DefaultMessage("OR add new Communication Event data below to create new entity (leave Communication Event Id empty)")
    String workEffortBanner4();
    @DefaultMessage("Enter existing Requirement Id below")
    String workEffortBanner5();
    @DefaultMessage("OR add new Requirement data below to create new entity (leave Requirement Id empty)")
    String workEffortBanner6();
    @DefaultMessage("Enter an existing workEffortId below,")
    String workEffortBannerAddWorkEffortAndAssoc1();
    @DefaultMessage("OR enter the WorkEffort Details below")
    String workEffortBannerAddWorkEffortAndAssoc2();
    @DefaultMessage("By Facility")
    String workEffortByFacility();
    @DefaultMessage("By Fixed Asset")
    String workEffortByFixedAsset();
    @DefaultMessage("By Party")
    String workEffortByPartyId();
    @DefaultMessage("Calendar")
    String workEffortCalendar();
    @DefaultMessage("Calendar Day View")
    String workEffortCalendarDayView();
    @DefaultMessage("Calendar Entries")
    String workEffortCalendarEntries();
    @DefaultMessage("Calendar Event")
    String workEffortCalendarEvent();
    @DefaultMessage("Calendar Event Contacts")
    String workEffortCalendarEventContacts();
    @DefaultMessage("Calendar Event Details")
    String workEffortCalendarEventDetails();
    @DefaultMessage("Calendar Event Roles")
    String workEffortCalendarEventRoles();
    @DefaultMessage("Find Calendar Entries")
    String workEffortCalendarFindEntries();
    @DefaultMessage("Calendar Month View")
    String workEffortCalendarMonthView();
    @DefaultMessage("Calendar Up-Coming Events View")
    String workEffortCalendarUpComingEventsView();
    @DefaultMessage("Calendar Week View")
    String workEffortCalendarWeekView();
    @DefaultMessage("Cancel a calendar event")
    String workEffortCancelCalendarEvent();
    @DefaultMessage("Comm Event Id")
    String workEffortCommEventId();
    @DefaultMessage("Communications")
    String workEffortCommEvents();
    @DefaultMessage("Comments")
    String workEffortComments();
    @DefaultMessage("OFBiz: WorkEffort Manager")
    String workEffortCompanyName();
    @DefaultMessage("Part of the Open For Business Family of Open Source Software")
    String workEffortCompanySubtitle();
    @DefaultMessage("Completion date")
    String workEffortCompletionDate();
    @DefaultMessage("Contact Mech")
    String workEffortContactMech();
    @DefaultMessage("Contact Mechs")
    String workEffortContactMechs();
    @DefaultMessage("Contact Type")
    String workEffortContactType();
    @DefaultMessage("Create Work Effort")
    String workEffortCreate();
    @DefaultMessage("Security Error: to run this operation you must have the WORKEFFORTMGR_CREATE or WORKEFFORTMGR_ADMIN permission")
    String workEffortCreatePermissionError();
    @DefaultMessage("Created")
    String workEffortCreated();
    @DefaultMessage("Customer Rating")
    String workEffortCustomerRating();
    @DefaultMessage("Day View")
    String workEffortDayView();
    @DefaultMessage("Delegate Reason")
    String workEffortDelegateReason();
    @DefaultMessage("Security Error: to run this operation you must have the WORKEFFORTMGR_DELETE or WORKEFFORTMGR_ADMIN permission")
    String workEffortDeletePermissionError();
    @DefaultMessage("Duplicate Work Effort")
    String workEffortDuplicateWorkEffort();
    @DefaultMessage("Edit Assoc")
    String workEffortEditAssoc();
    @DefaultMessage("Edit Assoc Detail")
    String workEffortEditAssocDetail();
    @DefaultMessage("Email Address is missing")
    String workEffortEmailAddressIsMissing();
    @DefaultMessage("Email Address is not formatted correctly, must be like foo@bar.com")
    String workEffortEmailAddressNotFormatted();
    @DefaultMessage("ERROR: Could not find activity with ID")
    String workEffortErrorNotFindActivityId();
    @DefaultMessage("Error: Could not find Event with ID")
    String workEffortErrorNotFindEventId();
    @DefaultMessage("ERROR: Could not find task with ID")
    String workEffortErrorNotFindTaskId();
    @DefaultMessage("ERROR: You do not have permission to view this activity. This activity must belong to you or you must be an administrator")
    String workEffortErrorPermissionViewActivity();
    @DefaultMessage("ERROR: You do not have permission to view this event.This event must be long to you or you must be an administrator")
    String workEffortErrorPermissionViewEvent();
    @DefaultMessage("Est.Budget")
    String workEffortEstBudget();
    @DefaultMessage("Estimated Completion Date")
    String workEffortEstimatedCompletionDate();
    @DefaultMessage("Estimated Start Date")
    String workEffortEstimatedStartDate();
    @DefaultMessage("Estimated Budget")
    String workEffortEstmatedBudget();
    @DefaultMessage("Event")
    String workEffortEvent();
    @DefaultMessage("Event Name")
    String workEffortEventName();
    @DefaultMessage("Event Reminder")
    String workEffortEventReminder();
    @DefaultMessage("Event Reminders")
    String workEffortEventReminders();
    @DefaultMessage("Event Status")
    String workEffortEventStatus();
    @DefaultMessage("Expectation")
    String workEffortExpectation();
    @DefaultMessage("Failed to get calendar entries")
    String workEffortFailedCalendarEntries();
    @DefaultMessage("Fixed Asset Already Exist")
    String workEffortFixedAssetAlreadyExist();
    @DefaultMessage("For Requirement")
    String workEffortForRequirement();
    @DefaultMessage("From Date is not a valid Date-Time.")
    String workEffortFromDateIsNotValid();
    @DefaultMessage("General")
    String workEffortGeneral();
    @DefaultMessage("Good Standard")
    String workEffortGoodStandard();
    @DefaultMessage("iCalendar")
    String workEffortICalendar();
    @DefaultMessage("Add iCalendar")
    String workEffortICalendarAdd();
    @DefaultMessage("Add iCalendar Fixed Asset")
    String workEffortICalendarAddFixedAsset();
    @DefaultMessage("Add iCalendar Party")
    String workEffortICalendarAddParty();
    @DefaultMessage("Data")
    String workEffortICalendarData();
    @DefaultMessage("Edit iCalendar")
    String workEffortICalendarEdit();
    @DefaultMessage("Edit iCalendar Data")
    String workEffortICalendarEditData();
    @DefaultMessage("Find iCalendars")
    String workEffortICalendarFind();
    @DefaultMessage("iCalendar Help")
    String workEffortICalendarHelp();
    @DefaultMessage("http://docs.ofbiz.org/x/piE")
    String workEffortICalendarHelpUrl();
    @DefaultMessage("Calendar Name")
    String workEffortICalendarName();
    @DefaultMessage("Calendar Owner")
    String workEffortICalendarOwner();
    @DefaultMessage("iCalendar Url")
    String workEffortICalendarUrl();
    @DefaultMessage("Calendar Visibility")
    String workEffortICalendarVisibility();
    @DefaultMessage("Work Effort ID is missing.")
    String workEffortIdMissing();
    @DefaultMessage("Include all Sub-WorkEfforts")
    String workEffortIncludeAllSubWorkEfforts();
    @DefaultMessage("Information")
    String workEffortInformation();
    @DefaultMessage("For something interesting make sure, you are logged in try : Username;Admin;Password Ofbiz")
    String workEffortInterestingSure();
    @DefaultMessage("Internal Note")
    String workEffortInternalNote();
    @DefaultMessage("Item")
    String workEffortItem();
    @DefaultMessage("Submitted Jobs")
    String workEffortJobList();
    @DefaultMessage("Keyword")
    String workEffortKeyword();
    @DefaultMessage("all words match")
    String workEffortKeywordAllWordsMatch();
    @DefaultMessage("WorkEffort - Keyword already exist")
    String workEffortKeywordAlreadyExist();
    @DefaultMessage("any word matches")
    String workEffortKeywordAnyWordMatches();
    @DefaultMessage("Keyword  Relevancy")
    String workEffortKeywordRelevancy();
    @DefaultMessage("where")
    String workEffortKeywordWhere();
    @DefaultMessage("Keywords")
    String workEffortKeywords();
    @DefaultMessage("Last Modified")
    String workEffortLastModified();
    @DefaultMessage("Last Updated Date Filter")
    String workEffortLastUpdatedDateFilter();
    @DefaultMessage("Location")
    String workEffortLocation();
    @DefaultMessage("Lookup")
    String workEffortLookup();
    @DefaultMessage("Work Effort Manager")
    String workEffortManager();
    @DefaultMessage("Work Effort Manager Application")
    String workEffortManagerApplication();
    @DefaultMessage("Max Amount")
    String workEffortMaxAmount();
    @DefaultMessage("Max # of Events")
    String workEffortMaxNumberOfEvents();
    @DefaultMessage("Max # of Persons")
    String workEffortMaxNumberOfPersons();
    @DefaultMessage("Month View")
    String workEffortMonthView();
    @DefaultMessage("Must RSVP")
    String workEffortMustRsvp();
    @DefaultMessage("My Current TaskList")
    String workEffortMyCurrentTaskList();
    @DefaultMessage("My Current Timesheets")
    String workEffortMyCurrentTimesheets();
    @DefaultMessage("My Rates")
    String workEffortMyRates();
    @DefaultMessage("My Request List")
    String workEffortMyRequestList();
    @DefaultMessage("My Status")
    String workEffortMyStatus();
    @DefaultMessage("My Tasks")
    String workEffortMyTasks();
    @DefaultMessage("My Timesheets")
    String workEffortMyTimesheets();
    @DefaultMessage("Name")
    String workEffortName();
    @DefaultMessage("Work Effort Name is missing.")
    String workEffortNameIsMissing();
    @DefaultMessage("New Note")
    String workEffortNewNote();
    @DefaultMessage("New Phase")
    String workEffortNewPhase();
    @DefaultMessage("New Project")
    String workEffortNewProject();
    @DefaultMessage("New  Request")
    String workEffortNewRequest();
    @DefaultMessage("New Requirement")
    String workEffortNewRequirement();
    @DefaultMessage("New Task")
    String workEffortNewTask();
    @DefaultMessage("Next Day")
    String workEffortNextDay();
    @DefaultMessage("Next Month")
    String workEffortNextMonth();
    @DefaultMessage("Next Week")
    String workEffortNextWeek();
    @DefaultMessage("No Contact Information On File")
    String workEffortNoContactInformationOnFile();
    @DefaultMessage("No Events Found")
    String workEffortNoEventsFound();
    @DefaultMessage("No Items Created")
    String workEffortNoItemsCreated();
    @DefaultMessage("No  Notes  For  This  RequestItem")
    String workEffortNoNotesForThisRequestItem();
    @DefaultMessage("No Open Requirements Found")
    String workEffortNoOpenRequirementsFound();
    @DefaultMessage("No Request Found")
    String workEffortNoRequestFound();
    @DefaultMessage("No Requirements Created")
    String workEffortNoRequirementsCreated();
    @DefaultMessage("No  Roles  Associated  Request")
    String workEffortNoRolesAssociatedRequest();
    @DefaultMessage("No Tasks currently associated with this Requirement")
    String workEffortNoTasksAssociatedRequirement();
    @DefaultMessage("No  Tasks  Associated  With  Requirement")
    String workEffortNoTasksAssociatedWithRequirement();
    @DefaultMessage("WorkEffortNotInRolePermissionError")
    String workEffortNotInRolePermissionError(String resourceDescription, String roleTypeId, String workEffortId);
    @DefaultMessage("Note is missing")
    String workEffortNoteMissing();
    @DefaultMessage("Notes")
    String workEffortNotes();
    @DefaultMessage("Notes  For  RequestItem")
    String workEffortNotesForRequestItem();
    @DefaultMessage("WorkEffortOpenApplication")
    String workEffortOpenApplication();
    @DefaultMessage("Open Page In New Window")
    String workEffortOpenPageInNewWindow();
    @DefaultMessage("Orders")
    String workEffortOrderHeaders();
    @DefaultMessage("Organizer")
    String workEffortOrganizer();
    @DefaultMessage("override Default Rate amount")
    String workEffortOverrideDefaultRateAmount();
    @DefaultMessage("Participants")
    String workEffortParticipants();
    @DefaultMessage("Parties")
    String workEffortParties();
    @DefaultMessage("WorkEffortPartyAssignmentError")
    String workEffortPartyAssignmentError(String parameters_partyId, String parameters_roleTypeId, String parameters_workEffortId);
    @DefaultMessage("Party Id")
    String workEffortPartyId();
    @DefaultMessage("Password")
    String workEffortPassword();
    @DefaultMessage("Percent Complete")
    String workEffortPercentComplete();
    @DefaultMessage("WorkEffortPermissionError")
    String workEffortPermissionError(String resourceDescription, String mainAction);
    @DefaultMessage("Phase")
    String workEffortPhase();
    @DefaultMessage("Phase Status")
    String workEffortPhaseStatus();
    @DefaultMessage("PhaseTasks")
    String workEffortPhaseTasks();
    @DefaultMessage("Popularity By Orders")
    String workEffortPopularityByOrders();
    @DefaultMessage("Popularity By Views")
    String workEffortPopularityByViews();
    @DefaultMessage("Previous Day")
    String workEffortPreviousDay();
    @DefaultMessage("Previous Month")
    String workEffortPreviousMonth();
    @DefaultMessage("Previous Week")
    String workEffortPreviousWeek();
    @DefaultMessage("Priority")
    String workEffortPriority();
    @DefaultMessage("8")
    String workEffortPriorityEight();
    @DefaultMessage("5")
    String workEffortPriorityFive();
    @DefaultMessage("Priority format is incorrect")
    String workEffortPriorityFormatNotCorrect();
    @DefaultMessage("4")
    String workEffortPriorityFour();
    @DefaultMessage("9 (Low)")
    String workEffortPriorityNine();
    @DefaultMessage("1 (High)")
    String workEffortPriorityOne();
    @DefaultMessage("7")
    String workEffortPrioritySeventh();
    @DefaultMessage("6")
    String workEffortPrioritySix();
    @DefaultMessage("3")
    String workEffortPriorityThree();
    @DefaultMessage("2")
    String workEffortPriorityTwo();
    @DefaultMessage("Private/Public")
    String workEffortPrivatePublic();
    @DefaultMessage("Product")
    String workEffortProduct();
    @DefaultMessage("ProductID")
    String workEffortProductId();
    @DefaultMessage("ProductID 1")
    String workEffortProductId1();
    @DefaultMessage("ProductID 2")
    String workEffortProductId2();
    @DefaultMessage("Project")
    String workEffortProject();
    @DefaultMessage("ProjectPhases")
    String workEffortProjectPhases();
    @DefaultMessage("Project Status")
    String workEffortProjectStatus();
    @DefaultMessage("Projects")
    String workEffortProjects();
    @DefaultMessage("Quantity")
    String workEffortQuantity();
    @DefaultMessage("Quote Items")
    String workEffortQuoteItems();
    @DefaultMessage("Quotes")
    String workEffortQuotes();
    @DefaultMessage("Registered User Login")
    String workEffortRegisteredUserLogin();
    @DefaultMessage("Related Summary")
    String workEffortRelatedSummary();
    @DefaultMessage("Request")
    String workEffortRequest();
    @DefaultMessage("Request Items")
    String workEffortRequestItems();
    @DefaultMessage("Request List")
    String workEffortRequestList();
    @DefaultMessage("Request Manager")
    String workEffortRequestManager();
    @DefaultMessage("Request Name")
    String workEffortRequestName();
    @DefaultMessage("Request  Roles")
    String workEffortRequestRoles();
    @DefaultMessage("Request Taker")
    String workEffortRequestTaker();
    @DefaultMessage("Requesting Party")
    String workEffortRequestingParty();
    @DefaultMessage("Requests")
    String workEffortRequests();
    @DefaultMessage("Required By")
    String workEffortRequiredBy();
    @DefaultMessage("Required By Date")
    String workEffortRequiredByDate();
    @DefaultMessage("Required Date")
    String workEffortRequiredDate();
    @DefaultMessage("Requirement ID")
    String workEffortRequirementId();
    @DefaultMessage("Requirement List")
    String workEffortRequirementList();
    @DefaultMessage("Requirement Type")
    String workEffortRequirementType();
    @DefaultMessage("Requirements")
    String workEffortRequirements();
    @DefaultMessage("Requirements For Request Item")
    String workEffortRequirementsForRequestItem();
    @DefaultMessage("Response Required By")
    String workEffortResponseRequiredBy();
    @DefaultMessage("Result Of Lookup")
    String workEffortResultOfLookup();
    @DefaultMessage("Reviews")
    String workEffortReviews();
    @DefaultMessage("Revision")
    String workEffortRevision();
    @DefaultMessage("Search WorkEfforts")
    String workEffortSearchWorkEfforts();
    @DefaultMessage("Select an existing contact mechanism")
    String workEffortSelectContactMechanism();
    @DefaultMessage("Selected")
    String workEffortSelected();
    @DefaultMessage("Shopping List ID")
    String workEffortShopListId();
    @DefaultMessage("Shopping Lists")
    String workEffortShopLists();
    @DefaultMessage("Show Active")
    String workEffortShowActive();
    @DefaultMessage("Show All Notes")
    String workEffortShowAllNotes();
    @DefaultMessage("Show This Item''s Notes")
    String workEffortShowThisItemsNotes();
    @DefaultMessage("Start Date")
    String workEffortStartDate();
    @DefaultMessage("Status")
    String workEffortStatus();
    @DefaultMessage("Current Status ID is missing.")
    String workEffortStatusIdMissing();
    @DefaultMessage("Summary")
    String workEffortSummary();
    @DefaultMessage("Task")
    String workEffortTask();
    @DefaultMessage("TaskDetail")
    String workEffortTaskDetail();
    @DefaultMessage("Task List")
    String workEffortTaskList();
    @DefaultMessage("TaskName")
    String workEffortTaskName();
    @DefaultMessage("TaskStatus")
    String workEffortTaskStatus();
    @DefaultMessage("Tasks")
    String workEffortTasks();
    @DefaultMessage("This Month")
    String workEffortThisMonth();
    @DefaultMessage("This Week")
    String workEffortThisWeek();
    @DefaultMessage("ThruDate")
    String workEffortThruDate();
    @DefaultMessage("Bill From Party")
    String workEffortTimeBillFromParty();
    @DefaultMessage("Bill To Party")
    String workEffortTimeBillToParty();
    @DefaultMessage("Timesheet")
    String workEffortTimesheet();
    @DefaultMessage("Create Timesheet")
    String workEffortTimesheetCreate();
    @DefaultMessage("Hours")
    String workEffortTimesheetHours();
    @DefaultMessage("My Time")
    String workEffortTimesheetMyTime();
    @DefaultMessage("WorkEffortTimesheetNotInRolePermissionError")
    String workEffortTimesheetNotInRolePermissionError(String resourceDescription, String roleTypeId, String workEffortId);
    @DefaultMessage("Quick Time Entry")
    String workEffortTimesheetQuickTimeEntry();
    @DefaultMessage("Rate Type")
    String workEffortTimesheetRateType();
    @DefaultMessage("Rates")
    String workEffortTimesheetRates();
    @DefaultMessage("Time Entries")
    String workEffortTimesheetTimeEntries();
    @DefaultMessage("Time Entry")
    String workEffortTimesheetTimeEntry();
    @DefaultMessage("Timesheet ID")
    String workEffortTimesheetTimesheetId();
    @DefaultMessage("Edit Timesheet")
    String workEffortTimesheetTimsheetEdit();
    @DefaultMessage("Upcoming Events")
    String workEffortUpcomingEvents();
    @DefaultMessage("Security Error: to run this operation you must have the WORKEFFORTMGR_UPDATE or WORKEFFORTMGR_ADMIN permission")
    String workEffortUpdatePermissionError();
    @DefaultMessage("Username")
    String workEffortUsername();
    @DefaultMessage("You do not have permission to view this screen (WORKEFFORTMGR_VIEW needed)")
    String workEffortViewPermissionError();
    @DefaultMessage("ViewTasks / Edit")
    String workEffortViewTasksEdit();
    @DefaultMessage("Week View")
    String workEffortWeekView();
    @DefaultMessage("Welcome")
    String workEffortWelcome();
    @DefaultMessage("Work Effort")
    String workEffortWorkEffort();
    @DefaultMessage("WorkEffortAssocId already Exist")
    String workEffortWorkEffortAssocIdAlreadyExist();
    @DefaultMessage("WorkEffort - GoodStandard association already exist")
    String workEffortWorkEffortGoodStandardAlreadyExist();
    @DefaultMessage("WorkEffort Id")
    String workEffortWorkEffortId();
    @DefaultMessage("WorkEffort Id is empty")
    String workEffortWorkEffortIdEmpty();
    @DefaultMessage("Work Effort Manager Main Page")
    String workEffortWorkEffortManagerMainPage();
    @DefaultMessage("Work Effort - Review already exist")
    String workEffortWorkEffortReviewAlreadyExist();
    @DefaultMessage("Work Efforts")
    String workEffortWorkEfforts();
    @DefaultMessage("Workflow activities assigned to user")
    String workEffortWorkflowActivitiesUser();
    @DefaultMessage("Workflow activities assigned to User Group")
    String workEffortWorkflowActivitiesUserGroup();
    @DefaultMessage("Workflow activities assigned to User Role")
    String workEffortWorkflowActivitiesUserRole();
    @DefaultMessage("Chinese")
    String zh();
}
