/*
 * Copyright (c) Open Source Strategies, Inc.
 * 
 * Opentaps is free software: you can redistribute it and/or modify it
 * under the terms of the GNU Affero General Public License as published
 * by the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * Opentaps is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with Opentaps.  If not, see <http://www.gnu.org/licenses/>.
 */
/* Copyright (c) Open Source Strategies, Inc. */

import javolution.util.FastList;
import javolution.util.FastMap; 
 
import java.util.ArrayList;
import org.ofbiz.base.util.*;
import org.ofbiz.product.category.CategoryContentWrapper;
import org.ofbiz.entity.condition.EntityConditionList;
import org.ofbiz.entity.condition.EntityExpr;
import org.ofbiz.entity.condition.EntityOperator;

categoryPattern = parameters.get("categoryPattern");

fieldsToSelect = UtilMisc.toList("productCategoryId", "categoryName", "description", "longDescription");

conditionList = FastList.newInstance();
if (UtilValidate.isNotEmpty(categoryPattern)) {
    conditionList.add(new EntityExpr("productCategoryId", EntityOperator.LIKE, "%" + categoryPattern + "%"));
    conditionList.add(new EntityExpr("categoryName", EntityOperator.LIKE, "%" + categoryPattern + "%"));
    conditionList.add(new EntityExpr("description", EntityOperator.LIKE, "%" + categoryPattern + "%"));
    conditionList.add(new EntityExpr("longDescription", EntityOperator.LIKE, "%" + categoryPattern + "%"));
}
conditions = new EntityConditionList(conditionList, EntityOperator.OR);

buildProductCategoryList(delegator, conditions) {

    entityName = "ProductCategory";
    fieldsToSelect = fieldsToSelect;
    orderBy = UtilMisc.toList("categoryName");
    where = conditions;

    build(page) {
        newPage = FastList.newInstance();
        for (iter = page.iterator(); iter.hasNext();) {
            productCategory = iter.next();
            row = FastMap.newInstance();
            category = CategoryContentWrapper.getProductCategoryContentAsText(productCategory, "CATEGORY_NAME", request);
            if (UtilValidate.isEmpty(category)) {
                category = CategoryContentWrapper.getProductCategoryContentAsText(productCategory, "LONG_DESCRIPTION", request);
                if (UtilValidate.isEmpty(category)) {
                    category = CategoryContentWrapper.getProductCategoryContentAsText(productCategory, "DESCRIPTION", request);
                }
            }
            row.putAll(productCategory.getAllFields());
            row.put("category", category);
            newPage.add(row);
        }

        return newPage;
    }
    return this;
}
context.put("listProductCategories", buildProductCategoryList(delegator, conditions));
