/*
 * Copyright (c) Open Source Strategies, Inc.
 * 
 * Opentaps is free software: you can redistribute it and/or modify it
 * under the terms of the GNU Affero General Public License as published
 * by the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * Opentaps is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with Opentaps.  If not, see <http://www.gnu.org/licenses/>.
 */

import java.util.ArrayList;
import java.util.HashMap;

import javolution.util.FastList;
import org.ofbiz.base.util.*;
import org.ofbiz.entity.condition.*;
import org.ofbiz.entity.util.EntityUtil;
import org.opentaps.common.util.UtilAccountingTags;
import org.opentaps.common.util.UtilCommon;
import org.opentaps.domain.DomainsLoader;
import org.opentaps.domain.organization.Organization;
import org.opentaps.foundation.infrastructure.Infrastructure;
import org.opentaps.foundation.infrastructure.User;
import org.opentaps.warehouse.facility.UtilWarehouse;

// get the accounting tag filters
domainsLoader = new DomainsLoader(new Infrastructure(dispatcher), new User(userLogin));
repository = domainsLoader.loadDomainsDirectory().getOrganizationDomain().getOrganizationRepository();

orgsInv = delegator.findByCondition("ProductInventoryItem", new EntityConditionList(UtilMisc.toList(new EntityExpr("ownerPartyId", EntityOperator.NOT_EQUAL, null)), EntityOperator.AND), null,
                                 UtilMisc.toList("ownerPartyId"), UtilMisc.toList("ownerPartyId"), UtilCommon.DISTINCT_READ_OPTIONS);
organizationPartyIds = EntityUtil.getFieldListFromEntityList(orgsInv, "ownerPartyId", true);
organizations = repository.findList(Organization.class, new EntityExpr("partyId", EntityOperator.IN, organizationPartyIds));

tagTypesPerOrg = new HashMap();
tagFiltersPerOrg = new HashMap();
for (String org : organizationPartyIds) {
    if (tagTypesPerOrg.containsKey(org)) {
        continue;
    }
    tagTypes = UtilAccountingTags.getAccountingTagsForOrganization(org, UtilAccountingTags.PURCHASE_ORDER_TAG, delegator);
    tagFilters = UtilAccountingTags.getAccountingTagFiltersForOrganization(org, UtilAccountingTags.PURCHASE_ORDER_TAG, delegator, locale);
    tagTypesPerOrg.put(org, tagTypes);
    tagFiltersPerOrg.put(org, tagFilters);
}

context.put("organizations", organizations);
context.put("tagFiltersPerOrg", tagFiltersPerOrg);

if (UtilValidate.isEmpty(parameters.get("performFind"))) {
    return;
}

facilityId = UtilWarehouse.getFacilityId(request);
searchConditions = UtilMisc.toList(new EntityExpr("facilityId", EntityOperator.EQUALS, facilityId));

if (!UtilValidate.isEmpty(parameters.get("productId"))) {
    searchConditions.add(new EntityExpr("productId", EntityOperator.LIKE, parameters.get("productId") + "%"));
}
if (!UtilValidate.isEmpty(parameters.get("internalName"))) {
    searchConditions.add(new EntityExpr("internalName", EntityOperator.LIKE, parameters.get("internalName") + "%"));
}
if (!UtilValidate.isEmpty(parameters.get("serialNumber"))) {
    searchConditions.add(new EntityExpr("serialNumber", EntityOperator.LIKE, parameters.get("serialNumber") + "%"));
}
if (!UtilValidate.isEmpty(parameters.get("locationSeqId"))) {
    searchConditions.add(new EntityExpr("locationSeqId", EntityOperator.LIKE, parameters.get("locationSeqId") + "%"));
}
if (!UtilValidate.isEmpty(parameters.get("lotId"))) {
    searchConditions.add(new EntityExpr("lotId", EntityOperator.LIKE, parameters.get("lotId") + "%"));
}

// do not show items without quantities
searchConditions.add(new EntityConditionList(UtilMisc.toList(
	new EntityExpr("availableToPromiseTotal", EntityOperator.NOT_EQUAL, 0),
	new EntityExpr("quantityOnHandTotal", EntityOperator.NOT_EQUAL, 0)),
	EntityOperator.OR));

// add accounting tag filters
// since there can multiple organization tags, they are prefixed by the organization party id
orgConditions = new ArrayList();
for (String org : organizationPartyIds) {
    conds = UtilAccountingTags.buildTagConditions(org, UtilAccountingTags.PURCHASE_ORDER_TAG, delegator, request, org + "Tag");
    if (!conds.isEmpty()) {
        conds.add(new EntityExpr("ownerPartyId", EntityOperator.EQUALS, org));
        orgConditions.add(new EntityConditionList(conds, EntityOperator.AND));
    }
}
if (!orgConditions.isEmpty()) {
    searchConditions.add(new EntityConditionList(orgConditions, EntityOperator.OR));
}


inventoryItems = delegator.findByAnd("ProductInventoryItem", searchConditions, UtilMisc.toList("locationSeqId", "productId", "datetimeReceived"));
context.put("inventoryItems", inventoryItems);

// make this optional
if ("Y".equals(parameters.get("showAcctgTags"))) {
    context.put("tagTypesPerOrg", tagTypesPerOrg);
}
