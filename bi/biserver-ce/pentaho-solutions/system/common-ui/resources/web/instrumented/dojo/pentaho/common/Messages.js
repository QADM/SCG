/* automatically generated by JSCoverage - do not edit */
try {
  if (typeof top === 'object' && top !== null && typeof top.opener === 'object' && top.opener !== null) {
    // this is a browser window that was opened from another window

    if (! top.opener._$jscoverage) {
      top.opener._$jscoverage = {};
    }
  }
}
catch (e) {}

try {
  if (typeof top === 'object' && top !== null) {
    // this is a browser window

    try {
      if (typeof top.opener === 'object' && top.opener !== null && top.opener._$jscoverage) {
        top._$jscoverage = top.opener._$jscoverage;
      }
    }
    catch (e) {}

    if (! top._$jscoverage) {
      top._$jscoverage = {};
    }
  }
}
catch (e) {}

try {
  if (typeof top === 'object' && top !== null && top._$jscoverage) {
    _$jscoverage = top._$jscoverage;
  }
}
catch (e) {}
if (typeof _$jscoverage !== 'object') {
  _$jscoverage = {};
}
if (! _$jscoverage['dojo/pentaho/common/Messages.js']) {
  _$jscoverage['dojo/pentaho/common/Messages.js'] = [];
  _$jscoverage['dojo/pentaho/common/Messages.js'][1] = 0;
  _$jscoverage['dojo/pentaho/common/Messages.js'][2] = 0;
  _$jscoverage['dojo/pentaho/common/Messages.js'][4] = 0;
  _$jscoverage['dojo/pentaho/common/Messages.js'][6] = 0;
  _$jscoverage['dojo/pentaho/common/Messages.js'][7] = 0;
  _$jscoverage['dojo/pentaho/common/Messages.js'][19] = 0;
  _$jscoverage['dojo/pentaho/common/Messages.js'][28] = 0;
  _$jscoverage['dojo/pentaho/common/Messages.js'][29] = 0;
  _$jscoverage['dojo/pentaho/common/Messages.js'][38] = 0;
  _$jscoverage['dojo/pentaho/common/Messages.js'][39] = 0;
  _$jscoverage['dojo/pentaho/common/Messages.js'][43] = 0;
  _$jscoverage['dojo/pentaho/common/Messages.js'][52] = 0;
  _$jscoverage['dojo/pentaho/common/Messages.js'][54] = 0;
  _$jscoverage['dojo/pentaho/common/Messages.js'][57] = 0;
  _$jscoverage['dojo/pentaho/common/Messages.js'][58] = 0;
  _$jscoverage['dojo/pentaho/common/Messages.js'][59] = 0;
  _$jscoverage['dojo/pentaho/common/Messages.js'][61] = 0;
  _$jscoverage['dojo/pentaho/common/Messages.js'][63] = 0;
  _$jscoverage['dojo/pentaho/common/Messages.js'][64] = 0;
  _$jscoverage['dojo/pentaho/common/Messages.js'][66] = 0;
  _$jscoverage['dojo/pentaho/common/Messages.js'][67] = 0;
  _$jscoverage['dojo/pentaho/common/Messages.js'][68] = 0;
  _$jscoverage['dojo/pentaho/common/Messages.js'][70] = 0;
  _$jscoverage['dojo/pentaho/common/Messages.js'][71] = 0;
  _$jscoverage['dojo/pentaho/common/Messages.js'][72] = 0;
  _$jscoverage['dojo/pentaho/common/Messages.js'][75] = 0;
  _$jscoverage['dojo/pentaho/common/Messages.js'][76] = 0;
  _$jscoverage['dojo/pentaho/common/Messages.js'][78] = 0;
  _$jscoverage['dojo/pentaho/common/Messages.js'][79] = 0;
  _$jscoverage['dojo/pentaho/common/Messages.js'][81] = 0;
  _$jscoverage['dojo/pentaho/common/Messages.js'][82] = 0;
  _$jscoverage['dojo/pentaho/common/Messages.js'][85] = 0;
  _$jscoverage['dojo/pentaho/common/Messages.js'][89] = 0;
  _$jscoverage['dojo/pentaho/common/Messages.js'][91] = 0;
  _$jscoverage['dojo/pentaho/common/Messages.js'][99] = 0;
  _$jscoverage['dojo/pentaho/common/Messages.js'][101] = 0;
  _$jscoverage['dojo/pentaho/common/Messages.js'][102] = 0;
  _$jscoverage['dojo/pentaho/common/Messages.js'][103] = 0;
  _$jscoverage['dojo/pentaho/common/Messages.js'][105] = 0;
  _$jscoverage['dojo/pentaho/common/Messages.js'][107] = 0;
  _$jscoverage['dojo/pentaho/common/Messages.js'][108] = 0;
  _$jscoverage['dojo/pentaho/common/Messages.js'][122] = 0;
  _$jscoverage['dojo/pentaho/common/Messages.js'][124] = 0;
  _$jscoverage['dojo/pentaho/common/Messages.js'][125] = 0;
  _$jscoverage['dojo/pentaho/common/Messages.js'][128] = 0;
  _$jscoverage['dojo/pentaho/common/Messages.js'][138] = 0;
  _$jscoverage['dojo/pentaho/common/Messages.js'][140] = 0;
  _$jscoverage['dojo/pentaho/common/Messages.js'][144] = 0;
  _$jscoverage['dojo/pentaho/common/Messages.js'][145] = 0;
  _$jscoverage['dojo/pentaho/common/Messages.js'][153] = 0;
  _$jscoverage['dojo/pentaho/common/Messages.js'][154] = 0;
}
_$jscoverage['dojo/pentaho/common/Messages.js'].source = ["dojo<span class=\"k\">.</span>provide<span class=\"k\">(</span><span class=\"s\">\"pentaho.common.Messages\"</span><span class=\"k\">);</span>","dojo<span class=\"k\">.</span>declare<span class=\"k\">(</span><span class=\"s\">\"pentaho.common.Messages\"</span><span class=\"k\">,</span> <span class=\"k\">null</span><span class=\"k\">,</span> <span class=\"k\">{}</span><span class=\"k\">);</span>","","<span class=\"c\">/*private static*/</span>pentaho<span class=\"k\">.</span>common<span class=\"k\">.</span>Messages<span class=\"k\">.</span>init <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">()</span>","<span class=\"k\">{</span>","  <span class=\"k\">if</span> <span class=\"k\">(</span>pentaho<span class=\"k\">.</span>common<span class=\"k\">.</span>Messages<span class=\"k\">.</span>messageBundle <span class=\"k\">===</span> undefined<span class=\"k\">)</span> <span class=\"k\">{</span>","    pentaho<span class=\"k\">.</span>common<span class=\"k\">.</span>Messages<span class=\"k\">.</span>messageBundle <span class=\"k\">=</span> <span class=\"k\">{}</span><span class=\"k\">;</span>","  <span class=\"k\">}</span>","<span class=\"k\">}</span><span class=\"k\">;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * Add a resource bundle to the set of resource bundles.</span>","<span class=\"c\"> *</span>","<span class=\"c\"> * @param packageName String the name of the package containing the javascript</span>","<span class=\"c\"> * file with the resource strings.</span>","<span class=\"c\"> * @param fileName String name of the javascript file with the</span>","<span class=\"c\"> * resource strings, without the extention.</span>","<span class=\"c\"> */</span>","<span class=\"c\">/*public static*/</span>pentaho<span class=\"k\">.</span>common<span class=\"k\">.</span>Messages<span class=\"k\">.</span>addBundle <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span> packageName<span class=\"k\">,</span> fileName <span class=\"k\">)</span>","<span class=\"k\">{</span>","  <span class=\"c\">// Make sure Dojo doesn't try to load message bundles from any other locales than the default (ROOT).</span>","  <span class=\"c\">// Without the locale override Dojo will attempt to load resources from: ROOT, language, locale (language + variant).</span>","  <span class=\"c\">//     e.g. For English in the US: ROOT, en, en-us</span>","  <span class=\"c\">//          This results in 404s for any message bundle that does not exist as the client has no way of knowing.</span>","  <span class=\"c\">// We should change this to URL bundles exclusively or run a dojo build for all javascript (dataapi, common, etc)</span>","","  <span class=\"c\">// Using ambiguated form to defeat dojo parser</span>","  dojo<span class=\"k\">[</span><span class=\"s\">\"requireLocalization\"</span><span class=\"k\">](</span>packageName<span class=\"k\">,</span> fileName<span class=\"k\">,</span> <span class=\"s\">\"ROOT\"</span><span class=\"k\">,</span> <span class=\"s\">\"ROOT\"</span><span class=\"k\">);</span>","  pentaho<span class=\"k\">.</span>common<span class=\"k\">.</span>Messages<span class=\"k\">.</span>messageBundle<span class=\"k\">[</span>packageName<span class=\"k\">]</span> <span class=\"k\">=</span> dojo<span class=\"k\">.</span>i18n<span class=\"k\">.</span>getLocalization<span class=\"k\">(</span>packageName<span class=\"k\">,</span> fileName<span class=\"k\">);</span>","<span class=\"k\">}</span><span class=\"k\">;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * Finds and returns a registered bundle if it exists.</span>","<span class=\"c\"> *</span>","<span class=\"c\"> * @param {String} name Name of a registered bundle</span>","<span class=\"c\"> * @return {Object} Message bundle as an object of key-value pairs or undefined if not found.</span>","<span class=\"c\"> */</span>","<span class=\"c\">/*public static*/</span>pentaho<span class=\"k\">.</span>common<span class=\"k\">.</span>Messages<span class=\"k\">.</span>getBundle <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>name<span class=\"k\">)</span> <span class=\"k\">{</span>","  <span class=\"k\">return</span> pentaho<span class=\"k\">.</span>common<span class=\"k\">.</span>Messages<span class=\"k\">.</span>messageBundle<span class=\"k\">[</span>name<span class=\"k\">];</span>","<span class=\"k\">}</span>","","<span class=\"c\">/*private static*/</span>","pentaho<span class=\"k\">.</span>common<span class=\"k\">.</span>Messages<span class=\"k\">.</span>entityDecoder<span class=\"k\">=</span>document<span class=\"k\">.</span>createElement<span class=\"k\">(</span><span class=\"s\">'textarea'</span><span class=\"k\">);</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * Get the string from a message bundle referenced by &lt;param&gt;key&lt;/param&gt;.</span>","<span class=\"c\"> * @param key String the key in the bundle which references the desired string</span>","<span class=\"c\"> * @param substitutionVars Array of String (optional) an array of strings</span>","<span class=\"c\"> * to substitute into the message string.</span>","<span class=\"c\"> * @return String the string in the message bundle referenced by &lt;param&gt;key&lt;/param&gt;.</span>","<span class=\"c\"> */</span>","<span class=\"c\">/*public static*/</span>pentaho<span class=\"k\">.</span>common<span class=\"k\">.</span>Messages<span class=\"k\">.</span>getString <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span> key<span class=\"k\">,</span> substitutionVars <span class=\"k\">)</span>","<span class=\"k\">{</span>","  <span class=\"k\">var</span> b<span class=\"k\">,</span> bundle<span class=\"k\">,</span>","      msg <span class=\"k\">=</span> key<span class=\"k\">;</span> <span class=\"c\">// if we don't find the msg, return the key as the msg</span>","  <span class=\"c\">// loop through each message bundle</span>","  <span class=\"k\">for</span> <span class=\"k\">(</span>b <span class=\"k\">in</span> pentaho<span class=\"k\">.</span>common<span class=\"k\">.</span>Messages<span class=\"k\">.</span>messageBundle<span class=\"k\">)</span> <span class=\"k\">{</span>","    <span class=\"k\">if</span> <span class=\"k\">(</span>pentaho<span class=\"k\">.</span>common<span class=\"k\">.</span>Messages<span class=\"k\">.</span>messageBundle<span class=\"k\">.</span>hasOwnProperty<span class=\"k\">(</span>b<span class=\"k\">))</span> <span class=\"k\">{</span>","      bundle <span class=\"k\">=</span> pentaho<span class=\"k\">.</span>common<span class=\"k\">.</span>Messages<span class=\"k\">.</span>messageBundle<span class=\"k\">[</span>b<span class=\"k\">];</span>","      <span class=\"c\">// does this bundle have the key we are looking for?</span>","      <span class=\"k\">if</span> <span class=\"k\">(</span>bundle<span class=\"k\">.</span>hasOwnProperty<span class=\"k\">(</span>key<span class=\"k\">))</span> <span class=\"k\">{</span>","        <span class=\"c\">// yes, it has the key</span>","        msg <span class=\"k\">=</span> bundle<span class=\"k\">[</span>key<span class=\"k\">];</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span> undefined <span class=\"k\">!=</span> substitutionVars <span class=\"k\">)</span>","        <span class=\"k\">{</span>","          <span class=\"k\">var</span> subs <span class=\"k\">=</span> <span class=\"k\">{}</span><span class=\"k\">;</span>","          <span class=\"k\">if</span><span class=\"k\">(</span>dojo<span class=\"k\">.</span>isString<span class=\"k\">(</span>substitutionVars<span class=\"k\">))</span> <span class=\"k\">{</span>","            subs<span class=\"k\">[</span><span class=\"s\">'0'</span><span class=\"k\">]</span> <span class=\"k\">=</span> substitutionVars<span class=\"k\">;</span>","          <span class=\"k\">}</span>","          <span class=\"k\">else</span> <span class=\"k\">if</span><span class=\"k\">(</span>dojo<span class=\"k\">.</span>isArray<span class=\"k\">(</span>substitutionVars<span class=\"k\">))</span> <span class=\"k\">{</span>","            <span class=\"k\">for</span><span class=\"k\">(</span><span class=\"k\">var</span> sNo<span class=\"k\">=</span><span class=\"s\">0</span><span class=\"k\">;</span> sNo<span class=\"k\">&lt;</span>substitutionVars<span class=\"k\">.</span>length<span class=\"k\">;</span> sNo<span class=\"k\">++)</span> <span class=\"k\">{</span>","              subs<span class=\"k\">[</span><span class=\"s\">''</span><span class=\"k\">+</span>sNo<span class=\"k\">]</span> <span class=\"k\">=</span> substitutionVars<span class=\"k\">[</span>sNo<span class=\"k\">];</span>","            <span class=\"k\">}</span>","          <span class=\"k\">}</span>","          <span class=\"k\">else</span> <span class=\"k\">if</span><span class=\"k\">(</span>dojo<span class=\"k\">.</span>isObject<span class=\"k\">(</span>substitutionVars<span class=\"k\">))</span> <span class=\"k\">{</span>","            subs <span class=\"k\">=</span> substitutionVars<span class=\"k\">;</span>","          <span class=\"k\">}</span>","          <span class=\"k\">if</span><span class=\"k\">(</span>dojo<span class=\"k\">.</span>string<span class=\"k\">.</span>substituteParams<span class=\"k\">)</span> <span class=\"k\">{</span>","            msg <span class=\"k\">=</span> dojo<span class=\"k\">.</span>string<span class=\"k\">.</span>substituteParams<span class=\"k\">(</span>msg<span class=\"k\">,</span> subs<span class=\"k\">);</span>","          <span class=\"k\">}</span>","          <span class=\"k\">else</span> <span class=\"k\">if</span><span class=\"k\">(</span>dojo<span class=\"k\">.</span>replace<span class=\"k\">)</span> <span class=\"k\">{</span>","            msg <span class=\"k\">=</span> dojo<span class=\"k\">.</span>replace<span class=\"k\">(</span>msg<span class=\"k\">,</span> subs<span class=\"k\">);</span>","          <span class=\"k\">}</span>","        <span class=\"k\">}</span>","        <span class=\"k\">break</span><span class=\"k\">;</span>","      <span class=\"k\">}</span>","    <span class=\"k\">}</span>","  <span class=\"k\">}</span>","  <span class=\"k\">return</span> msg<span class=\"k\">;</span>","<span class=\"k\">}</span><span class=\"k\">;</span>","<span class=\"k\">var</span> cnt <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * TODO sbarkdull: this method does not belong here, it belongs in UIUtils</span>","<span class=\"c\"> *</span>","<span class=\"c\"> * @param elementOrId String or HTML element, if String, must be the id of an HTML element</span>","<span class=\"c\"> * @param msgKey String key into the message map</span>","<span class=\"c\"> */</span>","<span class=\"c\">/*public static*/</span>pentaho<span class=\"k\">.</span>common<span class=\"k\">.</span>Messages<span class=\"k\">.</span>setElementText <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span> elementOrId<span class=\"k\">,</span> msgKey <span class=\"k\">)</span>","<span class=\"k\">{</span>","  <span class=\"k\">var</span> element<span class=\"k\">;</span>","  <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">typeof</span> elementOrId <span class=\"k\">==</span> <span class=\"s\">\"string\"</span><span class=\"k\">)</span> <span class=\"k\">{</span>","    element <span class=\"k\">=</span> document<span class=\"k\">.</span>getElementById<span class=\"k\">(</span>elementOrId<span class=\"k\">);</span>","  <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","    element <span class=\"k\">=</span> elementOrId<span class=\"k\">;</span>","  <span class=\"k\">}</span>","  <span class=\"k\">if</span> <span class=\"k\">(</span>element<span class=\"k\">)</span> <span class=\"k\">{</span>","    element<span class=\"k\">.</span>innerHTML <span class=\"k\">=</span> pentaho<span class=\"k\">.</span>common<span class=\"k\">.</span>Messages<span class=\"k\">.</span>getString<span class=\"k\">(</span>msgKey<span class=\"k\">);</span>","  <span class=\"k\">}</span>","<span class=\"k\">}</span><span class=\"k\">;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * Add a resource bundle to the set of resource bundles.</span>","<span class=\"c\"> *</span>","<span class=\"c\"> * @param packageName String the name of the package containing the javascript</span>","<span class=\"c\"> * file with the resource strings.</span>","<span class=\"c\"> * @param fileName String name of the javascript file with the</span>","<span class=\"c\"> * resource strings, without the extention.</span>","<span class=\"c\"> * @param reload Force the reloading of this package name? If the package name</span>","<span class=\"c\"> * has already been provided no request will be made to the url. Defaults to false.</span>","<span class=\"c\"> */</span>","<span class=\"c\">/*public static*/</span>pentaho<span class=\"k\">.</span>common<span class=\"k\">.</span>Messages<span class=\"k\">.</span>addUrlBundle <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span> packageName<span class=\"k\">,</span> url<span class=\"k\">,</span> reload <span class=\"k\">)</span>","<span class=\"k\">{</span>","  <span class=\"k\">if</span> <span class=\"k\">(!</span>reload <span class=\"k\">&amp;&amp;</span> pentaho<span class=\"k\">.</span>common<span class=\"k\">.</span>Messages<span class=\"k\">.</span>messageBundle<span class=\"k\">.</span>hasOwnProperty<span class=\"k\">(</span>packageName<span class=\"k\">))</span> <span class=\"k\">{</span>","    <span class=\"k\">return</span><span class=\"k\">;</span>","  <span class=\"k\">}</span>","","  <span class=\"k\">var</span> deferred <span class=\"k\">=</span> dojo<span class=\"k\">.</span>xhrGet<span class=\"k\">(</span>","      <span class=\"k\">{</span>","        url<span class=\"k\">:</span> url<span class=\"k\">,</span>","        handleAs<span class=\"k\">:</span> <span class=\"s\">\"json\"</span><span class=\"k\">,</span>","        <span class=\"c\">// This call must be synchronous so we inject the require message bundle before it needs to be used.  Message bundles</span>","        <span class=\"c\">// are generally fetched immediately before attempting to look up a localized string.</span>","        sync<span class=\"k\">:</span> <span class=\"k\">true</span>","      <span class=\"k\">}</span>","  <span class=\"k\">);</span>","","  deferred<span class=\"k\">.</span>then<span class=\"k\">(</span>","      <span class=\"k\">function</span><span class=\"k\">(</span>data<span class=\"k\">)</span><span class=\"k\">{</span>","        pentaho<span class=\"k\">.</span>common<span class=\"k\">.</span>Messages<span class=\"k\">.</span>messageBundle<span class=\"k\">[</span>packageName<span class=\"k\">]</span> <span class=\"k\">=</span> data<span class=\"k\">;</span>","      <span class=\"k\">}</span><span class=\"k\">,</span>","","      <span class=\"k\">function</span><span class=\"k\">(</span>error<span class=\"k\">)</span><span class=\"k\">{</span>","        <span class=\"k\">if</span><span class=\"k\">(</span><span class=\"k\">typeof</span><span class=\"k\">(</span>console<span class=\"k\">)</span> <span class=\"k\">!=</span> <span class=\"s\">\"undefined\"</span><span class=\"k\">)</span><span class=\"k\">{</span>","          console<span class=\"k\">.</span>log<span class=\"k\">(</span><span class=\"s\">\"error loading message bundle at:\"</span><span class=\"k\">+</span>url<span class=\"k\">);</span>","        <span class=\"k\">}</span>","      <span class=\"k\">}</span>","  <span class=\"k\">);</span>","","<span class=\"k\">}</span><span class=\"k\">;</span>","","<span class=\"c\">/* static init */</span>","pentaho<span class=\"k\">.</span>common<span class=\"k\">.</span>Messages<span class=\"k\">.</span>init<span class=\"k\">();</span>","pentaho<span class=\"k\">.</span>common<span class=\"k\">.</span>Messages<span class=\"k\">.</span>addUrlBundle<span class=\"k\">(</span><span class=\"s\">'pentaho.common'</span><span class=\"k\">,</span>CONTEXT_PATH<span class=\"k\">+</span><span class=\"s\">'i18n?plugin=common-ui&amp;name=resources/web/dojo/pentaho/common/nls/messages'</span><span class=\"k\">);</span>"];
_$jscoverage['dojo/pentaho/common/Messages.js'][1]++;
dojo.provide("pentaho.common.Messages");
_$jscoverage['dojo/pentaho/common/Messages.js'][2]++;
dojo.declare("pentaho.common.Messages", null, {});
_$jscoverage['dojo/pentaho/common/Messages.js'][4]++;
pentaho.common.Messages.init = (function () {
  _$jscoverage['dojo/pentaho/common/Messages.js'][6]++;
  if ((pentaho.common.Messages.messageBundle === undefined)) {
    _$jscoverage['dojo/pentaho/common/Messages.js'][7]++;
    pentaho.common.Messages.messageBundle = {};
  }
});
_$jscoverage['dojo/pentaho/common/Messages.js'][19]++;
pentaho.common.Messages.addBundle = (function (packageName, fileName) {
  _$jscoverage['dojo/pentaho/common/Messages.js'][28]++;
  dojo.requireLocalization(packageName, fileName, "ROOT", "ROOT");
  _$jscoverage['dojo/pentaho/common/Messages.js'][29]++;
  pentaho.common.Messages.messageBundle[packageName] = dojo.i18n.getLocalization(packageName, fileName);
});
_$jscoverage['dojo/pentaho/common/Messages.js'][38]++;
pentaho.common.Messages.getBundle = (function (name) {
  _$jscoverage['dojo/pentaho/common/Messages.js'][39]++;
  return pentaho.common.Messages.messageBundle[name];
});
_$jscoverage['dojo/pentaho/common/Messages.js'][43]++;
pentaho.common.Messages.entityDecoder = document.createElement("textarea");
_$jscoverage['dojo/pentaho/common/Messages.js'][52]++;
pentaho.common.Messages.getString = (function (key, substitutionVars) {
  _$jscoverage['dojo/pentaho/common/Messages.js'][54]++;
  var b, bundle, msg = key;
  _$jscoverage['dojo/pentaho/common/Messages.js'][57]++;
  for (b in pentaho.common.Messages.messageBundle) {
    _$jscoverage['dojo/pentaho/common/Messages.js'][58]++;
    if (pentaho.common.Messages.messageBundle.hasOwnProperty(b)) {
      _$jscoverage['dojo/pentaho/common/Messages.js'][59]++;
      bundle = pentaho.common.Messages.messageBundle[b];
      _$jscoverage['dojo/pentaho/common/Messages.js'][61]++;
      if (bundle.hasOwnProperty(key)) {
        _$jscoverage['dojo/pentaho/common/Messages.js'][63]++;
        msg = bundle[key];
        _$jscoverage['dojo/pentaho/common/Messages.js'][64]++;
        if ((undefined != substitutionVars)) {
          _$jscoverage['dojo/pentaho/common/Messages.js'][66]++;
          var subs = {};
          _$jscoverage['dojo/pentaho/common/Messages.js'][67]++;
          if (dojo.isString(substitutionVars)) {
            _$jscoverage['dojo/pentaho/common/Messages.js'][68]++;
            subs[0] = substitutionVars;
          }
          else {
            _$jscoverage['dojo/pentaho/common/Messages.js'][70]++;
            if (dojo.isArray(substitutionVars)) {
              _$jscoverage['dojo/pentaho/common/Messages.js'][71]++;
              for (var sNo = 0; (sNo < substitutionVars.length); (sNo++)) {
                _$jscoverage['dojo/pentaho/common/Messages.js'][72]++;
                subs[("" + sNo)] = substitutionVars[sNo];
}
            }
            else {
              _$jscoverage['dojo/pentaho/common/Messages.js'][75]++;
              if (dojo.isObject(substitutionVars)) {
                _$jscoverage['dojo/pentaho/common/Messages.js'][76]++;
                subs = substitutionVars;
              }
            }
          }
          _$jscoverage['dojo/pentaho/common/Messages.js'][78]++;
          if (dojo.string.substituteParams) {
            _$jscoverage['dojo/pentaho/common/Messages.js'][79]++;
            msg = dojo.string.substituteParams(msg, subs);
          }
          else {
            _$jscoverage['dojo/pentaho/common/Messages.js'][81]++;
            if (dojo.replace) {
              _$jscoverage['dojo/pentaho/common/Messages.js'][82]++;
              msg = dojo.replace(msg, subs);
            }
          }
        }
        _$jscoverage['dojo/pentaho/common/Messages.js'][85]++;
        break;
      }
    }
}
  _$jscoverage['dojo/pentaho/common/Messages.js'][89]++;
  return msg;
});
_$jscoverage['dojo/pentaho/common/Messages.js'][91]++;
var cnt = 0;
_$jscoverage['dojo/pentaho/common/Messages.js'][99]++;
pentaho.common.Messages.setElementText = (function (elementOrId, msgKey) {
  _$jscoverage['dojo/pentaho/common/Messages.js'][101]++;
  var element;
  _$jscoverage['dojo/pentaho/common/Messages.js'][102]++;
  if (((typeof elementOrId) == "string")) {
    _$jscoverage['dojo/pentaho/common/Messages.js'][103]++;
    element = document.getElementById(elementOrId);
  }
  else {
    _$jscoverage['dojo/pentaho/common/Messages.js'][105]++;
    element = elementOrId;
  }
  _$jscoverage['dojo/pentaho/common/Messages.js'][107]++;
  if (element) {
    _$jscoverage['dojo/pentaho/common/Messages.js'][108]++;
    element.innerHTML = pentaho.common.Messages.getString(msgKey);
  }
});
_$jscoverage['dojo/pentaho/common/Messages.js'][122]++;
pentaho.common.Messages.addUrlBundle = (function (packageName, url, reload) {
  _$jscoverage['dojo/pentaho/common/Messages.js'][124]++;
  if (((! reload) && pentaho.common.Messages.messageBundle.hasOwnProperty(packageName))) {
    _$jscoverage['dojo/pentaho/common/Messages.js'][125]++;
    return;
  }
  _$jscoverage['dojo/pentaho/common/Messages.js'][128]++;
  var deferred = dojo.xhrGet({url: url, handleAs: "json", sync: true});
  _$jscoverage['dojo/pentaho/common/Messages.js'][138]++;
  deferred.then((function (data) {
  _$jscoverage['dojo/pentaho/common/Messages.js'][140]++;
  pentaho.common.Messages.messageBundle[packageName] = data;
}), (function (error) {
  _$jscoverage['dojo/pentaho/common/Messages.js'][144]++;
  if (((typeof console) != "undefined")) {
    _$jscoverage['dojo/pentaho/common/Messages.js'][145]++;
    console.log(("error loading message bundle at:" + url));
  }
}));
});
_$jscoverage['dojo/pentaho/common/Messages.js'][153]++;
pentaho.common.Messages.init();
_$jscoverage['dojo/pentaho/common/Messages.js'][154]++;
pentaho.common.Messages.addUrlBundle("pentaho.common", (CONTEXT_PATH + "i18n?plugin=common-ui&name=resources/web/dojo/pentaho/common/nls/messages"));
