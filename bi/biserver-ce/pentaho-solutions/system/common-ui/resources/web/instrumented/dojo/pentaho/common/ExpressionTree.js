/* automatically generated by JSCoverage - do not edit */
try {
  if (typeof top === 'object' && top !== null && typeof top.opener === 'object' && top.opener !== null) {
    // this is a browser window that was opened from another window

    if (! top.opener._$jscoverage) {
      top.opener._$jscoverage = {};
    }
  }
}
catch (e) {}

try {
  if (typeof top === 'object' && top !== null) {
    // this is a browser window

    try {
      if (typeof top.opener === 'object' && top.opener !== null && top.opener._$jscoverage) {
        top._$jscoverage = top.opener._$jscoverage;
      }
    }
    catch (e) {}

    if (! top._$jscoverage) {
      top._$jscoverage = {};
    }
  }
}
catch (e) {}

try {
  if (typeof top === 'object' && top !== null && top._$jscoverage) {
    _$jscoverage = top._$jscoverage;
  }
}
catch (e) {}
if (typeof _$jscoverage !== 'object') {
  _$jscoverage = {};
}
if (! _$jscoverage['dojo/pentaho/common/ExpressionTree.js']) {
  _$jscoverage['dojo/pentaho/common/ExpressionTree.js'] = [];
  _$jscoverage['dojo/pentaho/common/ExpressionTree.js'][1] = 0;
  _$jscoverage['dojo/pentaho/common/ExpressionTree.js'][2] = 0;
  _$jscoverage['dojo/pentaho/common/ExpressionTree.js'][3] = 0;
  _$jscoverage['dojo/pentaho/common/ExpressionTree.js'][4] = 0;
  _$jscoverage['dojo/pentaho/common/ExpressionTree.js'][6] = 0;
  _$jscoverage['dojo/pentaho/common/ExpressionTree.js'][16] = 0;
  _$jscoverage['dojo/pentaho/common/ExpressionTree.js'][17] = 0;
  _$jscoverage['dojo/pentaho/common/ExpressionTree.js'][20] = 0;
  _$jscoverage['dojo/pentaho/common/ExpressionTree.js'][27] = 0;
  _$jscoverage['dojo/pentaho/common/ExpressionTree.js'][35] = 0;
  _$jscoverage['dojo/pentaho/common/ExpressionTree.js'][36] = 0;
  _$jscoverage['dojo/pentaho/common/ExpressionTree.js'][44] = 0;
  _$jscoverage['dojo/pentaho/common/ExpressionTree.js'][47] = 0;
  _$jscoverage['dojo/pentaho/common/ExpressionTree.js'][48] = 0;
  _$jscoverage['dojo/pentaho/common/ExpressionTree.js'][49] = 0;
  _$jscoverage['dojo/pentaho/common/ExpressionTree.js'][54] = 0;
  _$jscoverage['dojo/pentaho/common/ExpressionTree.js'][55] = 0;
  _$jscoverage['dojo/pentaho/common/ExpressionTree.js'][56] = 0;
  _$jscoverage['dojo/pentaho/common/ExpressionTree.js'][59] = 0;
  _$jscoverage['dojo/pentaho/common/ExpressionTree.js'][61] = 0;
  _$jscoverage['dojo/pentaho/common/ExpressionTree.js'][64] = 0;
  _$jscoverage['dojo/pentaho/common/ExpressionTree.js'][65] = 0;
  _$jscoverage['dojo/pentaho/common/ExpressionTree.js'][66] = 0;
  _$jscoverage['dojo/pentaho/common/ExpressionTree.js'][67] = 0;
  _$jscoverage['dojo/pentaho/common/ExpressionTree.js'][71] = 0;
}
_$jscoverage['dojo/pentaho/common/ExpressionTree.js'].source = ["dojo<span class=\"k\">.</span>provide<span class=\"k\">(</span><span class=\"s\">\"pentaho.common.ExpressionTree\"</span><span class=\"k\">);</span>","dojo<span class=\"k\">.</span>require<span class=\"k\">(</span><span class=\"s\">\"dijit.form.Select\"</span><span class=\"k\">);</span>","dojo<span class=\"k\">.</span>require<span class=\"k\">(</span><span class=\"s\">'dijit._Widget'</span><span class=\"k\">);</span>","dojo<span class=\"k\">.</span>require<span class=\"k\">(</span><span class=\"s\">'dijit._Templated'</span><span class=\"k\">);</span>","","dojo<span class=\"k\">.</span>declare<span class=\"k\">(</span><span class=\"s\">\"pentaho.common.ExpressionTree\"</span><span class=\"k\">,</span>","  <span class=\"k\">[</span>dijit<span class=\"k\">.</span>_Widget<span class=\"k\">,</span> dijit<span class=\"k\">.</span>_Templated<span class=\"k\">],</span>  <span class=\"k\">{</span>","      ","    <span class=\"c\">//getLocaleString: pentaho.common.Messages.getString,  </span>","    templateString<span class=\"k\">:</span> dojo<span class=\"k\">.</span>cache<span class=\"k\">(</span><span class=\"s\">\"pentaho.common\"</span><span class=\"k\">,</span><span class=\"s\">\"ExpressionTree/ExpressionTree.html\"</span><span class=\"k\">),</span>","    widgetsInTemplate<span class=\"k\">:</span> <span class=\"k\">true</span><span class=\"k\">,</span>","    defaultOperator<span class=\"k\">:</span> <span class=\"k\">null</span><span class=\"k\">,</span>","    operators<span class=\"k\">:</span> <span class=\"k\">null</span><span class=\"k\">,</span>","","    constructor<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span>defaultOp<span class=\"k\">)</span> <span class=\"k\">{</span>","      <span class=\"k\">if</span><span class=\"k\">(</span>defaultOp <span class=\"k\">&amp;&amp;</span> defaultOp<span class=\"k\">.</span>label <span class=\"k\">&amp;&amp;</span> defaultOp<span class=\"k\">.</span>value<span class=\"k\">)</span><span class=\"k\">{</span>","        <span class=\"k\">this</span><span class=\"k\">.</span>defaultOperator <span class=\"k\">=</span> defaultOp<span class=\"k\">;</span>","      <span class=\"k\">}</span>","      <span class=\"k\">else</span><span class=\"k\">{</span>","        <span class=\"k\">this</span><span class=\"k\">.</span>defaultOperator <span class=\"k\">=</span> <span class=\"k\">{</span>","          label<span class=\"k\">:</span> <span class=\"s\">'AND'</span><span class=\"k\">,</span>","          value<span class=\"k\">:</span> <span class=\"s\">'AND'</span>","          <span class=\"c\">//selected: true</span>","        <span class=\"k\">}</span><span class=\"k\">;</span>  ","      <span class=\"k\">}</span>","","      <span class=\"k\">this</span><span class=\"k\">.</span>operators <span class=\"k\">=</span> <span class=\"k\">[</span>","        <span class=\"k\">{</span> label<span class=\"k\">:</span> <span class=\"s\">'AND'</span><span class=\"k\">,</span> value<span class=\"k\">:</span> <span class=\"s\">'AND'</span> <span class=\"k\">}</span><span class=\"k\">,</span>","        <span class=\"k\">{</span> label<span class=\"k\">:</span> <span class=\"s\">'OR'</span><span class=\"k\">,</span> value<span class=\"k\">:</span> <span class=\"s\">'OR'</span> <span class=\"k\">}</span>","      <span class=\"k\">];</span>","    <span class=\"k\">}</span><span class=\"k\">,</span>","","    postCreate<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","      <span class=\"c\">//console.log('postCreate...');</span>","      <span class=\"k\">this</span><span class=\"k\">.</span>set<span class=\"k\">(</span><span class=\"s\">'operators'</span><span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">.</span>operators<span class=\"k\">);</span>","      <span class=\"k\">this</span><span class=\"k\">.</span>operatorSelect<span class=\"k\">.</span>set<span class=\"k\">(</span><span class=\"s\">'options'</span><span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">.</span>operators<span class=\"k\">);</span>","    <span class=\"k\">}</span><span class=\"k\">,</span>","","    startUp<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","      <span class=\"c\">//console.log('startup...');</span>","    <span class=\"k\">}</span><span class=\"k\">,</span>","","    addCondition<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span>dom<span class=\"k\">)</span> <span class=\"k\">{</span>","      <span class=\"k\">var</span> div <span class=\"k\">=</span> dojo<span class=\"k\">.</span>create<span class=\"k\">(</span><span class=\"s\">\"div\"</span><span class=\"k\">,</span><span class=\"k\">{</span>","        <span class=\"s\">\"class\"</span><span class=\"k\">:</span> <span class=\"s\">\"pentaho-condition\"</span>","      <span class=\"k\">}</span><span class=\"k\">);</span>","      dojo<span class=\"k\">.</span>place<span class=\"k\">(</span>dom<span class=\"k\">,</span> div<span class=\"k\">);</span>","      dojo<span class=\"k\">.</span>place<span class=\"k\">(</span>div<span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">.</span>conditionsNode<span class=\"k\">);</span>","      <span class=\"k\">this</span><span class=\"k\">.</span>resize<span class=\"k\">();</span>","    <span class=\"k\">}</span><span class=\"k\">,</span>","","    resize<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","      <span class=\"c\">//var height = dojo.getComputedStyle(this.conditionsNode).height;</span>","      <span class=\"k\">var</span> height <span class=\"k\">=</span> dojo<span class=\"k\">.</span>position<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>conditionsNode<span class=\"k\">).</span>h <span class=\"k\">+</span> <span class=\"s\">'px'</span><span class=\"k\">;</span> <span class=\"c\">// PIR-742</span>","      <span class=\"k\">this</span><span class=\"k\">.</span>bracketNode<span class=\"k\">.</span>style<span class=\"k\">.</span>height <span class=\"k\">=</span> height<span class=\"k\">;</span>","      <span class=\"k\">this</span><span class=\"k\">.</span>operatorNode<span class=\"k\">.</span>style<span class=\"k\">.</span>height <span class=\"k\">=</span> height<span class=\"k\">;</span>","","      <span class=\"c\">// PIR-725  - IE9 does not like line-height set to auto</span>","      height <span class=\"k\">=</span> <span class=\"k\">(</span>dojo<span class=\"k\">.</span>isIE <span class=\"k\">&amp;&amp;</span> height <span class=\"k\">==</span> <span class=\"s\">'auto'</span><span class=\"k\">)</span> <span class=\"k\">?</span> <span class=\"s\">'inherit'</span> <span class=\"k\">:</span> height<span class=\"k\">;</span>","","      <span class=\"k\">this</span><span class=\"k\">.</span>operatorNode<span class=\"k\">.</span>style<span class=\"k\">.</span>lineHeight <span class=\"k\">=</span> height<span class=\"k\">;</span>","","      <span class=\"c\">// center operator</span>","      height <span class=\"k\">=</span> dojo<span class=\"k\">.</span>position<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>bracketNode<span class=\"k\">).</span>h<span class=\"k\">;</span>","      <span class=\"k\">var</span> selectContentHeight <span class=\"k\">=</span> dojo<span class=\"k\">.</span>position<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>operatorSelect<span class=\"k\">.</span>domNode<span class=\"k\">).</span>h<span class=\"k\">;</span>","      <span class=\"k\">this</span><span class=\"k\">.</span>operatorSelectNode<span class=\"k\">.</span>style<span class=\"k\">.</span>marginTop <span class=\"k\">=</span> <span class=\"k\">(</span>height <span class=\"k\">-</span> selectContentHeight<span class=\"k\">)/</span><span class=\"s\">2</span> <span class=\"k\">+</span> <span class=\"s\">'px'</span><span class=\"k\">;</span>","      <span class=\"k\">this</span><span class=\"k\">.</span>operatorSelectNode<span class=\"k\">.</span>style<span class=\"k\">.</span>marginBottom <span class=\"k\">=</span> <span class=\"k\">(</span>height <span class=\"k\">-</span> selectContentHeight<span class=\"k\">)/</span><span class=\"s\">2</span> <span class=\"k\">+</span> <span class=\"s\">'px'</span><span class=\"k\">;</span>","    <span class=\"k\">}</span><span class=\"k\">,</span>","","    onOperatorChange<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span>newValue<span class=\"k\">)</span><span class=\"k\">{</span>","      <span class=\"k\">this</span><span class=\"k\">.</span>defaultOperator <span class=\"k\">=</span> <span class=\"k\">{</span>","        label<span class=\"k\">:</span> newValue<span class=\"k\">,</span>","        value<span class=\"k\">:</span> newValue<span class=\"k\">,</span>","        selected<span class=\"k\">:</span> <span class=\"k\">true</span>","      <span class=\"k\">}</span><span class=\"k\">;</span>","    <span class=\"k\">}</span>","  <span class=\"k\">}</span>","<span class=\"k\">);</span>"];
_$jscoverage['dojo/pentaho/common/ExpressionTree.js'][1]++;
dojo.provide("pentaho.common.ExpressionTree");
_$jscoverage['dojo/pentaho/common/ExpressionTree.js'][2]++;
dojo.require("dijit.form.Select");
_$jscoverage['dojo/pentaho/common/ExpressionTree.js'][3]++;
dojo.require("dijit._Widget");
_$jscoverage['dojo/pentaho/common/ExpressionTree.js'][4]++;
dojo.require("dijit._Templated");
_$jscoverage['dojo/pentaho/common/ExpressionTree.js'][6]++;
dojo.declare("pentaho.common.ExpressionTree", [dijit._Widget, dijit._Templated], {templateString: dojo.cache("pentaho.common", "ExpressionTree/ExpressionTree.html"), widgetsInTemplate: true, defaultOperator: null, operators: null, constructor: (function (defaultOp) {
  _$jscoverage['dojo/pentaho/common/ExpressionTree.js'][16]++;
  if ((defaultOp && defaultOp.label && defaultOp.value)) {
    _$jscoverage['dojo/pentaho/common/ExpressionTree.js'][17]++;
    this.defaultOperator = defaultOp;
  }
  else {
    _$jscoverage['dojo/pentaho/common/ExpressionTree.js'][20]++;
    this.defaultOperator = {label: "AND", value: "AND"};
  }
  _$jscoverage['dojo/pentaho/common/ExpressionTree.js'][27]++;
  this.operators = [{label: "AND", value: "AND"}, {label: "OR", value: "OR"}];
}), postCreate: (function () {
  _$jscoverage['dojo/pentaho/common/ExpressionTree.js'][35]++;
  this.set("operators", this.operators);
  _$jscoverage['dojo/pentaho/common/ExpressionTree.js'][36]++;
  this.operatorSelect.set("options", this.operators);
}), startUp: (function () {
}), addCondition: (function (dom) {
  _$jscoverage['dojo/pentaho/common/ExpressionTree.js'][44]++;
  var div = dojo.create("div", {"class": "pentaho-condition"});
  _$jscoverage['dojo/pentaho/common/ExpressionTree.js'][47]++;
  dojo.place(dom, div);
  _$jscoverage['dojo/pentaho/common/ExpressionTree.js'][48]++;
  dojo.place(div, this.conditionsNode);
  _$jscoverage['dojo/pentaho/common/ExpressionTree.js'][49]++;
  this.resize();
}), resize: (function () {
  _$jscoverage['dojo/pentaho/common/ExpressionTree.js'][54]++;
  var height = (dojo.position(this.conditionsNode).h + "px");
  _$jscoverage['dojo/pentaho/common/ExpressionTree.js'][55]++;
  this.bracketNode.style.height = height;
  _$jscoverage['dojo/pentaho/common/ExpressionTree.js'][56]++;
  this.operatorNode.style.height = height;
  _$jscoverage['dojo/pentaho/common/ExpressionTree.js'][59]++;
  height = ((dojo.isIE && (height == "auto"))? "inherit": height);
  _$jscoverage['dojo/pentaho/common/ExpressionTree.js'][61]++;
  this.operatorNode.style.lineHeight = height;
  _$jscoverage['dojo/pentaho/common/ExpressionTree.js'][64]++;
  height = dojo.position(this.bracketNode).h;
  _$jscoverage['dojo/pentaho/common/ExpressionTree.js'][65]++;
  var selectContentHeight = dojo.position(this.operatorSelect.domNode).h;
  _$jscoverage['dojo/pentaho/common/ExpressionTree.js'][66]++;
  this.operatorSelectNode.style.marginTop = (((height - selectContentHeight) / 2) + "px");
  _$jscoverage['dojo/pentaho/common/ExpressionTree.js'][67]++;
  this.operatorSelectNode.style.marginBottom = (((height - selectContentHeight) / 2) + "px");
}), onOperatorChange: (function (newValue) {
  _$jscoverage['dojo/pentaho/common/ExpressionTree.js'][71]++;
  this.defaultOperator = {label: newValue, value: newValue, selected: true};
})});
