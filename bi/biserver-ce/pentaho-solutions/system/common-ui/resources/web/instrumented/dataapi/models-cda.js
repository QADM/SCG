/* automatically generated by JSCoverage - do not edit */
try {
  if (typeof top === 'object' && top !== null && typeof top.opener === 'object' && top.opener !== null) {
    // this is a browser window that was opened from another window

    if (! top.opener._$jscoverage) {
      top.opener._$jscoverage = {};
    }
  }
}
catch (e) {}

try {
  if (typeof top === 'object' && top !== null) {
    // this is a browser window

    try {
      if (typeof top.opener === 'object' && top.opener !== null && top.opener._$jscoverage) {
        top._$jscoverage = top.opener._$jscoverage;
      }
    }
    catch (e) {}

    if (! top._$jscoverage) {
      top._$jscoverage = {};
    }
  }
}
catch (e) {}

try {
  if (typeof top === 'object' && top !== null && top._$jscoverage) {
    _$jscoverage = top._$jscoverage;
  }
}
catch (e) {}
if (typeof _$jscoverage !== 'object') {
  _$jscoverage = {};
}
if (! _$jscoverage['dataapi/models-cda.js']) {
  _$jscoverage['dataapi/models-cda.js'] = [];
  _$jscoverage['dataapi/models-cda.js'][2] = 0;
  _$jscoverage['dataapi/models-cda.js'][3] = 0;
  _$jscoverage['dataapi/models-cda.js'][4] = 0;
  _$jscoverage['dataapi/models-cda.js'][7] = 0;
  _$jscoverage['dataapi/models-cda.js'][9] = 0;
  _$jscoverage['dataapi/models-cda.js'][10] = 0;
  _$jscoverage['dataapi/models-cda.js'][11] = 0;
  _$jscoverage['dataapi/models-cda.js'][13] = 0;
  _$jscoverage['dataapi/models-cda.js'][14] = 0;
  _$jscoverage['dataapi/models-cda.js'][15] = 0;
  _$jscoverage['dataapi/models-cda.js'][16] = 0;
  _$jscoverage['dataapi/models-cda.js'][22] = 0;
  _$jscoverage['dataapi/models-cda.js'][23] = 0;
  _$jscoverage['dataapi/models-cda.js'][27] = 0;
  _$jscoverage['dataapi/models-cda.js'][30] = 0;
  _$jscoverage['dataapi/models-cda.js'][31] = 0;
  _$jscoverage['dataapi/models-cda.js'][32] = 0;
  _$jscoverage['dataapi/models-cda.js'][35] = 0;
  _$jscoverage['dataapi/models-cda.js'][38] = 0;
  _$jscoverage['dataapi/models-cda.js'][40] = 0;
  _$jscoverage['dataapi/models-cda.js'][41] = 0;
  _$jscoverage['dataapi/models-cda.js'][42] = 0;
  _$jscoverage['dataapi/models-cda.js'][43] = 0;
  _$jscoverage['dataapi/models-cda.js'][44] = 0;
  _$jscoverage['dataapi/models-cda.js'][45] = 0;
  _$jscoverage['dataapi/models-cda.js'][46] = 0;
  _$jscoverage['dataapi/models-cda.js'][47] = 0;
  _$jscoverage['dataapi/models-cda.js'][48] = 0;
  _$jscoverage['dataapi/models-cda.js'][49] = 0;
  _$jscoverage['dataapi/models-cda.js'][50] = 0;
  _$jscoverage['dataapi/models-cda.js'][51] = 0;
  _$jscoverage['dataapi/models-cda.js'][52] = 0;
  _$jscoverage['dataapi/models-cda.js'][54] = 0;
  _$jscoverage['dataapi/models-cda.js'][55] = 0;
  _$jscoverage['dataapi/models-cda.js'][56] = 0;
  _$jscoverage['dataapi/models-cda.js'][57] = 0;
  _$jscoverage['dataapi/models-cda.js'][58] = 0;
  _$jscoverage['dataapi/models-cda.js'][59] = 0;
}
_$jscoverage['dataapi/models-cda.js'].source = ["","pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>CDAHandler <span class=\"k\">=</span> <span class=\"k\">function</span> CDAHandler<span class=\"k\">(</span>sandbox<span class=\"k\">)</span> <span class=\"k\">{</span>","\tpentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Handler<span class=\"k\">.</span>call<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">,</span> sandbox<span class=\"k\">);</span>","    <span class=\"k\">this</span><span class=\"k\">.</span>type <span class=\"k\">=</span> pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>SOURCE_TYPE_CDA<span class=\"k\">;</span>","<span class=\"k\">}</span>","","inheritPrototype<span class=\"k\">(</span>pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>CDAHandler<span class=\"k\">,</span> pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Handler<span class=\"k\">);</span> <span class=\"c\">//borrow the parent's methods</span>","","pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>CDAHandler<span class=\"k\">.</span>prototype<span class=\"k\">.</span>discoverModels <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span>  <span class=\"k\">)</span> <span class=\"k\">{</span>","\t<span class=\"k\">var</span> that <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">;</span>","\tpentaho<span class=\"k\">.</span>cda<span class=\"k\">.</span>discoverDescriptors<span class=\"k\">(</span>","\t\t<span class=\"k\">function</span><span class=\"k\">(</span>files<span class=\"k\">)</span><span class=\"k\">{</span>","\t\t\t<span class=\"k\">var</span> i<span class=\"k\">=</span><span class=\"s\">0</span><span class=\"k\">,</span>j<span class=\"k\">=</span><span class=\"s\">0</span><span class=\"k\">,</span>datasource<span class=\"k\">,</span> descriptor<span class=\"k\">;</span>","\t\t\t<span class=\"k\">for</span> <span class=\"k\">(</span>i<span class=\"k\">=</span><span class=\"s\">0</span><span class=\"k\">,</span>j<span class=\"k\">=</span>files<span class=\"k\">.</span>length<span class=\"k\">;</span>i<span class=\"k\">&lt;</span>j<span class=\"k\">;</span>i<span class=\"k\">++)</span> <span class=\"k\">{</span>","\t\t\t\tdescriptor <span class=\"k\">=</span> <span class=\"k\">new</span> pentaho<span class=\"k\">.</span>cda<span class=\"k\">.</span>Descriptor<span class=\"k\">(</span><span class=\"k\">{</span>name<span class=\"k\">:</span>files<span class=\"k\">[</span>i<span class=\"k\">].</span>name<span class=\"k\">,</span> path<span class=\"k\">:</span>files<span class=\"k\">[</span>i<span class=\"k\">].</span>path<span class=\"k\">}</span><span class=\"k\">);</span>","\t\t\t\tdatasource <span class=\"k\">=</span> <span class=\"k\">new</span> pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>model<span class=\"k\">.</span>cda<span class=\"k\">(</span>","\t\t\t\t\t<span class=\"k\">{</span>id<span class=\"k\">:</span>files<span class=\"k\">[</span>i<span class=\"k\">].</span>name<span class=\"k\">,</span>","\t\t\t\t\tname<span class=\"k\">:</span>files<span class=\"k\">[</span>i<span class=\"k\">].</span>name<span class=\"k\">,</span>","\t\t\t\t\ttype<span class=\"k\">:</span>pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>SOURCE_TYPE_CDA<span class=\"k\">,</span>","\t\t\t\t\tdescription<span class=\"k\">:</span><span class=\"s\">''</span>","\t\t\t\t\t<span class=\"k\">}</span><span class=\"k\">);</span>","\t\t\t\tdatasource<span class=\"k\">.</span>descriptor <span class=\"k\">=</span> descriptor<span class=\"k\">;</span>","\t\t\t\tthat<span class=\"k\">.</span>modelList<span class=\"k\">.</span>push<span class=\"k\">(</span>datasource<span class=\"k\">);</span>","\t\t\t<span class=\"k\">}</span>","\t\t<span class=\"k\">}</span>","\t<span class=\"k\">)</span>","\t<span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>sources<span class=\"k\">;</span>\t\t","<span class=\"k\">}</span>","","pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>model<span class=\"k\">.</span>cda <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span>obj<span class=\"k\">)</span> <span class=\"k\">{</span>","\tpentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>model<span class=\"k\">.</span>call<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">,</span> obj<span class=\"k\">);</span> <span class=\"c\">//call parent object</span>","\t<span class=\"k\">this</span><span class=\"k\">.</span>path <span class=\"k\">=</span> <span class=\"s\">''</span><span class=\"k\">;</span>","<span class=\"k\">}</span>","","inheritPrototype<span class=\"k\">(</span>pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>model<span class=\"k\">.</span>cda<span class=\"k\">,</span> pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>model<span class=\"k\">);</span> <span class=\"c\">//borrow the parent's methods</span>","","\t","pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>model<span class=\"k\">.</span>cda<span class=\"k\">.</span>prototype<span class=\"k\">.</span>discoverModelDetail <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span> forceLoad <span class=\"k\">)</span> <span class=\"k\">{</span>","","\t<span class=\"k\">var</span> that <span class=\"k\">=</span><span class=\"k\">this</span>","\t<span class=\"k\">this</span><span class=\"k\">.</span>descriptor<span class=\"k\">.</span>discoverQueries<span class=\"k\">(</span><span class=\"k\">function</span><span class=\"k\">(</span>queries<span class=\"k\">)</span><span class=\"k\">{</span>","\t\t<span class=\"k\">var</span> i<span class=\"k\">=</span><span class=\"s\">0</span><span class=\"k\">,</span>j<span class=\"k\">=</span><span class=\"s\">0</span><span class=\"k\">,</span>datasource<span class=\"k\">;</span>","\t\t<span class=\"k\">for</span> <span class=\"k\">(</span>i<span class=\"k\">=</span><span class=\"s\">0</span><span class=\"k\">,</span>j<span class=\"k\">=</span>queries<span class=\"k\">.</span>length<span class=\"k\">;</span>i<span class=\"k\">&lt;</span>j<span class=\"k\">;</span>i<span class=\"k\">++)</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> query <span class=\"k\">=</span> <span class=\"k\">new</span> pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>dataelement<span class=\"k\">();</span>","            query<span class=\"k\">.</span>dataType <span class=\"k\">=</span> pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>DATA_TYPES<span class=\"k\">.</span>NONE<span class=\"k\">;</span>","            query<span class=\"k\">.</span>elementType <span class=\"k\">=</span> pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>ELEMENT_TYPES<span class=\"k\">.</span>QUERY<span class=\"k\">;</span>","            query<span class=\"k\">.</span>id         <span class=\"k\">=</span> queries<span class=\"k\">[</span>i<span class=\"k\">].</span>id<span class=\"k\">;</span>","            query<span class=\"k\">.</span>name       <span class=\"k\">=</span> queries<span class=\"k\">[</span>i<span class=\"k\">].</span>name<span class=\"k\">;</span>","            query<span class=\"k\">.</span>query_type <span class=\"k\">=</span> queries<span class=\"k\">[</span>i<span class=\"k\">].</span>type<span class=\"k\">;</span>","            query<span class=\"k\">.</span>isMeasures <span class=\"k\">=</span> <span class=\"k\">false</span><span class=\"k\">;</span>","            query<span class=\"k\">.</span>isTime <span class=\"k\">=</span> <span class=\"k\">false</span><span class=\"k\">;</span>","            that<span class=\"k\">.</span>addElement<span class=\"k\">(</span> query <span class=\"k\">);</span>","","\t\t\tthat<span class=\"k\">.</span>addCapability<span class=\"k\">(</span>pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>CAPABILITIES<span class=\"k\">.</span>HAS_ACROSS_AXIS<span class=\"k\">);</span>","\t\t\tthat<span class=\"k\">.</span>addCapability<span class=\"k\">(</span>pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>CAPABILITIES<span class=\"k\">.</span>IS_ACROSS_CUSTOM<span class=\"k\">);</span>","\t\t\tthat<span class=\"k\">.</span>addCapability<span class=\"k\">(</span>pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>CAPABILITIES<span class=\"k\">.</span>HAS_FILTERS<span class=\"k\">);</span>","\t\t\tthat<span class=\"k\">.</span>addCapability<span class=\"k\">(</span>pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>CAPABILITIES<span class=\"k\">.</span>IS_FILTER_CUSTOM<span class=\"k\">);</span>","\t\t\tthat<span class=\"k\">.</span>addCapability<span class=\"k\">(</span>pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>CAPABILITIES<span class=\"k\">.</span>CAN_SORT<span class=\"k\">);</span>","\t\t<span class=\"k\">}</span><span class=\"k\">;</span>","\t<span class=\"k\">}</span><span class=\"k\">);</span>","<span class=\"k\">}</span>"];
_$jscoverage['dataapi/models-cda.js'][2]++;
pentaho.pda.CDAHandler = (function CDAHandler(sandbox) {
  _$jscoverage['dataapi/models-cda.js'][3]++;
  pentaho.pda.Handler.call(this, sandbox);
  _$jscoverage['dataapi/models-cda.js'][4]++;
  this.type = pentaho.pda.SOURCE_TYPE_CDA;
});
_$jscoverage['dataapi/models-cda.js'][7]++;
inheritPrototype(pentaho.pda.CDAHandler, pentaho.pda.Handler);
_$jscoverage['dataapi/models-cda.js'][9]++;
pentaho.pda.CDAHandler.prototype.discoverModels = (function () {
  _$jscoverage['dataapi/models-cda.js'][10]++;
  var that = this;
  _$jscoverage['dataapi/models-cda.js'][11]++;
  pentaho.cda.discoverDescriptors((function (files) {
  _$jscoverage['dataapi/models-cda.js'][13]++;
  var i = 0, j = 0, datasource, descriptor;
  _$jscoverage['dataapi/models-cda.js'][14]++;
  for (((i = 0), (j = files.length)); (i < j); (i++)) {
    _$jscoverage['dataapi/models-cda.js'][15]++;
    descriptor = new (pentaho.cda.Descriptor)({name: files[i].name, path: files[i].path});
    _$jscoverage['dataapi/models-cda.js'][16]++;
    datasource = new (pentaho.pda.model.cda)({id: files[i].name, name: files[i].name, type: pentaho.pda.SOURCE_TYPE_CDA, description: ""});
    _$jscoverage['dataapi/models-cda.js'][22]++;
    datasource.descriptor = descriptor;
    _$jscoverage['dataapi/models-cda.js'][23]++;
    that.modelList.push(datasource);
}
}));
  _$jscoverage['dataapi/models-cda.js'][27]++;
  return this.sources;
});
_$jscoverage['dataapi/models-cda.js'][30]++;
pentaho.pda.model.cda = (function (obj) {
  _$jscoverage['dataapi/models-cda.js'][31]++;
  pentaho.pda.model.call(this, obj);
  _$jscoverage['dataapi/models-cda.js'][32]++;
  this.path = "";
});
_$jscoverage['dataapi/models-cda.js'][35]++;
inheritPrototype(pentaho.pda.model.cda, pentaho.pda.model);
_$jscoverage['dataapi/models-cda.js'][38]++;
pentaho.pda.model.cda.prototype.discoverModelDetail = (function (forceLoad) {
  _$jscoverage['dataapi/models-cda.js'][40]++;
  var that = this;
  _$jscoverage['dataapi/models-cda.js'][41]++;
  this.descriptor.discoverQueries((function (queries) {
  _$jscoverage['dataapi/models-cda.js'][42]++;
  var i = 0, j = 0, datasource;
  _$jscoverage['dataapi/models-cda.js'][43]++;
  for (((i = 0), (j = queries.length)); (i < j); (i++)) {
    _$jscoverage['dataapi/models-cda.js'][44]++;
    var query = new (pentaho.pda.dataelement)();
    _$jscoverage['dataapi/models-cda.js'][45]++;
    query.dataType = pentaho.pda.Column.DATA_TYPES.NONE;
    _$jscoverage['dataapi/models-cda.js'][46]++;
    query.elementType = pentaho.pda.Column.ELEMENT_TYPES.QUERY;
    _$jscoverage['dataapi/models-cda.js'][47]++;
    query.id = queries[i].id;
    _$jscoverage['dataapi/models-cda.js'][48]++;
    query.name = queries[i].name;
    _$jscoverage['dataapi/models-cda.js'][49]++;
    query.query_type = queries[i].type;
    _$jscoverage['dataapi/models-cda.js'][50]++;
    query.isMeasures = false;
    _$jscoverage['dataapi/models-cda.js'][51]++;
    query.isTime = false;
    _$jscoverage['dataapi/models-cda.js'][52]++;
    that.addElement(query);
    _$jscoverage['dataapi/models-cda.js'][54]++;
    that.addCapability(pentaho.pda.CAPABILITIES.HAS_ACROSS_AXIS);
    _$jscoverage['dataapi/models-cda.js'][55]++;
    that.addCapability(pentaho.pda.CAPABILITIES.IS_ACROSS_CUSTOM);
    _$jscoverage['dataapi/models-cda.js'][56]++;
    that.addCapability(pentaho.pda.CAPABILITIES.HAS_FILTERS);
    _$jscoverage['dataapi/models-cda.js'][57]++;
    that.addCapability(pentaho.pda.CAPABILITIES.IS_FILTER_CUSTOM);
    _$jscoverage['dataapi/models-cda.js'][58]++;
    that.addCapability(pentaho.pda.CAPABILITIES.CAN_SORT);
}
  _$jscoverage['dataapi/models-cda.js'][59]++;
  ;
}));
});
