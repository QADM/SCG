/* automatically generated by JSCoverage - do not edit */
try {
  if (typeof top === 'object' && top !== null && typeof top.opener === 'object' && top.opener !== null) {
    // this is a browser window that was opened from another window

    if (! top.opener._$jscoverage) {
      top.opener._$jscoverage = {};
    }
  }
}
catch (e) {}

try {
  if (typeof top === 'object' && top !== null) {
    // this is a browser window

    try {
      if (typeof top.opener === 'object' && top.opener !== null && top.opener._$jscoverage) {
        top._$jscoverage = top.opener._$jscoverage;
      }
    }
    catch (e) {}

    if (! top._$jscoverage) {
      top._$jscoverage = {};
    }
  }
}
catch (e) {}

try {
  if (typeof top === 'object' && top !== null && top._$jscoverage) {
    _$jscoverage = top._$jscoverage;
  }
}
catch (e) {}
if (typeof _$jscoverage !== 'object') {
  _$jscoverage = {};
}
if (! _$jscoverage['vizapi/ccc/sample/sampleVisualization_analyzer_plugin.js']) {
  _$jscoverage['vizapi/ccc/sample/sampleVisualization_analyzer_plugin.js'] = [];
  _$jscoverage['vizapi/ccc/sample/sampleVisualization_analyzer_plugin.js'][1] = 0;
  _$jscoverage['vizapi/ccc/sample/sampleVisualization_analyzer_plugin.js'][2] = 0;
  _$jscoverage['vizapi/ccc/sample/sampleVisualization_analyzer_plugin.js'][7] = 0;
  _$jscoverage['vizapi/ccc/sample/sampleVisualization_analyzer_plugin.js'][16] = 0;
  _$jscoverage['vizapi/ccc/sample/sampleVisualization_analyzer_plugin.js'][21] = 0;
  _$jscoverage['vizapi/ccc/sample/sampleVisualization_analyzer_plugin.js'][30] = 0;
  _$jscoverage['vizapi/ccc/sample/sampleVisualization_analyzer_plugin.js'][40] = 0;
  _$jscoverage['vizapi/ccc/sample/sampleVisualization_analyzer_plugin.js'][41] = 0;
  _$jscoverage['vizapi/ccc/sample/sampleVisualization_analyzer_plugin.js'][48] = 0;
  _$jscoverage['vizapi/ccc/sample/sampleVisualization_analyzer_plugin.js'][50] = 0;
  _$jscoverage['vizapi/ccc/sample/sampleVisualization_analyzer_plugin.js'][51] = 0;
  _$jscoverage['vizapi/ccc/sample/sampleVisualization_analyzer_plugin.js'][52] = 0;
  _$jscoverage['vizapi/ccc/sample/sampleVisualization_analyzer_plugin.js'][56] = 0;
  _$jscoverage['vizapi/ccc/sample/sampleVisualization_analyzer_plugin.js'][62] = 0;
}
_$jscoverage['vizapi/ccc/sample/sampleVisualization_analyzer_plugin.js'].source = ["<span class=\"k\">var</span> analyzerPlugins <span class=\"k\">=</span> analyzerPlugins <span class=\"k\">||</span> <span class=\"k\">[];</span>","analyzerPlugins<span class=\"k\">.</span>push<span class=\"k\">(</span>","    <span class=\"k\">{</span>","      init<span class=\"k\">:</span><span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","","        <span class=\"c\">// Register visualizations to display in Analyzer</span>","        cv<span class=\"k\">.</span>pentahoVisualizations<span class=\"k\">.</span>push<span class=\"k\">(</span>pentaho<span class=\"k\">.</span>visualizations<span class=\"k\">.</span>getById<span class=\"k\">(</span><span class=\"s\">\"sample_calc\"</span><span class=\"k\">));</span>","","","","        <span class=\"c\">/* </span>","<span class=\"c\">         Helpers contain code that knows about the Analyzer specific context. The one function that's required</span>","<span class=\"c\">         \"generateOptionsFromAnalyzerState\" is called so the visualization can set it's own options based on</span>","<span class=\"c\">         Analyzers current report.</span>","<span class=\"c\">         */</span>","        cv<span class=\"k\">.</span>pentahoVisualizationHelpers<span class=\"k\">[</span><span class=\"s\">\"sample_calc\"</span><span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"k\">{</span>","          <span class=\"c\">// use one of Analyzer's stock placeholder images</span>","          placeholderImageSrc<span class=\"k\">:</span> CONTEXT_PATH <span class=\"k\">+</span> <span class=\"s\">\"content/analyzer/images/viz/VERTICAL_BAR.png\"</span><span class=\"k\">,</span>","          <span class=\"c\">// set visualization options based on analyzer's state.</span>","          generateOptionsFromAnalyzerState<span class=\"k\">:</span><span class=\"k\">function</span> <span class=\"k\">(</span>report<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span> <span class=\"k\">{}</span><span class=\"k\">;</span> <span class=\"c\">// perform no work</span>","          <span class=\"k\">}</span>","        <span class=\"k\">}</span><span class=\"k\">;</span>","","        <span class=\"c\">/*</span>","<span class=\"c\">         LayoutConfig objects manage the interaction between Analyzer's Layout Panel and the visualization's settings.</span>","<span class=\"c\">         */</span>","","        <span class=\"c\">// Declare a new class which extends the built-in version from Analyzer</span>","        dojo<span class=\"k\">.</span>declare<span class=\"k\">(</span><span class=\"s\">\"SampleConfig\"</span><span class=\"k\">,</span> <span class=\"k\">[</span>analyzer<span class=\"k\">.</span>LayoutConfig<span class=\"k\">],</span> <span class=\"k\">{</span>","","","          <span class=\"c\">/**</span>","<span class=\"c\">           * @param config    The parse Configuration object which serves as the model of of the Panel</span>","<span class=\"c\">           * @param item      The item in the panel which originated the event.</span>","<span class=\"c\">           * @param eventName The name of the event (clicked, value, etc)</span>","<span class=\"c\">           * @param args      A Hash Object containing relevent values (prevVal, newVal, etc)</span>","<span class=\"c\">           */</span>","          onModelEvent<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span>config<span class=\"k\">,</span> item<span class=\"k\">,</span> eventName<span class=\"k\">,</span> args<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">this</span><span class=\"k\">.</span>report<span class=\"k\">.</span>visualization<span class=\"k\">.</span>args<span class=\"k\">[</span><span class=\"s\">\"calc\"</span><span class=\"k\">]</span> <span class=\"k\">=</span> config<span class=\"k\">.</span>byId<span class=\"k\">(</span><span class=\"s\">\"calc\"</span><span class=\"k\">).</span>value<span class=\"k\">;</span>","            <span class=\"k\">this</span><span class=\"k\">.</span>inherited<span class=\"k\">(</span>arguments<span class=\"k\">);</span> <span class=\"c\">// Let super class handle the insertAt and removedGem events</span>","          <span class=\"k\">}</span><span class=\"k\">,</span>","","          <span class=\"c\">/**</span>","<span class=\"c\">           * Return the JSON configuration object which the panel will use to create the UI and it's model</span>","<span class=\"c\">           */</span>","          getConfiguration<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> config <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>inherited<span class=\"k\">(</span>arguments<span class=\"k\">);</span>","","            dojo<span class=\"k\">.</span>forEach<span class=\"k\">(</span>config<span class=\"k\">.</span>properties<span class=\"k\">,</span> <span class=\"k\">function</span> <span class=\"k\">(</span>item<span class=\"k\">)</span> <span class=\"k\">{</span>","              <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>report<span class=\"k\">.</span>visualization<span class=\"k\">.</span>args<span class=\"k\">[</span>item<span class=\"k\">.</span>id<span class=\"k\">]</span> <span class=\"k\">!==</span> <span class=\"s\">\"undefined\"</span><span class=\"k\">)</span> <span class=\"k\">{</span>","                item<span class=\"k\">.</span>value <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>report<span class=\"k\">.</span>visualization<span class=\"k\">.</span>args<span class=\"k\">[</span>item<span class=\"k\">.</span>id<span class=\"k\">];</span>","              <span class=\"k\">}</span>","            <span class=\"k\">}</span><span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">);</span>","","            <span class=\"k\">return</span> config<span class=\"k\">;</span>","","          <span class=\"k\">}</span>","        <span class=\"k\">}</span><span class=\"k\">);</span>","","        <span class=\"c\">// Register the Layout Panel Configuration Manager</span>","        analyzer<span class=\"k\">.</span>LayoutPanel<span class=\"k\">.</span>configurationManagers<span class=\"k\">[</span><span class=\"s\">\"JSON_sample_calc\"</span><span class=\"k\">]</span> <span class=\"k\">=</span> SampleConfig<span class=\"k\">;</span>","      <span class=\"k\">}</span>","    <span class=\"k\">}</span>","<span class=\"k\">);</span>"];
_$jscoverage['vizapi/ccc/sample/sampleVisualization_analyzer_plugin.js'][1]++;
var analyzerPlugins = (analyzerPlugins || []);
_$jscoverage['vizapi/ccc/sample/sampleVisualization_analyzer_plugin.js'][2]++;
analyzerPlugins.push({init: (function () {
  _$jscoverage['vizapi/ccc/sample/sampleVisualization_analyzer_plugin.js'][7]++;
  cv.pentahoVisualizations.push(pentaho.visualizations.getById("sample_calc"));
  _$jscoverage['vizapi/ccc/sample/sampleVisualization_analyzer_plugin.js'][16]++;
  cv.pentahoVisualizationHelpers.sample_calc = {placeholderImageSrc: (CONTEXT_PATH + "content/analyzer/images/viz/VERTICAL_BAR.png"), generateOptionsFromAnalyzerState: (function (report) {
  _$jscoverage['vizapi/ccc/sample/sampleVisualization_analyzer_plugin.js'][21]++;
  return ({});
})};
  _$jscoverage['vizapi/ccc/sample/sampleVisualization_analyzer_plugin.js'][30]++;
  dojo.declare("SampleConfig", [analyzer.LayoutConfig], {onModelEvent: (function (config, item, eventName, args) {
  _$jscoverage['vizapi/ccc/sample/sampleVisualization_analyzer_plugin.js'][40]++;
  this.report.visualization.args.calc = config.byId("calc").value;
  _$jscoverage['vizapi/ccc/sample/sampleVisualization_analyzer_plugin.js'][41]++;
  this.inherited(arguments);
}), getConfiguration: (function () {
  _$jscoverage['vizapi/ccc/sample/sampleVisualization_analyzer_plugin.js'][48]++;
  var config = this.inherited(arguments);
  _$jscoverage['vizapi/ccc/sample/sampleVisualization_analyzer_plugin.js'][50]++;
  dojo.forEach(config.properties, (function (item) {
  _$jscoverage['vizapi/ccc/sample/sampleVisualization_analyzer_plugin.js'][51]++;
  if ((this.report.visualization.args[item.id] !== "undefined")) {
    _$jscoverage['vizapi/ccc/sample/sampleVisualization_analyzer_plugin.js'][52]++;
    item.value = this.report.visualization.args[item.id];
  }
}), this);
  _$jscoverage['vizapi/ccc/sample/sampleVisualization_analyzer_plugin.js'][56]++;
  return config;
})});
  _$jscoverage['vizapi/ccc/sample/sampleVisualization_analyzer_plugin.js'][62]++;
  analyzer.LayoutPanel.configurationManagers.JSON_sample_calc = SampleConfig;
})});
