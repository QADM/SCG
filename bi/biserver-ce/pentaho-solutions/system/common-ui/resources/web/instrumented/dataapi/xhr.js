/* automatically generated by JSCoverage - do not edit */
try {
  if (typeof top === 'object' && top !== null && typeof top.opener === 'object' && top.opener !== null) {
    // this is a browser window that was opened from another window

    if (! top.opener._$jscoverage) {
      top.opener._$jscoverage = {};
    }
  }
}
catch (e) {}

try {
  if (typeof top === 'object' && top !== null) {
    // this is a browser window

    try {
      if (typeof top.opener === 'object' && top.opener !== null && top.opener._$jscoverage) {
        top._$jscoverage = top.opener._$jscoverage;
      }
    }
    catch (e) {}

    if (! top._$jscoverage) {
      top._$jscoverage = {};
    }
  }
}
catch (e) {}

try {
  if (typeof top === 'object' && top !== null && top._$jscoverage) {
    _$jscoverage = top._$jscoverage;
  }
}
catch (e) {}
if (typeof _$jscoverage !== 'object') {
  _$jscoverage = {};
}
if (! _$jscoverage['dataapi/xhr.js']) {
  _$jscoverage['dataapi/xhr.js'] = [];
  _$jscoverage['dataapi/xhr.js'][7] = 0;
  _$jscoverage['dataapi/xhr.js'][8] = 0;
  _$jscoverage['dataapi/xhr.js'][14] = 0;
  _$jscoverage['dataapi/xhr.js'][15] = 0;
  _$jscoverage['dataapi/xhr.js'][16] = 0;
  _$jscoverage['dataapi/xhr.js'][18] = 0;
  _$jscoverage['dataapi/xhr.js'][20] = 0;
  _$jscoverage['dataapi/xhr.js'][21] = 0;
  _$jscoverage['dataapi/xhr.js'][22] = 0;
  _$jscoverage['dataapi/xhr.js'][25] = 0;
  _$jscoverage['dataapi/xhr.js'][26] = 0;
  _$jscoverage['dataapi/xhr.js'][36] = 0;
  _$jscoverage['dataapi/xhr.js'][37] = 0;
  _$jscoverage['dataapi/xhr.js'][38] = 0;
  _$jscoverage['dataapi/xhr.js'][39] = 0;
  _$jscoverage['dataapi/xhr.js'][40] = 0;
  _$jscoverage['dataapi/xhr.js'][41] = 0;
  _$jscoverage['dataapi/xhr.js'][42] = 0;
  _$jscoverage['dataapi/xhr.js'][43] = 0;
  _$jscoverage['dataapi/xhr.js'][45] = 0;
  _$jscoverage['dataapi/xhr.js'][49] = 0;
  _$jscoverage['dataapi/xhr.js'][56] = 0;
  _$jscoverage['dataapi/xhr.js'][57] = 0;
  _$jscoverage['dataapi/xhr.js'][58] = 0;
  _$jscoverage['dataapi/xhr.js'][59] = 0;
  _$jscoverage['dataapi/xhr.js'][60] = 0;
  _$jscoverage['dataapi/xhr.js'][63] = 0;
  _$jscoverage['dataapi/xhr.js'][64] = 0;
  _$jscoverage['dataapi/xhr.js'][65] = 0;
  _$jscoverage['dataapi/xhr.js'][66] = 0;
  _$jscoverage['dataapi/xhr.js'][67] = 0;
  _$jscoverage['dataapi/xhr.js'][69] = 0;
  _$jscoverage['dataapi/xhr.js'][70] = 0;
}
_$jscoverage['dataapi/xhr.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\">@module pentaho</span>","<span class=\"c\">@class xhr</span>","<span class=\"c\">@description Utility container for XHR events indepentdent of JS library</span>","<span class=\"c\">Currently uses pentaho-ajax.js to minimize dependencies, but could be any library</span>","<span class=\"c\">*/</span>","pentaho <span class=\"k\">=</span> <span class=\"k\">typeof</span> pentaho <span class=\"k\">==</span> <span class=\"s\">\"undefined\"</span> <span class=\"k\">?</span> <span class=\"k\">{}</span> <span class=\"k\">:</span> pentaho<span class=\"k\">;</span>","pentaho<span class=\"k\">.</span>xhr <span class=\"k\">=</span> <span class=\"k\">{</span>","\t\t<span class=\"c\">/*</span>","<span class=\"c\">\t\t@method execute</span>","<span class=\"c\">\t\t@description call the appropriate XHR functions and delivers results</span>","<span class=\"c\">\t\t*/</span>","\t\texecute<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span>url<span class=\"k\">,</span> oConfig<span class=\"k\">)</span><span class=\"k\">{</span>","\t\t\t<span class=\"k\">var</span> parms <span class=\"k\">=</span> <span class=\"s\">\"\"</span><span class=\"k\">;</span>","\t\t\t<span class=\"k\">for</span> <span class=\"k\">(</span>parm <span class=\"k\">in</span> oConfig<span class=\"k\">.</span>data<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\tparms <span class=\"k\">+=</span> <span class=\"s\">\"&amp;\"</span> <span class=\"k\">+</span> parm <span class=\"k\">+</span><span class=\"s\">\"=\"</span><span class=\"k\">+</span>oConfig<span class=\"k\">.</span>data<span class=\"k\">[</span>parm<span class=\"k\">];</span>","\t\t\t<span class=\"k\">}</span>","\t\t\t<span class=\"k\">function</span> func<span class=\"k\">(</span>response<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t<span class=\"c\">//console.log(response);</span>","\t\t\t\t\t<span class=\"k\">var</span> myxml <span class=\"k\">=</span> pentaho<span class=\"k\">.</span>xhr<span class=\"k\">.</span>parseXML<span class=\"k\">(</span>response<span class=\"k\">);</span>","\t\t\t\t\toConfig<span class=\"k\">.</span>complete<span class=\"k\">(</span>myxml<span class=\"k\">);</span>","\t\t\t<span class=\"k\">}</span><span class=\"k\">;</span>","\t\t\t<span class=\"c\">//this shoudl be done by default then send if it cant convert</span>","\t\t\t<span class=\"c\">//var response = pentahoGet(url, parms, func);</span>","\t\t\t<span class=\"k\">var</span> response <span class=\"k\">=</span> pentahoGet<span class=\"k\">(</span>url<span class=\"k\">,</span> parms<span class=\"k\">);</span>","\t\t\toConfig<span class=\"k\">.</span>complete<span class=\"k\">(</span>response<span class=\"k\">);</span>","","\t\t<span class=\"k\">}</span><span class=\"k\">,</span>","\t\t<span class=\"c\">/*</span>","<span class=\"c\">\t\t@method SOAP2JS</span>","<span class=\"c\">\t\t@description Utility function to convert data from pentaho ServiceAction SOAP to JS objects</span>","<span class=\"c\">\t\t*/</span>","\t\tSOAP2JS<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span>oXML<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t<span class=\"c\">//assumes we get a valid XML document</span>","\t\t\t<span class=\"c\">//var oXML  = pentaho.xhr.parseXML(sSOAP);</span>","\t\t\t<span class=\"k\">var</span> rows <span class=\"k\">=</span> oXML<span class=\"k\">.</span>getElementsByTagName<span class=\"k\">(</span><span class=\"s\">'DATA-ROW'</span><span class=\"k\">);</span>        <span class=\"c\">//initialize array of all DATA-ROW returned in SOAP</span>","\t\t\t<span class=\"k\">var</span> cols <span class=\"k\">=</span> oXML<span class=\"k\">.</span>getElementsByTagName<span class=\"k\">(</span><span class=\"s\">'COLUMN-HDR-ITEM'</span><span class=\"k\">);</span> <span class=\"c\">//initialize arry of all COLUMN-HDR-ITEM in SOAP</span>","\t\t\t<span class=\"k\">var</span> oResults <span class=\"k\">=</span> <span class=\"k\">{}</span><span class=\"k\">;</span>     <span class=\"c\">//initialize emply object for each the JSON rows</span>","\t\t\toResults<span class=\"k\">.</span>results <span class=\"k\">=</span> <span class=\"k\">[];</span> <span class=\"c\">//add empty array to hold DATA-ROW contents in the results JS property</span>","\t\t\t<span class=\"k\">for</span> <span class=\"k\">(</span><span class=\"k\">var</span> i<span class=\"k\">=</span><span class=\"s\">0</span><span class=\"k\">;</span> i<span class=\"k\">&lt;</span>rows<span class=\"k\">.</span>length<span class=\"k\">;</span> i<span class=\"k\">++)</span> <span class=\"k\">{</span>","\t\t\t\trow <span class=\"k\">=</span> oXML<span class=\"k\">.</span>getElementsByTagName<span class=\"k\">(</span><span class=\"s\">'DATA-ROW'</span><span class=\"k\">)[</span>i<span class=\"k\">];</span> <span class=\"c\">//get the row for this loop var i</span>","\t\t\t\toResults<span class=\"k\">.</span>results<span class=\"k\">[</span>i<span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"k\">{}</span><span class=\"k\">;</span> <span class=\"c\">//initialize each row with empty objects</span>","\t\t\t\t<span class=\"k\">for</span> <span class=\"k\">(</span><span class=\"k\">var</span> j<span class=\"k\">=</span><span class=\"s\">0</span><span class=\"k\">;</span> j<span class=\"k\">&lt;</span>cols<span class=\"k\">.</span>length<span class=\"k\">;</span> j<span class=\"k\">++)</span> <span class=\"k\">{</span>","\t\t\t\t\t<span class=\"c\">//addign the object value for column header COLUMN-HDR-ITEM and ros DATA-ROW values</span>","\t\t\t\t\toResults<span class=\"k\">.</span>results<span class=\"k\">[</span>i<span class=\"k\">][</span>oXML<span class=\"k\">.</span>getElementsByTagName<span class=\"k\">(</span><span class=\"s\">'COLUMN-HDR-ITEM'</span><span class=\"k\">)[</span>j<span class=\"k\">].</span>firstChild<span class=\"k\">.</span>nodeValue<span class=\"k\">]</span> <span class=\"k\">=</span> row<span class=\"k\">.</span>getElementsByTagName<span class=\"k\">(</span><span class=\"s\">'DATA-ITEM'</span><span class=\"k\">)[</span>j<span class=\"k\">].</span>firstChild<span class=\"k\">.</span>nodeValue<span class=\"k\">;</span>","\t\t\t\t<span class=\"k\">}</span>","\t\t\t<span class=\"k\">}</span>","\t\t\t","\t\t\t<span class=\"k\">return</span> oResults<span class=\"k\">;</span> <span class=\"c\">//comment</span>","\t\t<span class=\"k\">}</span><span class=\"k\">,</span>","\t\t<span class=\"c\">/*</span>","<span class=\"c\">\t\t@method parseXML</span>","<span class=\"c\">\t\t@description Utility function to convert data from plain text/xml into XML document object</span>","<span class=\"c\">\t\t*/</span>","\t\tparseXML<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>sText<span class=\"k\">)</span><span class=\"k\">{</span>","\t\t\t<span class=\"k\">var</span> xmlDoc<span class=\"k\">,</span>parser<span class=\"k\">;</span>","\t\t\t<span class=\"k\">try</span> <span class=\"k\">{</span> <span class=\"c\">//Firefox, Mozilla, Opera, etc.</span>","\t\t\t\t  parser<span class=\"k\">=</span><span class=\"k\">new</span> DOMParser<span class=\"k\">();</span>","\t\t\t\t  xmlDoc<span class=\"k\">=</span>parser<span class=\"k\">.</span>parseFromString<span class=\"k\">(</span>sText<span class=\"k\">,</span><span class=\"s\">\"text/xml\"</span><span class=\"k\">);</span>","\t\t\t\t  <span class=\"k\">return</span> xmlDoc<span class=\"k\">;</span>","\t\t\t<span class=\"k\">}</span>","\t\t\t<span class=\"k\">catch</span><span class=\"k\">(</span>e<span class=\"k\">)</span><span class=\"k\">{</span>","\t\t\t\t<span class=\"k\">try</span> <span class=\"k\">{</span> <span class=\"c\">//Internet Explorer</span>","\t\t\t\t  xmlDoc<span class=\"k\">=</span><span class=\"k\">new</span> ActiveXObject<span class=\"k\">(</span><span class=\"s\">\"Microsoft.XMLDOM\"</span><span class=\"k\">);</span>","\t\t\t\t  xmlDoc<span class=\"k\">.</span>async<span class=\"k\">=</span><span class=\"s\">\"false\"</span><span class=\"k\">;</span>","\t\t\t\t  xmlDoc<span class=\"k\">.</span>loadXML<span class=\"k\">(</span>sText<span class=\"k\">);</span>","\t\t\t\t  <span class=\"k\">return</span> xmlDoc<span class=\"k\">;</span>","\t\t\t\t<span class=\"k\">}</span> <span class=\"k\">catch</span><span class=\"k\">(</span>e<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t  \talert<span class=\"k\">(</span><span class=\"s\">\"parseXML Error\"</span> <span class=\"k\">+</span> e<span class=\"k\">.</span>message<span class=\"k\">);</span>","\t\t\t\t  \t<span class=\"k\">return</span> <span class=\"k\">false</span><span class=\"k\">;</span>","\t\t\t\t  <span class=\"k\">}</span>","\t\t\t<span class=\"k\">}</span>","\t\t<span class=\"k\">}</span> <span class=\"c\">//end parseXML</span>","\t\t","\t<span class=\"k\">}</span>  <span class=\"c\">//end pentaho.xhr</span>"];
_$jscoverage['dataapi/xhr.js'][7]++;
pentaho = (((typeof pentaho) == "undefined")? {}: pentaho);
_$jscoverage['dataapi/xhr.js'][8]++;
pentaho.xhr = {execute: (function (url, oConfig) {
  _$jscoverage['dataapi/xhr.js'][14]++;
  var parms = "";
  _$jscoverage['dataapi/xhr.js'][15]++;
  for (parm in oConfig.data) {
    _$jscoverage['dataapi/xhr.js'][16]++;
    parms += ("&" + parm + "=" + oConfig.data[parm]);
}
  _$jscoverage['dataapi/xhr.js'][18]++;
  function func(response) {
    _$jscoverage['dataapi/xhr.js'][20]++;
    var myxml = pentaho.xhr.parseXML(response);
    _$jscoverage['dataapi/xhr.js'][21]++;
    oConfig.complete(myxml);
}
  _$jscoverage['dataapi/xhr.js'][22]++;
  ;
  _$jscoverage['dataapi/xhr.js'][25]++;
  var response = pentahoGet(url, parms);
  _$jscoverage['dataapi/xhr.js'][26]++;
  oConfig.complete(response);
}), SOAP2JS: (function (oXML) {
  _$jscoverage['dataapi/xhr.js'][36]++;
  var rows = oXML.getElementsByTagName("DATA-ROW");
  _$jscoverage['dataapi/xhr.js'][37]++;
  var cols = oXML.getElementsByTagName("COLUMN-HDR-ITEM");
  _$jscoverage['dataapi/xhr.js'][38]++;
  var oResults = {};
  _$jscoverage['dataapi/xhr.js'][39]++;
  oResults.results = [];
  _$jscoverage['dataapi/xhr.js'][40]++;
  for (var i = 0; (i < rows.length); (i++)) {
    _$jscoverage['dataapi/xhr.js'][41]++;
    row = oXML.getElementsByTagName("DATA-ROW")[i];
    _$jscoverage['dataapi/xhr.js'][42]++;
    oResults.results[i] = {};
    _$jscoverage['dataapi/xhr.js'][43]++;
    for (var j = 0; (j < cols.length); (j++)) {
      _$jscoverage['dataapi/xhr.js'][45]++;
      oResults.results[i][oXML.getElementsByTagName("COLUMN-HDR-ITEM")[j].firstChild.nodeValue] = row.getElementsByTagName("DATA-ITEM")[j].firstChild.nodeValue;
}
}
  _$jscoverage['dataapi/xhr.js'][49]++;
  return oResults;
}), parseXML: (function (sText) {
  _$jscoverage['dataapi/xhr.js'][56]++;
  var xmlDoc, parser;
  _$jscoverage['dataapi/xhr.js'][57]++;
  try {
    _$jscoverage['dataapi/xhr.js'][58]++;
    parser = new DOMParser();
    _$jscoverage['dataapi/xhr.js'][59]++;
    xmlDoc = parser.parseFromString(sText, "text/xml");
    _$jscoverage['dataapi/xhr.js'][60]++;
    return xmlDoc;
  }
  catch (e) {
    _$jscoverage['dataapi/xhr.js'][63]++;
    try {
      _$jscoverage['dataapi/xhr.js'][64]++;
      xmlDoc = new ActiveXObject("Microsoft.XMLDOM");
      _$jscoverage['dataapi/xhr.js'][65]++;
      xmlDoc.async = "false";
      _$jscoverage['dataapi/xhr.js'][66]++;
      xmlDoc.loadXML(sText);
      _$jscoverage['dataapi/xhr.js'][67]++;
      return xmlDoc;
    }
    catch (e) {
      _$jscoverage['dataapi/xhr.js'][69]++;
      alert(("parseXML Error" + e.message));
      _$jscoverage['dataapi/xhr.js'][70]++;
      return false;
    }
  }
})};
