/* automatically generated by JSCoverage - do not edit */
try {
  if (typeof top === 'object' && top !== null && typeof top.opener === 'object' && top.opener !== null) {
    // this is a browser window that was opened from another window

    if (! top.opener._$jscoverage) {
      top.opener._$jscoverage = {};
    }
  }
}
catch (e) {}

try {
  if (typeof top === 'object' && top !== null) {
    // this is a browser window

    try {
      if (typeof top.opener === 'object' && top.opener !== null && top.opener._$jscoverage) {
        top._$jscoverage = top.opener._$jscoverage;
      }
    }
    catch (e) {}

    if (! top._$jscoverage) {
      top._$jscoverage = {};
    }
  }
}
catch (e) {}

try {
  if (typeof top === 'object' && top !== null && top._$jscoverage) {
    _$jscoverage = top._$jscoverage;
  }
}
catch (e) {}
if (typeof _$jscoverage !== 'object') {
  _$jscoverage = {};
}
if (! _$jscoverage['util/PentahoSpinner.js']) {
  _$jscoverage['util/PentahoSpinner.js'] = [];
  _$jscoverage['util/PentahoSpinner.js'][35] = 0;
  _$jscoverage['util/PentahoSpinner.js'][37] = 0;
  _$jscoverage['util/PentahoSpinner.js'][41] = 0;
  _$jscoverage['util/PentahoSpinner.js'][62] = 0;
  _$jscoverage['util/PentahoSpinner.js'][83] = 0;
  _$jscoverage['util/PentahoSpinner.js'][104] = 0;
}
_$jscoverage['util/PentahoSpinner.js'].source = ["<span class=\"c\">/*!</span>","<span class=\"c\"> * The Pentaho proprietary code is licensed under the terms and conditions of</span>","<span class=\"c\"> * the software license agreement entered into between the entity licensing such</span>","<span class=\"c\"> * code and Pentaho Corporation.</span>","<span class=\"c\"> */</span>","","","<span class=\"c\">/**</span>","<span class=\"c\">  Example Usage:</span>","","<span class=\"c\">    pen.require(['common-ui/util/PentahoSpinner'], function(spin) {</span>","<span class=\"c\">      var config = spin.getMediumConfig();</span>","","<span class=\"c\">      // override the color</span>","<span class=\"c\">      config.color = \"#555\";</span>","","<span class=\"c\">      // override the starting top location</span>","<span class=\"c\">      config.top = \"-8px\"</span>","","<span class=\"c\">      // spin.js's Spinner object has been included for us by the pen.require call to PentahoSpinner above</span>","<span class=\"c\">      var spinner = new Spinner(config);</span>","","<span class=\"c\">      // show the spinner in your div</span>","<span class=\"c\">      spinner.spin(dojo.byId(\"yourDivElementId\"));</span>","","<span class=\"c\">      ...</span>","","","<span class=\"c\">      // hide the spinner</span>","<span class=\"c\">      spinner.stop();</span>","","<span class=\"c\">    });</span>","<span class=\"c\">*/</span>","","pen<span class=\"k\">.</span>define<span class=\"k\">([</span><span class=\"s\">'common-ui/util/spin.min'</span><span class=\"k\">],</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","","  <span class=\"k\">var</span> local <span class=\"k\">=</span> <span class=\"k\">{</span>","","    <span class=\"c\">/* 16x16 */</span>","    getSmallConfig<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","      <span class=\"k\">return</span> <span class=\"k\">{</span>","        lines<span class=\"k\">:</span> <span class=\"s\">9</span><span class=\"k\">,</span> <span class=\"c\">// The number of lines to draw</span>","        length<span class=\"k\">:</span> <span class=\"s\">3</span><span class=\"k\">,</span> <span class=\"c\">// The length of each line</span>","        width<span class=\"k\">:</span> <span class=\"s\">2</span><span class=\"k\">,</span> <span class=\"c\">// The line thickness</span>","        radius<span class=\"k\">:</span> <span class=\"s\">3</span><span class=\"k\">,</span> <span class=\"c\">// The radius of the inner circle</span>","        corners<span class=\"k\">:</span> <span class=\"s\">1</span><span class=\"k\">,</span> <span class=\"c\">// Corner roundness (0..1)</span>","        rotate<span class=\"k\">:</span> <span class=\"s\">0</span><span class=\"k\">,</span> <span class=\"c\">// The rotation offset</span>","        color<span class=\"k\">:</span> <span class=\"s\">'#FFF'</span><span class=\"k\">,</span> <span class=\"c\">// #rgb or #rrggbb</span>","        speed<span class=\"k\">:</span> <span class=\"s\">1</span><span class=\"k\">,</span> <span class=\"c\">// Rounds per second</span>","        trail<span class=\"k\">:</span> <span class=\"s\">60</span><span class=\"k\">,</span> <span class=\"c\">// Afterglow percentage</span>","        shadow<span class=\"k\">:</span> <span class=\"k\">false</span><span class=\"k\">,</span> <span class=\"c\">// Whether to render a shadow</span>","        hwaccel<span class=\"k\">:</span> <span class=\"k\">false</span><span class=\"k\">,</span> <span class=\"c\">// Whether to use hardware acceleration</span>","        className<span class=\"k\">:</span> <span class=\"s\">'spinner'</span><span class=\"k\">,</span> <span class=\"c\">// The CSS class to assign to the spinner</span>","        zIndex<span class=\"k\">:</span> <span class=\"s\">2e9</span><span class=\"k\">,</span> <span class=\"c\">// The z-index (defaults to 2000000000)</span>","        top<span class=\"k\">:</span> <span class=\"s\">'auto'</span><span class=\"k\">,</span> <span class=\"c\">// Top position relative to parent in px</span>","        left<span class=\"k\">:</span> <span class=\"s\">'auto'</span> <span class=\"c\">// Left position relative to parent in px</span>","      <span class=\"k\">}</span><span class=\"k\">;</span>","    <span class=\"k\">}</span><span class=\"k\">,</span>","","    <span class=\"c\">/* 32x32 */</span>","    getMediumConfig<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","      <span class=\"k\">return</span> <span class=\"k\">{</span>","        lines<span class=\"k\">:</span> <span class=\"s\">11</span><span class=\"k\">,</span> <span class=\"c\">// The number of lines to draw</span>","        length<span class=\"k\">:</span> <span class=\"s\">7</span><span class=\"k\">,</span> <span class=\"c\">// The length of each line</span>","        width<span class=\"k\">:</span> <span class=\"s\">3</span><span class=\"k\">,</span> <span class=\"c\">// The line thickness</span>","        radius<span class=\"k\">:</span> <span class=\"s\">6</span><span class=\"k\">,</span> <span class=\"c\">// The radius of the inner circle</span>","        corners<span class=\"k\">:</span> <span class=\"s\">1</span><span class=\"k\">,</span> <span class=\"c\">// Corner roundness (0..1)</span>","        rotate<span class=\"k\">:</span> <span class=\"s\">0</span><span class=\"k\">,</span> <span class=\"c\">// The rotation offset</span>","        color<span class=\"k\">:</span> <span class=\"s\">'#FFF'</span><span class=\"k\">,</span> <span class=\"c\">// #rgb or #rrggbb</span>","        speed<span class=\"k\">:</span> <span class=\"s\">1</span><span class=\"k\">,</span> <span class=\"c\">// Rounds per second</span>","        trail<span class=\"k\">:</span> <span class=\"s\">60</span><span class=\"k\">,</span> <span class=\"c\">// Afterglow percentage</span>","        shadow<span class=\"k\">:</span> <span class=\"k\">false</span><span class=\"k\">,</span> <span class=\"c\">// Whether to render a shadow</span>","        hwaccel<span class=\"k\">:</span> <span class=\"k\">false</span><span class=\"k\">,</span> <span class=\"c\">// Whether to use hardware acceleration</span>","        className<span class=\"k\">:</span> <span class=\"s\">'spinner'</span><span class=\"k\">,</span> <span class=\"c\">// The CSS class to assign to the spinner</span>","        zIndex<span class=\"k\">:</span> <span class=\"s\">2e9</span><span class=\"k\">,</span> <span class=\"c\">// The z-index (defaults to 2000000000)</span>","        top<span class=\"k\">:</span> <span class=\"s\">'auto'</span><span class=\"k\">,</span> <span class=\"c\">// Top position relative to parent in px</span>","        left<span class=\"k\">:</span> <span class=\"s\">'auto'</span> <span class=\"c\">// Left position relative to parent in px</span>","      <span class=\"k\">}</span><span class=\"k\">;</span>","    <span class=\"k\">}</span><span class=\"k\">,</span>","","    <span class=\"c\">/* 48x48 */</span>","    getLargeConfig<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","      <span class=\"k\">return</span> <span class=\"k\">{</span>","        lines<span class=\"k\">:</span> <span class=\"s\">13</span><span class=\"k\">,</span> <span class=\"c\">// The number of lines to draw</span>","        length<span class=\"k\">:</span> <span class=\"s\">10</span><span class=\"k\">,</span> <span class=\"c\">// The length of each line</span>","        width<span class=\"k\">:</span> <span class=\"s\">4</span><span class=\"k\">,</span> <span class=\"c\">// The line thickness</span>","        radius<span class=\"k\">:</span> <span class=\"s\">10</span><span class=\"k\">,</span> <span class=\"c\">// The radius of the inner circle</span>","        corners<span class=\"k\">:</span> <span class=\"s\">1</span><span class=\"k\">,</span> <span class=\"c\">// Corner roundness (0..1)</span>","        rotate<span class=\"k\">:</span> <span class=\"s\">0</span><span class=\"k\">,</span> <span class=\"c\">// The rotation offset</span>","        color<span class=\"k\">:</span> <span class=\"s\">'#FFF'</span><span class=\"k\">,</span> <span class=\"c\">// #rgb or #rrggbb</span>","        speed<span class=\"k\">:</span> <span class=\"s\">1</span><span class=\"k\">,</span> <span class=\"c\">// Rounds per second</span>","        trail<span class=\"k\">:</span> <span class=\"s\">60</span><span class=\"k\">,</span> <span class=\"c\">// Afterglow percentage</span>","        shadow<span class=\"k\">:</span> <span class=\"k\">false</span><span class=\"k\">,</span> <span class=\"c\">// Whether to render a shadow</span>","        hwaccel<span class=\"k\">:</span> <span class=\"k\">false</span><span class=\"k\">,</span> <span class=\"c\">// Whether to use hardware acceleration</span>","        className<span class=\"k\">:</span> <span class=\"s\">'spinner'</span><span class=\"k\">,</span> <span class=\"c\">// The CSS class to assign to the spinner</span>","        zIndex<span class=\"k\">:</span> <span class=\"s\">2e9</span><span class=\"k\">,</span> <span class=\"c\">// The z-index (defaults to 2000000000)</span>","        top<span class=\"k\">:</span> <span class=\"s\">'auto'</span><span class=\"k\">,</span> <span class=\"c\">// Top position relative to parent in px</span>","        left<span class=\"k\">:</span> <span class=\"s\">'auto'</span> <span class=\"c\">// Left position relative to parent in px</span>","      <span class=\"k\">}</span><span class=\"k\">;</span>","    <span class=\"k\">}</span>","  <span class=\"k\">}</span><span class=\"k\">;</span>","","","  <span class=\"k\">return</span> local<span class=\"k\">;</span>","","<span class=\"k\">}</span><span class=\"k\">);</span>"];
_$jscoverage['util/PentahoSpinner.js'][35]++;
pen.define(["common-ui/util/spin.min"], (function () {
  _$jscoverage['util/PentahoSpinner.js'][37]++;
  var local = {getSmallConfig: (function () {
  _$jscoverage['util/PentahoSpinner.js'][41]++;
  return ({lines: 9, length: 3, width: 2, radius: 3, corners: 1, rotate: 0, color: "#FFF", speed: 1, trail: 60, shadow: false, hwaccel: false, className: "spinner", zIndex: 2000000000, top: "auto", left: "auto"});
}), getMediumConfig: (function () {
  _$jscoverage['util/PentahoSpinner.js'][62]++;
  return ({lines: 11, length: 7, width: 3, radius: 6, corners: 1, rotate: 0, color: "#FFF", speed: 1, trail: 60, shadow: false, hwaccel: false, className: "spinner", zIndex: 2000000000, top: "auto", left: "auto"});
}), getLargeConfig: (function () {
  _$jscoverage['util/PentahoSpinner.js'][83]++;
  return ({lines: 13, length: 10, width: 4, radius: 10, corners: 1, rotate: 0, color: "#FFF", speed: 1, trail: 60, shadow: false, hwaccel: false, className: "spinner", zIndex: 2000000000, top: "auto", left: "auto"});
})};
  _$jscoverage['util/PentahoSpinner.js'][104]++;
  return local;
}));
