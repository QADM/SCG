/* automatically generated by JSCoverage - do not edit */
try {
  if (typeof top === 'object' && top !== null && typeof top.opener === 'object' && top.opener !== null) {
    // this is a browser window that was opened from another window

    if (! top.opener._$jscoverage) {
      top.opener._$jscoverage = {};
    }
  }
}
catch (e) {}

try {
  if (typeof top === 'object' && top !== null) {
    // this is a browser window

    try {
      if (typeof top.opener === 'object' && top.opener !== null && top.opener._$jscoverage) {
        top._$jscoverage = top.opener._$jscoverage;
      }
    }
    catch (e) {}

    if (! top._$jscoverage) {
      top._$jscoverage = {};
    }
  }
}
catch (e) {}

try {
  if (typeof top === 'object' && top !== null && top._$jscoverage) {
    _$jscoverage = top._$jscoverage;
  }
}
catch (e) {}
if (typeof _$jscoverage !== 'object') {
  _$jscoverage = {};
}
if (! _$jscoverage['vizapi/ccc/sample/sampleVisualization.js']) {
  _$jscoverage['vizapi/ccc/sample/sampleVisualization.js'] = [];
  _$jscoverage['vizapi/ccc/sample/sampleVisualization.js'][1] = 0;
  _$jscoverage['vizapi/ccc/sample/sampleVisualization.js'][3] = 0;
  _$jscoverage['vizapi/ccc/sample/sampleVisualization.js'][55] = 0;
  _$jscoverage['vizapi/ccc/sample/sampleVisualization.js'][57] = 0;
  _$jscoverage['vizapi/ccc/sample/sampleVisualization.js'][58] = 0;
  _$jscoverage['vizapi/ccc/sample/sampleVisualization.js'][59] = 0;
  _$jscoverage['vizapi/ccc/sample/sampleVisualization.js'][60] = 0;
  _$jscoverage['vizapi/ccc/sample/sampleVisualization.js'][61] = 0;
  _$jscoverage['vizapi/ccc/sample/sampleVisualization.js'][62] = 0;
  _$jscoverage['vizapi/ccc/sample/sampleVisualization.js'][65] = 0;
  _$jscoverage['vizapi/ccc/sample/sampleVisualization.js'][66] = 0;
  _$jscoverage['vizapi/ccc/sample/sampleVisualization.js'][67] = 0;
  _$jscoverage['vizapi/ccc/sample/sampleVisualization.js'][70] = 0;
  _$jscoverage['vizapi/ccc/sample/sampleVisualization.js'][71] = 0;
  _$jscoverage['vizapi/ccc/sample/sampleVisualization.js'][72] = 0;
  _$jscoverage['vizapi/ccc/sample/sampleVisualization.js'][73] = 0;
  _$jscoverage['vizapi/ccc/sample/sampleVisualization.js'][74] = 0;
  _$jscoverage['vizapi/ccc/sample/sampleVisualization.js'][76] = 0;
  _$jscoverage['vizapi/ccc/sample/sampleVisualization.js'][77] = 0;
  _$jscoverage['vizapi/ccc/sample/sampleVisualization.js'][79] = 0;
  _$jscoverage['vizapi/ccc/sample/sampleVisualization.js'][80] = 0;
  _$jscoverage['vizapi/ccc/sample/sampleVisualization.js'][82] = 0;
  _$jscoverage['vizapi/ccc/sample/sampleVisualization.js'][84] = 0;
  _$jscoverage['vizapi/ccc/sample/sampleVisualization.js'][85] = 0;
  _$jscoverage['vizapi/ccc/sample/sampleVisualization.js'][87] = 0;
  _$jscoverage['vizapi/ccc/sample/sampleVisualization.js'][89] = 0;
  _$jscoverage['vizapi/ccc/sample/sampleVisualization.js'][90] = 0;
  _$jscoverage['vizapi/ccc/sample/sampleVisualization.js'][91] = 0;
  _$jscoverage['vizapi/ccc/sample/sampleVisualization.js'][93] = 0;
  _$jscoverage['vizapi/ccc/sample/sampleVisualization.js'][94] = 0;
  _$jscoverage['vizapi/ccc/sample/sampleVisualization.js'][99] = 0;
  _$jscoverage['vizapi/ccc/sample/sampleVisualization.js'][100] = 0;
}
_$jscoverage['vizapi/ccc/sample/sampleVisualization.js'].source = ["pen<span class=\"k\">.</span>require<span class=\"k\">([</span><span class=\"s\">\"common-ui/vizapi/VizController\"</span><span class=\"k\">],</span> <span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span>","","  pentaho<span class=\"k\">.</span>visualizations<span class=\"k\">.</span>push<span class=\"k\">(</span><span class=\"k\">{</span>","    id<span class=\"k\">:</span> <span class=\"s\">'sample_calc'</span><span class=\"k\">,</span>                          <span class=\"c\">// unique identifier</span>","    type<span class=\"k\">:</span> <span class=\"s\">'calc'</span><span class=\"k\">,</span>                       <span class=\"c\">// generic type id</span>","    source<span class=\"k\">:</span> <span class=\"s\">'Sample'</span><span class=\"k\">,</span>                          <span class=\"c\">// id of the source library</span>","    name<span class=\"k\">:</span> <span class=\"s\">'Sample Calculation'</span><span class=\"k\">,</span>                     <span class=\"c\">// visible name, this will come from a properties file eventually</span>","    <span class=\"s\">'class'</span><span class=\"k\">:</span> <span class=\"s\">'pentaho.sample.Calc'</span><span class=\"k\">,</span>          <span class=\"c\">// type of the Javascript object to instantiate</span>","    args<span class=\"k\">:</span> <span class=\"k\">{</span>                                 <span class=\"c\">// arguments to provide to the Javascript object</span>","","    <span class=\"k\">}</span><span class=\"k\">,</span>","    propMap<span class=\"k\">:</span> <span class=\"k\">[],</span>","    dataReqs<span class=\"k\">:</span> <span class=\"k\">[</span>                             <span class=\"c\">// dataReqs describes the data requirements of this visualization</span>","      <span class=\"k\">{</span>","        name<span class=\"k\">:</span> <span class=\"s\">'Default'</span><span class=\"k\">,</span>","        reqs <span class=\"k\">:</span>","            <span class=\"k\">[</span>","              <span class=\"k\">{</span>","                id<span class=\"k\">:</span> <span class=\"s\">'rows'</span><span class=\"k\">,</span>             <span class=\"c\">// id of the data element</span>","                dataType<span class=\"k\">:</span> <span class=\"s\">'string'</span><span class=\"k\">,</span>         <span class=\"c\">// data type - 'string', 'number', 'date', 'boolean', 'any' or a comma separated list</span>","                dataStructure<span class=\"k\">:</span> <span class=\"s\">'column'</span><span class=\"k\">,</span>    <span class=\"c\">// 'column' or 'row' - only 'column' supported so far</span>","                caption<span class=\"k\">:</span> <span class=\"s\">'Level'</span><span class=\"k\">,</span>        <span class=\"c\">// visible name</span>","                required<span class=\"k\">:</span> <span class=\"k\">true</span><span class=\"k\">,</span>              <span class=\"c\">// true or false</span>","                allowMultiple<span class=\"k\">:</span> <span class=\"k\">false</span><span class=\"k\">,</span>","                ui<span class=\"k\">:</span> <span class=\"k\">{</span>","                  group<span class=\"k\">:</span> <span class=\"s\">\"data\"</span>","                <span class=\"k\">}</span>","              <span class=\"k\">}</span><span class=\"k\">,</span>","              <span class=\"k\">{</span>   id<span class=\"k\">:</span> <span class=\"s\">'measures'</span><span class=\"k\">,</span>","                dataType<span class=\"k\">:</span> <span class=\"s\">'number'</span><span class=\"k\">,</span>","                dataStructure<span class=\"k\">:</span> <span class=\"s\">'column'</span><span class=\"k\">,</span>","                caption<span class=\"k\">:</span> <span class=\"s\">'Measure'</span><span class=\"k\">,</span>","                required<span class=\"k\">:</span> <span class=\"k\">true</span><span class=\"k\">,</span>","                allowMultiple<span class=\"k\">:</span> <span class=\"k\">false</span><span class=\"k\">,</span>","                ui<span class=\"k\">:</span> <span class=\"k\">{</span>","                  group<span class=\"k\">:</span> <span class=\"s\">\"data\"</span>","                <span class=\"k\">}</span>","              <span class=\"k\">}</span><span class=\"k\">,</span>","              <span class=\"k\">{</span>","                id<span class=\"k\">:</span> <span class=\"s\">'calc'</span><span class=\"k\">,</span>","                dataType<span class=\"k\">:</span> <span class=\"s\">'string'</span><span class=\"k\">,</span>","                values<span class=\"k\">:</span> <span class=\"k\">[</span><span class=\"s\">\"MIN\"</span><span class=\"k\">,</span> <span class=\"s\">\"MAX\"</span><span class=\"k\">,</span> <span class=\"s\">\"AVG\"</span><span class=\"k\">],</span>","                ui<span class=\"k\">:</span> <span class=\"k\">{</span>","                  labels<span class=\"k\">:</span> <span class=\"k\">[</span><span class=\"s\">\"Minimum\"</span><span class=\"k\">,</span> <span class=\"s\">\"Maximum\"</span><span class=\"k\">,</span> <span class=\"s\">\"Average\"</span><span class=\"k\">],</span>","                  group<span class=\"k\">:</span> <span class=\"s\">\"options\"</span><span class=\"k\">,</span>","                  type<span class=\"k\">:</span> <span class=\"s\">'combo'</span><span class=\"k\">,</span>","                  caption<span class=\"k\">:</span> <span class=\"s\">\"Calculation\"</span>","                <span class=\"k\">}</span>","              <span class=\"k\">}</span>","            <span class=\"k\">]</span>","      <span class=\"k\">}</span>","    <span class=\"k\">]</span>","  <span class=\"k\">}</span><span class=\"k\">);</span>","","  pentaho<span class=\"k\">.</span>sample <span class=\"k\">=</span> <span class=\"k\">{}</span>","","  pentaho<span class=\"k\">.</span>sample<span class=\"k\">.</span>Calc <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span>canvasElement<span class=\"k\">)</span><span class=\"k\">{</span>","    <span class=\"k\">this</span><span class=\"k\">.</span>canvasElement <span class=\"k\">=</span> canvasElement<span class=\"k\">;</span>","    <span class=\"k\">this</span><span class=\"k\">.</span>numSpan <span class=\"k\">=</span> document<span class=\"k\">.</span>createElement<span class=\"k\">(</span><span class=\"s\">\"span\"</span><span class=\"k\">);</span>","    <span class=\"k\">this</span><span class=\"k\">.</span>numSpan<span class=\"k\">.</span>style<span class=\"k\">.</span>fontSize <span class=\"k\">=</span> <span class=\"s\">\"42px\"</span><span class=\"k\">;</span>","    <span class=\"k\">this</span><span class=\"k\">.</span>numSpan<span class=\"k\">.</span>style<span class=\"k\">.</span>position <span class=\"k\">=</span> <span class=\"s\">\"relative\"</span><span class=\"k\">;</span>","    <span class=\"k\">this</span><span class=\"k\">.</span>canvasElement<span class=\"k\">.</span>appendChild<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>numSpan<span class=\"k\">);</span>","","  <span class=\"k\">}</span>","  pentaho<span class=\"k\">.</span>sample<span class=\"k\">.</span>Calc<span class=\"k\">.</span>prototype<span class=\"k\">.</span>resize <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span>width<span class=\"k\">,</span> height<span class=\"k\">)</span><span class=\"k\">{</span>","    <span class=\"k\">this</span><span class=\"k\">.</span>numSpan<span class=\"k\">.</span>style<span class=\"k\">.</span>left <span class=\"k\">=</span> <span class=\"k\">((</span><span class=\"k\">this</span><span class=\"k\">.</span>canvasElement<span class=\"k\">.</span>offsetWidth <span class=\"k\">-</span> <span class=\"k\">this</span><span class=\"k\">.</span>numSpan<span class=\"k\">.</span>offsetWidth<span class=\"k\">)</span> <span class=\"k\">/</span> <span class=\"s\">2</span><span class=\"k\">)</span> <span class=\"k\">+</span> <span class=\"s\">\"px\"</span>","    <span class=\"k\">this</span><span class=\"k\">.</span>numSpan<span class=\"k\">.</span>style<span class=\"k\">.</span>top <span class=\"k\">=</span> <span class=\"k\">((</span><span class=\"k\">this</span><span class=\"k\">.</span>canvasElement<span class=\"k\">.</span>offsetHeight <span class=\"k\">-</span> <span class=\"k\">this</span><span class=\"k\">.</span>numSpan<span class=\"k\">.</span>offsetHeight<span class=\"k\">)</span> <span class=\"k\">/</span> <span class=\"s\">2</span><span class=\"k\">)</span> <span class=\"k\">+</span> <span class=\"s\">\"px\"</span>","  <span class=\"k\">}</span><span class=\"k\">;</span>","","  pentaho<span class=\"k\">.</span>sample<span class=\"k\">.</span>Calc<span class=\"k\">.</span>prototype<span class=\"k\">.</span>draw <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span>datView<span class=\"k\">,</span> vizOptions<span class=\"k\">)</span> <span class=\"k\">{</span>","    <span class=\"k\">var</span> rows <span class=\"k\">=</span> datView<span class=\"k\">.</span>dataTable<span class=\"k\">.</span>jsonTable<span class=\"k\">.</span>rows<span class=\"k\">;</span>","    <span class=\"k\">var</span> dataArray <span class=\"k\">=</span> <span class=\"k\">[];</span>","    <span class=\"k\">for</span><span class=\"k\">(</span><span class=\"k\">var</span> i<span class=\"k\">=</span><span class=\"s\">0</span><span class=\"k\">;</span> i<span class=\"k\">&lt;</span>rows<span class=\"k\">.</span>length<span class=\"k\">;</span> i<span class=\"k\">++)</span><span class=\"k\">{</span>","      dataArray<span class=\"k\">.</span>push<span class=\"k\">(</span>rows<span class=\"k\">[</span>i<span class=\"k\">].</span>c<span class=\"k\">[</span><span class=\"s\">1</span><span class=\"k\">].</span>v<span class=\"k\">);</span>","    <span class=\"k\">}</span>","    <span class=\"k\">var</span> value <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span>","    <span class=\"k\">switch</span><span class=\"k\">(</span>vizOptions<span class=\"k\">.</span>calc<span class=\"k\">)</span><span class=\"k\">{</span>","      <span class=\"k\">case</span> <span class=\"s\">\"MAX\"</span><span class=\"k\">:</span>","        <span class=\"k\">for</span><span class=\"k\">(</span><span class=\"k\">var</span> i<span class=\"k\">=</span><span class=\"s\">0</span><span class=\"k\">;</span> i<span class=\"k\">&lt;</span> dataArray<span class=\"k\">.</span>length<span class=\"k\">;</span> i<span class=\"k\">++)</span><span class=\"k\">{</span>","          value <span class=\"k\">=</span> Math<span class=\"k\">.</span>max<span class=\"k\">(</span>value<span class=\"k\">,</span> dataArray<span class=\"k\">[</span>i<span class=\"k\">]);</span>","        <span class=\"k\">}</span>","        <span class=\"k\">break</span><span class=\"k\">;</span>","      <span class=\"k\">case</span> <span class=\"s\">\"MIN\"</span><span class=\"k\">:</span>","        <span class=\"k\">for</span><span class=\"k\">(</span><span class=\"k\">var</span> i<span class=\"k\">=</span><span class=\"s\">0</span><span class=\"k\">;</span> i<span class=\"k\">&lt;</span> dataArray<span class=\"k\">.</span>length<span class=\"k\">;</span> i<span class=\"k\">++)</span><span class=\"k\">{</span>","          value <span class=\"k\">=</span> Math<span class=\"k\">.</span>min<span class=\"k\">(</span>value<span class=\"k\">,</span> dataArray<span class=\"k\">[</span>i<span class=\"k\">]);</span>","        <span class=\"k\">}</span>","        <span class=\"k\">break</span><span class=\"k\">;</span>","      <span class=\"k\">case</span> <span class=\"s\">\"AVG\"</span><span class=\"k\">:</span>","        <span class=\"k\">var</span> total <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span>","        <span class=\"k\">for</span><span class=\"k\">(</span><span class=\"k\">var</span> i<span class=\"k\">=</span><span class=\"s\">0</span><span class=\"k\">;</span> i<span class=\"k\">&lt;</span> dataArray<span class=\"k\">.</span>length<span class=\"k\">;</span> i<span class=\"k\">++)</span><span class=\"k\">{</span>","          total <span class=\"k\">+=</span> dataArray<span class=\"k\">[</span>i<span class=\"k\">];</span>","        <span class=\"k\">}</span>","        value <span class=\"k\">=</span> total <span class=\"k\">/</span> dataArray<span class=\"k\">.</span>length<span class=\"k\">;</span>","        <span class=\"k\">break</span><span class=\"k\">;</span>","      <span class=\"k\">default</span><span class=\"k\">:</span>","","    <span class=\"k\">}</span>","","    <span class=\"k\">this</span><span class=\"k\">.</span>numSpan<span class=\"k\">.</span>innerHTML <span class=\"k\">=</span> value<span class=\"k\">;</span>","    <span class=\"k\">this</span><span class=\"k\">.</span>resize<span class=\"k\">();</span>","  <span class=\"k\">}</span>","<span class=\"k\">}</span><span class=\"k\">);</span>"];
_$jscoverage['vizapi/ccc/sample/sampleVisualization.js'][1]++;
pen.require(["common-ui/vizapi/VizController"], (function () {
  _$jscoverage['vizapi/ccc/sample/sampleVisualization.js'][3]++;
  pentaho.visualizations.push({id: "sample_calc", type: "calc", source: "Sample", name: "Sample Calculation", "class": "pentaho.sample.Calc", args: {}, propMap: [], dataReqs: [{name: "Default", reqs: [{id: "rows", dataType: "string", dataStructure: "column", caption: "Level", required: true, allowMultiple: false, ui: {group: "data"}}, {id: "measures", dataType: "number", dataStructure: "column", caption: "Measure", required: true, allowMultiple: false, ui: {group: "data"}}, {id: "calc", dataType: "string", values: ["MIN", "MAX", "AVG"], ui: {labels: ["Minimum", "Maximum", "Average"], group: "options", type: "combo", caption: "Calculation"}}]}]});
  _$jscoverage['vizapi/ccc/sample/sampleVisualization.js'][55]++;
  pentaho.sample = {};
  _$jscoverage['vizapi/ccc/sample/sampleVisualization.js'][57]++;
  pentaho.sample.Calc = (function (canvasElement) {
  _$jscoverage['vizapi/ccc/sample/sampleVisualization.js'][58]++;
  this.canvasElement = canvasElement;
  _$jscoverage['vizapi/ccc/sample/sampleVisualization.js'][59]++;
  this.numSpan = document.createElement("span");
  _$jscoverage['vizapi/ccc/sample/sampleVisualization.js'][60]++;
  this.numSpan.style.fontSize = "42px";
  _$jscoverage['vizapi/ccc/sample/sampleVisualization.js'][61]++;
  this.numSpan.style.position = "relative";
  _$jscoverage['vizapi/ccc/sample/sampleVisualization.js'][62]++;
  this.canvasElement.appendChild(this.numSpan);
});
  _$jscoverage['vizapi/ccc/sample/sampleVisualization.js'][65]++;
  pentaho.sample.Calc.prototype.resize = (function (width, height) {
  _$jscoverage['vizapi/ccc/sample/sampleVisualization.js'][66]++;
  this.numSpan.style.left = (((this.canvasElement.offsetWidth - this.numSpan.offsetWidth) / 2) + "px");
  _$jscoverage['vizapi/ccc/sample/sampleVisualization.js'][67]++;
  this.numSpan.style.top = (((this.canvasElement.offsetHeight - this.numSpan.offsetHeight) / 2) + "px");
});
  _$jscoverage['vizapi/ccc/sample/sampleVisualization.js'][70]++;
  pentaho.sample.Calc.prototype.draw = (function (datView, vizOptions) {
  _$jscoverage['vizapi/ccc/sample/sampleVisualization.js'][71]++;
  var rows = datView.dataTable.jsonTable.rows;
  _$jscoverage['vizapi/ccc/sample/sampleVisualization.js'][72]++;
  var dataArray = [];
  _$jscoverage['vizapi/ccc/sample/sampleVisualization.js'][73]++;
  for (var i = 0; (i < rows.length); (i++)) {
    _$jscoverage['vizapi/ccc/sample/sampleVisualization.js'][74]++;
    dataArray.push(rows[i].c[1].v);
}
  _$jscoverage['vizapi/ccc/sample/sampleVisualization.js'][76]++;
  var value = 0;
  _$jscoverage['vizapi/ccc/sample/sampleVisualization.js'][77]++;
  switch (vizOptions.calc) {
  case "MAX":
    _$jscoverage['vizapi/ccc/sample/sampleVisualization.js'][79]++;
    for (var i = 0; (i < dataArray.length); (i++)) {
      _$jscoverage['vizapi/ccc/sample/sampleVisualization.js'][80]++;
      value = Math.max(value, dataArray[i]);
}
    _$jscoverage['vizapi/ccc/sample/sampleVisualization.js'][82]++;
    break;
  case "MIN":
    _$jscoverage['vizapi/ccc/sample/sampleVisualization.js'][84]++;
    for (var i = 0; (i < dataArray.length); (i++)) {
      _$jscoverage['vizapi/ccc/sample/sampleVisualization.js'][85]++;
      value = Math.min(value, dataArray[i]);
}
    _$jscoverage['vizapi/ccc/sample/sampleVisualization.js'][87]++;
    break;
  case "AVG":
    _$jscoverage['vizapi/ccc/sample/sampleVisualization.js'][89]++;
    var total = 0;
    _$jscoverage['vizapi/ccc/sample/sampleVisualization.js'][90]++;
    for (var i = 0; (i < dataArray.length); (i++)) {
      _$jscoverage['vizapi/ccc/sample/sampleVisualization.js'][91]++;
      total += dataArray[i];
}
    _$jscoverage['vizapi/ccc/sample/sampleVisualization.js'][93]++;
    value = (total / dataArray.length);
    _$jscoverage['vizapi/ccc/sample/sampleVisualization.js'][94]++;
    break;
  default:
  }
  _$jscoverage['vizapi/ccc/sample/sampleVisualization.js'][99]++;
  this.numSpan.innerHTML = value;
  _$jscoverage['vizapi/ccc/sample/sampleVisualization.js'][100]++;
  this.resize();
});
}));
