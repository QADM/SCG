/* automatically generated by JSCoverage - do not edit */
try {
  if (typeof top === 'object' && top !== null && typeof top.opener === 'object' && top.opener !== null) {
    // this is a browser window that was opened from another window

    if (! top.opener._$jscoverage) {
      top.opener._$jscoverage = {};
    }
  }
}
catch (e) {}

try {
  if (typeof top === 'object' && top !== null) {
    // this is a browser window

    try {
      if (typeof top.opener === 'object' && top.opener !== null && top.opener._$jscoverage) {
        top._$jscoverage = top.opener._$jscoverage;
      }
    }
    catch (e) {}

    if (! top._$jscoverage) {
      top._$jscoverage = {};
    }
  }
}
catch (e) {}

try {
  if (typeof top === 'object' && top !== null && top._$jscoverage) {
    _$jscoverage = top._$jscoverage;
  }
}
catch (e) {}
if (typeof _$jscoverage !== 'object') {
  _$jscoverage = {};
}
if (! _$jscoverage['util/spin.min.js']) {
  _$jscoverage['util/spin.min.js'] = [];
  _$jscoverage['util/spin.min.js'][8] = 0;
}
_$jscoverage['util/spin.min.js'].source = ["<span class=\"c\">//fgnass.github.com/spin.js#v1.2.6</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * Copyright (c) 2011 Felix Gnass [fgnass at neteye dot de]</span>","<span class=\"c\"> * Licensed under the MIT license</span>","<span class=\"c\"> */</span>","","<span class=\"k\">!</span><span class=\"k\">function</span><span class=\"k\">(</span>e<span class=\"k\">,</span>t<span class=\"k\">,</span>n<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">function</span> o<span class=\"k\">(</span>e<span class=\"k\">,</span>n<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">var</span> r<span class=\"k\">=</span>t<span class=\"k\">.</span>createElement<span class=\"k\">(</span>e<span class=\"k\">||</span><span class=\"s\">\"div\"</span><span class=\"k\">),</span>i<span class=\"k\">;</span><span class=\"k\">for</span><span class=\"k\">(</span>i <span class=\"k\">in</span> n<span class=\"k\">)</span>r<span class=\"k\">[</span>i<span class=\"k\">]=</span>n<span class=\"k\">[</span>i<span class=\"k\">];</span><span class=\"k\">return</span> r<span class=\"k\">}</span><span class=\"k\">function</span> u<span class=\"k\">(</span>e<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">for</span><span class=\"k\">(</span><span class=\"k\">var</span> t<span class=\"k\">=</span><span class=\"s\">1</span><span class=\"k\">,</span>n<span class=\"k\">=</span>arguments<span class=\"k\">.</span>length<span class=\"k\">;</span>t<span class=\"k\">&lt;</span>n<span class=\"k\">;</span>t<span class=\"k\">++)</span>e<span class=\"k\">.</span>appendChild<span class=\"k\">(</span>arguments<span class=\"k\">[</span>t<span class=\"k\">]);</span><span class=\"k\">return</span> e<span class=\"k\">}</span><span class=\"k\">function</span> f<span class=\"k\">(</span>e<span class=\"k\">,</span>t<span class=\"k\">,</span>n<span class=\"k\">,</span>r<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">var</span> o<span class=\"k\">=[</span><span class=\"s\">\"opacity\"</span><span class=\"k\">,</span>t<span class=\"k\">,~~(</span>e<span class=\"k\">*</span><span class=\"s\">100</span><span class=\"k\">),</span>n<span class=\"k\">,</span>r<span class=\"k\">].</span>join<span class=\"k\">(</span><span class=\"s\">\"-\"</span><span class=\"k\">),</span>u<span class=\"k\">=</span><span class=\"s\">.01</span><span class=\"k\">+</span>n<span class=\"k\">/</span>r<span class=\"k\">*</span><span class=\"s\">100</span><span class=\"k\">,</span>f<span class=\"k\">=</span>Math<span class=\"k\">.</span>max<span class=\"k\">(</span><span class=\"s\">1</span><span class=\"k\">-(</span><span class=\"s\">1</span><span class=\"k\">-</span>e<span class=\"k\">)/</span>t<span class=\"k\">*(</span><span class=\"s\">100</span><span class=\"k\">-</span>u<span class=\"k\">),</span>e<span class=\"k\">),</span>l<span class=\"k\">=</span>s<span class=\"k\">.</span>substring<span class=\"k\">(</span><span class=\"s\">0</span><span class=\"k\">,</span>s<span class=\"k\">.</span>indexOf<span class=\"k\">(</span><span class=\"s\">\"Animation\"</span><span class=\"k\">)).</span>toLowerCase<span class=\"k\">(),</span>c<span class=\"k\">=</span>l<span class=\"k\">&amp;&amp;</span><span class=\"s\">\"-\"</span><span class=\"k\">+</span>l<span class=\"k\">+</span><span class=\"s\">\"-\"</span><span class=\"k\">||</span><span class=\"s\">\"\"</span><span class=\"k\">;</span><span class=\"k\">return</span> i<span class=\"k\">[</span>o<span class=\"k\">]||(</span>a<span class=\"k\">.</span>insertRule<span class=\"k\">(</span><span class=\"s\">\"@\"</span><span class=\"k\">+</span>c<span class=\"k\">+</span><span class=\"s\">\"keyframes \"</span><span class=\"k\">+</span>o<span class=\"k\">+</span><span class=\"s\">\"{\"</span><span class=\"k\">+</span><span class=\"s\">\"0%{opacity:\"</span><span class=\"k\">+</span>f<span class=\"k\">+</span><span class=\"s\">\"}\"</span><span class=\"k\">+</span>u<span class=\"k\">+</span><span class=\"s\">\"%{opacity:\"</span><span class=\"k\">+</span>e<span class=\"k\">+</span><span class=\"s\">\"}\"</span><span class=\"k\">+(</span>u<span class=\"k\">+</span><span class=\"s\">.01</span><span class=\"k\">)+</span><span class=\"s\">\"%{opacity:1}\"</span><span class=\"k\">+(</span>u<span class=\"k\">+</span>t<span class=\"k\">)%</span><span class=\"s\">100</span><span class=\"k\">+</span><span class=\"s\">\"%{opacity:\"</span><span class=\"k\">+</span>e<span class=\"k\">+</span><span class=\"s\">\"}\"</span><span class=\"k\">+</span><span class=\"s\">\"100%{opacity:\"</span><span class=\"k\">+</span>f<span class=\"k\">+</span><span class=\"s\">\"}\"</span><span class=\"k\">+</span><span class=\"s\">\"}\"</span><span class=\"k\">,</span>a<span class=\"k\">.</span>cssRules<span class=\"k\">.</span>length<span class=\"k\">),</span>i<span class=\"k\">[</span>o<span class=\"k\">]=</span><span class=\"s\">1</span><span class=\"k\">),</span>o<span class=\"k\">}</span><span class=\"k\">function</span> l<span class=\"k\">(</span>e<span class=\"k\">,</span>t<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">var</span> i<span class=\"k\">=</span>e<span class=\"k\">.</span>style<span class=\"k\">,</span>s<span class=\"k\">,</span>o<span class=\"k\">;</span><span class=\"k\">if</span><span class=\"k\">(</span>i<span class=\"k\">[</span>t<span class=\"k\">]!==</span>n<span class=\"k\">)</span><span class=\"k\">return</span> t<span class=\"k\">;</span>t<span class=\"k\">=</span>t<span class=\"k\">.</span>charAt<span class=\"k\">(</span><span class=\"s\">0</span><span class=\"k\">).</span>toUpperCase<span class=\"k\">()+</span>t<span class=\"k\">.</span>slice<span class=\"k\">(</span><span class=\"s\">1</span><span class=\"k\">);</span><span class=\"k\">for</span><span class=\"k\">(</span>o<span class=\"k\">=</span><span class=\"s\">0</span><span class=\"k\">;</span>o<span class=\"k\">&lt;</span>r<span class=\"k\">.</span>length<span class=\"k\">;</span>o<span class=\"k\">++)</span><span class=\"k\">{</span>s<span class=\"k\">=</span>r<span class=\"k\">[</span>o<span class=\"k\">]+</span>t<span class=\"k\">;</span><span class=\"k\">if</span><span class=\"k\">(</span>i<span class=\"k\">[</span>s<span class=\"k\">]!==</span>n<span class=\"k\">)</span><span class=\"k\">return</span> s<span class=\"k\">}}</span><span class=\"k\">function</span> c<span class=\"k\">(</span>e<span class=\"k\">,</span>t<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">for</span><span class=\"k\">(</span><span class=\"k\">var</span> n <span class=\"k\">in</span> t<span class=\"k\">)</span>e<span class=\"k\">.</span>style<span class=\"k\">[</span>l<span class=\"k\">(</span>e<span class=\"k\">,</span>n<span class=\"k\">)||</span>n<span class=\"k\">]=</span>t<span class=\"k\">[</span>n<span class=\"k\">];</span><span class=\"k\">return</span> e<span class=\"k\">}</span><span class=\"k\">function</span> h<span class=\"k\">(</span>e<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">for</span><span class=\"k\">(</span><span class=\"k\">var</span> t<span class=\"k\">=</span><span class=\"s\">1</span><span class=\"k\">;</span>t<span class=\"k\">&lt;</span>arguments<span class=\"k\">.</span>length<span class=\"k\">;</span>t<span class=\"k\">++)</span><span class=\"k\">{</span><span class=\"k\">var</span> r<span class=\"k\">=</span>arguments<span class=\"k\">[</span>t<span class=\"k\">];</span><span class=\"k\">for</span><span class=\"k\">(</span><span class=\"k\">var</span> i <span class=\"k\">in</span> r<span class=\"k\">)</span>e<span class=\"k\">[</span>i<span class=\"k\">]===</span>n<span class=\"k\">&amp;&amp;(</span>e<span class=\"k\">[</span>i<span class=\"k\">]=</span>r<span class=\"k\">[</span>i<span class=\"k\">])</span><span class=\"k\">}</span><span class=\"k\">return</span> e<span class=\"k\">}</span><span class=\"k\">function</span> p<span class=\"k\">(</span>e<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">var</span> t<span class=\"k\">=</span><span class=\"k\">{</span>x<span class=\"k\">:</span>e<span class=\"k\">.</span>offsetLeft<span class=\"k\">,</span>y<span class=\"k\">:</span>e<span class=\"k\">.</span>offsetTop<span class=\"k\">}</span><span class=\"k\">;</span><span class=\"k\">while</span><span class=\"k\">(</span>e<span class=\"k\">=</span>e<span class=\"k\">.</span>offsetParent<span class=\"k\">)</span>t<span class=\"k\">.</span>x<span class=\"k\">+=</span>e<span class=\"k\">.</span>offsetLeft<span class=\"k\">,</span>t<span class=\"k\">.</span>y<span class=\"k\">+=</span>e<span class=\"k\">.</span>offsetTop<span class=\"k\">;</span><span class=\"k\">return</span> t<span class=\"k\">}</span><span class=\"k\">var</span> r<span class=\"k\">=[</span><span class=\"s\">\"webkit\"</span><span class=\"k\">,</span><span class=\"s\">\"Moz\"</span><span class=\"k\">,</span><span class=\"s\">\"ms\"</span><span class=\"k\">,</span><span class=\"s\">\"O\"</span><span class=\"k\">],</span>i<span class=\"k\">=</span><span class=\"k\">{}</span><span class=\"k\">,</span>s<span class=\"k\">,</span>a<span class=\"k\">=</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span><span class=\"k\">var</span> e<span class=\"k\">=</span>o<span class=\"k\">(</span><span class=\"s\">\"style\"</span><span class=\"k\">,</span><span class=\"k\">{</span>type<span class=\"k\">:</span><span class=\"s\">\"text/css\"</span><span class=\"k\">}</span><span class=\"k\">);</span><span class=\"k\">return</span> u<span class=\"k\">(</span>t<span class=\"k\">.</span>getElementsByTagName<span class=\"k\">(</span><span class=\"s\">\"head\"</span><span class=\"k\">)[</span><span class=\"s\">0</span><span class=\"k\">],</span>e<span class=\"k\">),</span>e<span class=\"k\">.</span>sheet<span class=\"k\">||</span>e<span class=\"k\">.</span>styleSheet<span class=\"k\">}</span><span class=\"k\">(),</span>d<span class=\"k\">=</span><span class=\"k\">{</span>lines<span class=\"k\">:</span><span class=\"s\">12</span><span class=\"k\">,</span>length<span class=\"k\">:</span><span class=\"s\">7</span><span class=\"k\">,</span>width<span class=\"k\">:</span><span class=\"s\">5</span><span class=\"k\">,</span>radius<span class=\"k\">:</span><span class=\"s\">10</span><span class=\"k\">,</span>rotate<span class=\"k\">:</span><span class=\"s\">0</span><span class=\"k\">,</span>corners<span class=\"k\">:</span><span class=\"s\">1</span><span class=\"k\">,</span>color<span class=\"k\">:</span><span class=\"s\">\"#000\"</span><span class=\"k\">,</span>speed<span class=\"k\">:</span><span class=\"s\">1</span><span class=\"k\">,</span>trail<span class=\"k\">:</span><span class=\"s\">100</span><span class=\"k\">,</span>opacity<span class=\"k\">:</span><span class=\"s\">.25</span><span class=\"k\">,</span>fps<span class=\"k\">:</span><span class=\"s\">20</span><span class=\"k\">,</span>zIndex<span class=\"k\">:</span><span class=\"s\">2e9</span><span class=\"k\">,</span>className<span class=\"k\">:</span><span class=\"s\">\"spinner\"</span><span class=\"k\">,</span>top<span class=\"k\">:</span><span class=\"s\">\"auto\"</span><span class=\"k\">,</span>left<span class=\"k\">:</span><span class=\"s\">\"auto\"</span><span class=\"k\">}</span><span class=\"k\">,</span>v<span class=\"k\">=</span><span class=\"k\">function</span> m<span class=\"k\">(</span>e<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">if</span><span class=\"k\">(!</span><span class=\"k\">this</span><span class=\"k\">.</span>spin<span class=\"k\">)</span><span class=\"k\">return</span> <span class=\"k\">new</span> m<span class=\"k\">(</span>e<span class=\"k\">);</span><span class=\"k\">this</span><span class=\"k\">.</span>opts<span class=\"k\">=</span>h<span class=\"k\">(</span>e<span class=\"k\">||</span><span class=\"k\">{}</span><span class=\"k\">,</span>m<span class=\"k\">.</span>defaults<span class=\"k\">,</span>d<span class=\"k\">)</span><span class=\"k\">}</span><span class=\"k\">;</span>v<span class=\"k\">.</span>defaults<span class=\"k\">=</span><span class=\"k\">{}</span><span class=\"k\">,</span>h<span class=\"k\">(</span>v<span class=\"k\">.</span>prototype<span class=\"k\">,</span><span class=\"k\">{</span>spin<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">(</span>e<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">this</span><span class=\"k\">.</span>stop<span class=\"k\">();</span><span class=\"k\">var</span> t<span class=\"k\">=</span><span class=\"k\">this</span><span class=\"k\">,</span>n<span class=\"k\">=</span>t<span class=\"k\">.</span>opts<span class=\"k\">,</span>r<span class=\"k\">=</span>t<span class=\"k\">.</span>el<span class=\"k\">=</span>c<span class=\"k\">(</span>o<span class=\"k\">(</span><span class=\"s\">0</span><span class=\"k\">,</span><span class=\"k\">{</span>className<span class=\"k\">:</span>n<span class=\"k\">.</span>className<span class=\"k\">}</span><span class=\"k\">),</span><span class=\"k\">{</span>position<span class=\"k\">:</span><span class=\"s\">\"relative\"</span><span class=\"k\">,</span>width<span class=\"k\">:</span><span class=\"s\">0</span><span class=\"k\">,</span>zIndex<span class=\"k\">:</span>n<span class=\"k\">.</span>zIndex<span class=\"k\">}</span><span class=\"k\">),</span>i<span class=\"k\">=</span>n<span class=\"k\">.</span>radius<span class=\"k\">+</span>n<span class=\"k\">.</span>length<span class=\"k\">+</span>n<span class=\"k\">.</span>width<span class=\"k\">,</span>u<span class=\"k\">,</span>a<span class=\"k\">;</span>e<span class=\"k\">&amp;&amp;(</span>e<span class=\"k\">.</span>insertBefore<span class=\"k\">(</span>r<span class=\"k\">,</span>e<span class=\"k\">.</span>firstChild<span class=\"k\">||</span><span class=\"k\">null</span><span class=\"k\">),</span>a<span class=\"k\">=</span>p<span class=\"k\">(</span>e<span class=\"k\">),</span>u<span class=\"k\">=</span>p<span class=\"k\">(</span>r<span class=\"k\">),</span>c<span class=\"k\">(</span>r<span class=\"k\">,</span><span class=\"k\">{</span>left<span class=\"k\">:(</span>n<span class=\"k\">.</span>left<span class=\"k\">==</span><span class=\"s\">\"auto\"</span><span class=\"k\">?</span>a<span class=\"k\">.</span>x<span class=\"k\">-</span>u<span class=\"k\">.</span>x<span class=\"k\">+(</span>e<span class=\"k\">.</span>offsetWidth<span class=\"k\">&gt;&gt;</span><span class=\"s\">1</span><span class=\"k\">):</span>parseInt<span class=\"k\">(</span>n<span class=\"k\">.</span>left<span class=\"k\">,</span><span class=\"s\">10</span><span class=\"k\">)+</span>i<span class=\"k\">)+</span><span class=\"s\">\"px\"</span><span class=\"k\">,</span>top<span class=\"k\">:(</span>n<span class=\"k\">.</span>top<span class=\"k\">==</span><span class=\"s\">\"auto\"</span><span class=\"k\">?</span>a<span class=\"k\">.</span>y<span class=\"k\">-</span>u<span class=\"k\">.</span>y<span class=\"k\">+(</span>e<span class=\"k\">.</span>offsetHeight<span class=\"k\">&gt;&gt;</span><span class=\"s\">1</span><span class=\"k\">):</span>parseInt<span class=\"k\">(</span>n<span class=\"k\">.</span>top<span class=\"k\">,</span><span class=\"s\">10</span><span class=\"k\">)+</span>i<span class=\"k\">)+</span><span class=\"s\">\"px\"</span><span class=\"k\">}</span><span class=\"k\">)),</span>r<span class=\"k\">.</span>setAttribute<span class=\"k\">(</span><span class=\"s\">\"aria-role\"</span><span class=\"k\">,</span><span class=\"s\">\"progressbar\"</span><span class=\"k\">),</span>t<span class=\"k\">.</span>lines<span class=\"k\">(</span>r<span class=\"k\">,</span>t<span class=\"k\">.</span>opts<span class=\"k\">);</span><span class=\"k\">if</span><span class=\"k\">(!</span>s<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">var</span> f<span class=\"k\">=</span><span class=\"s\">0</span><span class=\"k\">,</span>l<span class=\"k\">=</span>n<span class=\"k\">.</span>fps<span class=\"k\">,</span>h<span class=\"k\">=</span>l<span class=\"k\">/</span>n<span class=\"k\">.</span>speed<span class=\"k\">,</span>d<span class=\"k\">=(</span><span class=\"s\">1</span><span class=\"k\">-</span>n<span class=\"k\">.</span>opacity<span class=\"k\">)/(</span>h<span class=\"k\">*</span>n<span class=\"k\">.</span>trail<span class=\"k\">/</span><span class=\"s\">100</span><span class=\"k\">),</span>v<span class=\"k\">=</span>h<span class=\"k\">/</span>n<span class=\"k\">.</span>lines<span class=\"k\">;(</span><span class=\"k\">function</span> m<span class=\"k\">()</span><span class=\"k\">{</span>f<span class=\"k\">++;</span><span class=\"k\">for</span><span class=\"k\">(</span><span class=\"k\">var</span> e<span class=\"k\">=</span>n<span class=\"k\">.</span>lines<span class=\"k\">;</span>e<span class=\"k\">;</span>e<span class=\"k\">--)</span><span class=\"k\">{</span><span class=\"k\">var</span> i<span class=\"k\">=</span>Math<span class=\"k\">.</span>max<span class=\"k\">(</span><span class=\"s\">1</span><span class=\"k\">-(</span>f<span class=\"k\">+</span>e<span class=\"k\">*</span>v<span class=\"k\">)%</span>h<span class=\"k\">*</span>d<span class=\"k\">,</span>n<span class=\"k\">.</span>opacity<span class=\"k\">);</span>t<span class=\"k\">.</span>opacity<span class=\"k\">(</span>r<span class=\"k\">,</span>n<span class=\"k\">.</span>lines<span class=\"k\">-</span>e<span class=\"k\">,</span>i<span class=\"k\">,</span>n<span class=\"k\">)</span><span class=\"k\">}</span>t<span class=\"k\">.</span>timeout<span class=\"k\">=</span>t<span class=\"k\">.</span>el<span class=\"k\">&amp;&amp;</span>setTimeout<span class=\"k\">(</span>m<span class=\"k\">,~~(</span><span class=\"s\">1e3</span><span class=\"k\">/</span>l<span class=\"k\">))</span><span class=\"k\">}</span><span class=\"k\">)()</span><span class=\"k\">}</span><span class=\"k\">return</span> t<span class=\"k\">}</span><span class=\"k\">,</span>stop<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span><span class=\"k\">var</span> e<span class=\"k\">=</span><span class=\"k\">this</span><span class=\"k\">.</span>el<span class=\"k\">;</span><span class=\"k\">return</span> e<span class=\"k\">&amp;&amp;(</span>clearTimeout<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>timeout<span class=\"k\">),</span>e<span class=\"k\">.</span>parentNode<span class=\"k\">&amp;&amp;</span>e<span class=\"k\">.</span>parentNode<span class=\"k\">.</span>removeChild<span class=\"k\">(</span>e<span class=\"k\">),</span><span class=\"k\">this</span><span class=\"k\">.</span>el<span class=\"k\">=</span>n<span class=\"k\">),</span><span class=\"k\">this</span><span class=\"k\">}</span><span class=\"k\">,</span>lines<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">(</span>e<span class=\"k\">,</span>t<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">function</span> i<span class=\"k\">(</span>e<span class=\"k\">,</span>r<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">return</span> c<span class=\"k\">(</span>o<span class=\"k\">(),</span><span class=\"k\">{</span>position<span class=\"k\">:</span><span class=\"s\">\"absolute\"</span><span class=\"k\">,</span>width<span class=\"k\">:</span>t<span class=\"k\">.</span>length<span class=\"k\">+</span>t<span class=\"k\">.</span>width<span class=\"k\">+</span><span class=\"s\">\"px\"</span><span class=\"k\">,</span>height<span class=\"k\">:</span>t<span class=\"k\">.</span>width<span class=\"k\">+</span><span class=\"s\">\"px\"</span><span class=\"k\">,</span>background<span class=\"k\">:</span>e<span class=\"k\">,</span>boxShadow<span class=\"k\">:</span>r<span class=\"k\">,</span>transformOrigin<span class=\"k\">:</span><span class=\"s\">\"left\"</span><span class=\"k\">,</span>transform<span class=\"k\">:</span><span class=\"s\">\"rotate(\"</span><span class=\"k\">+~~(</span><span class=\"s\">360</span><span class=\"k\">/</span>t<span class=\"k\">.</span>lines<span class=\"k\">*</span>n<span class=\"k\">+</span>t<span class=\"k\">.</span>rotate<span class=\"k\">)+</span><span class=\"s\">\"deg) translate(\"</span><span class=\"k\">+</span>t<span class=\"k\">.</span>radius<span class=\"k\">+</span><span class=\"s\">\"px\"</span><span class=\"k\">+</span><span class=\"s\">\",0)\"</span><span class=\"k\">,</span>borderRadius<span class=\"k\">:(</span>t<span class=\"k\">.</span>corners<span class=\"k\">*</span>t<span class=\"k\">.</span>width<span class=\"k\">&gt;&gt;</span><span class=\"s\">1</span><span class=\"k\">)+</span><span class=\"s\">\"px\"</span><span class=\"k\">}</span><span class=\"k\">)</span><span class=\"k\">}</span><span class=\"k\">var</span> n<span class=\"k\">=</span><span class=\"s\">0</span><span class=\"k\">,</span>r<span class=\"k\">;</span><span class=\"k\">for</span><span class=\"k\">(;</span>n<span class=\"k\">&lt;</span>t<span class=\"k\">.</span>lines<span class=\"k\">;</span>n<span class=\"k\">++)</span>r<span class=\"k\">=</span>c<span class=\"k\">(</span>o<span class=\"k\">(),</span><span class=\"k\">{</span>position<span class=\"k\">:</span><span class=\"s\">\"absolute\"</span><span class=\"k\">,</span>top<span class=\"k\">:</span><span class=\"s\">1</span><span class=\"k\">+~(</span>t<span class=\"k\">.</span>width<span class=\"k\">/</span><span class=\"s\">2</span><span class=\"k\">)+</span><span class=\"s\">\"px\"</span><span class=\"k\">,</span>transform<span class=\"k\">:</span>t<span class=\"k\">.</span>hwaccel<span class=\"k\">?</span><span class=\"s\">\"translate3d(0,0,0)\"</span><span class=\"k\">:</span><span class=\"s\">\"\"</span><span class=\"k\">,</span>opacity<span class=\"k\">:</span>t<span class=\"k\">.</span>opacity<span class=\"k\">,</span>animation<span class=\"k\">:</span>s<span class=\"k\">&amp;&amp;</span>f<span class=\"k\">(</span>t<span class=\"k\">.</span>opacity<span class=\"k\">,</span>t<span class=\"k\">.</span>trail<span class=\"k\">,</span>n<span class=\"k\">,</span>t<span class=\"k\">.</span>lines<span class=\"k\">)+</span><span class=\"s\">\" \"</span><span class=\"k\">+</span><span class=\"s\">1</span><span class=\"k\">/</span>t<span class=\"k\">.</span>speed<span class=\"k\">+</span><span class=\"s\">\"s linear infinite\"</span><span class=\"k\">}</span><span class=\"k\">),</span>t<span class=\"k\">.</span>shadow<span class=\"k\">&amp;&amp;</span>u<span class=\"k\">(</span>r<span class=\"k\">,</span>c<span class=\"k\">(</span>i<span class=\"k\">(</span><span class=\"s\">\"#000\"</span><span class=\"k\">,</span><span class=\"s\">\"0 0 4px #000\"</span><span class=\"k\">),</span><span class=\"k\">{</span>top<span class=\"k\">:</span><span class=\"s\">\"2px\"</span><span class=\"k\">}</span><span class=\"k\">)),</span>u<span class=\"k\">(</span>e<span class=\"k\">,</span>u<span class=\"k\">(</span>r<span class=\"k\">,</span>i<span class=\"k\">(</span>t<span class=\"k\">.</span>color<span class=\"k\">,</span><span class=\"s\">\"0 0 1px rgba(0,0,0,.1)\"</span><span class=\"k\">)));</span><span class=\"k\">return</span> e<span class=\"k\">}</span><span class=\"k\">,</span>opacity<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">(</span>e<span class=\"k\">,</span>t<span class=\"k\">,</span>n<span class=\"k\">)</span><span class=\"k\">{</span>t<span class=\"k\">&lt;</span>e<span class=\"k\">.</span>childNodes<span class=\"k\">.</span>length<span class=\"k\">&amp;&amp;(</span>e<span class=\"k\">.</span>childNodes<span class=\"k\">[</span>t<span class=\"k\">].</span>style<span class=\"k\">.</span>opacity<span class=\"k\">=</span>n<span class=\"k\">)</span><span class=\"k\">}}</span><span class=\"k\">),</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span><span class=\"k\">function</span> e<span class=\"k\">(</span>e<span class=\"k\">,</span>t<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">return</span> o<span class=\"k\">(</span><span class=\"s\">\"&lt;\"</span><span class=\"k\">+</span>e<span class=\"k\">+</span><span class=\"s\">' xmlns=\"urn:schemas-microsoft.com:vml\" class=\"spin-vml\"&gt;'</span><span class=\"k\">,</span>t<span class=\"k\">)</span><span class=\"k\">}</span><span class=\"k\">var</span> t<span class=\"k\">=</span>c<span class=\"k\">(</span>o<span class=\"k\">(</span><span class=\"s\">\"group\"</span><span class=\"k\">),</span><span class=\"k\">{</span>behavior<span class=\"k\">:</span><span class=\"s\">\"url(#default#VML)\"</span><span class=\"k\">}</span><span class=\"k\">);!</span>l<span class=\"k\">(</span>t<span class=\"k\">,</span><span class=\"s\">\"transform\"</span><span class=\"k\">)&amp;&amp;</span>t<span class=\"k\">.</span>adj<span class=\"k\">?(</span>a<span class=\"k\">.</span>addRule<span class=\"k\">(</span><span class=\"s\">\".spin-vml\"</span><span class=\"k\">,</span><span class=\"s\">\"behavior:url(#default#VML)\"</span><span class=\"k\">),</span>v<span class=\"k\">.</span>prototype<span class=\"k\">.</span>lines<span class=\"k\">=</span><span class=\"k\">function</span><span class=\"k\">(</span>t<span class=\"k\">,</span>n<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">function</span> s<span class=\"k\">()</span><span class=\"k\">{</span><span class=\"k\">return</span> c<span class=\"k\">(</span>e<span class=\"k\">(</span><span class=\"s\">\"group\"</span><span class=\"k\">,</span><span class=\"k\">{</span>coordsize<span class=\"k\">:</span>i<span class=\"k\">+</span><span class=\"s\">\" \"</span><span class=\"k\">+</span>i<span class=\"k\">,</span>coordorigin<span class=\"k\">:-</span>r<span class=\"k\">+</span><span class=\"s\">\" \"</span><span class=\"k\">+</span> <span class=\"k\">-</span>r<span class=\"k\">}</span><span class=\"k\">),</span><span class=\"k\">{</span>width<span class=\"k\">:</span>i<span class=\"k\">,</span>height<span class=\"k\">:</span>i<span class=\"k\">}</span><span class=\"k\">)</span><span class=\"k\">}</span><span class=\"k\">function</span> l<span class=\"k\">(</span>t<span class=\"k\">,</span>i<span class=\"k\">,</span>o<span class=\"k\">)</span><span class=\"k\">{</span>u<span class=\"k\">(</span>a<span class=\"k\">,</span>u<span class=\"k\">(</span>c<span class=\"k\">(</span>s<span class=\"k\">(),</span><span class=\"k\">{</span>rotation<span class=\"k\">:</span><span class=\"s\">360</span><span class=\"k\">/</span>n<span class=\"k\">.</span>lines<span class=\"k\">*</span>t<span class=\"k\">+</span><span class=\"s\">\"deg\"</span><span class=\"k\">,</span>left<span class=\"k\">:~~</span>i<span class=\"k\">}</span><span class=\"k\">),</span>u<span class=\"k\">(</span>c<span class=\"k\">(</span>e<span class=\"k\">(</span><span class=\"s\">\"roundrect\"</span><span class=\"k\">,</span><span class=\"k\">{</span>arcsize<span class=\"k\">:</span>n<span class=\"k\">.</span>corners<span class=\"k\">}</span><span class=\"k\">),</span><span class=\"k\">{</span>width<span class=\"k\">:</span>r<span class=\"k\">,</span>height<span class=\"k\">:</span>n<span class=\"k\">.</span>width<span class=\"k\">,</span>left<span class=\"k\">:</span>n<span class=\"k\">.</span>radius<span class=\"k\">,</span>top<span class=\"k\">:-</span>n<span class=\"k\">.</span>width<span class=\"k\">&gt;&gt;</span><span class=\"s\">1</span><span class=\"k\">,</span>filter<span class=\"k\">:</span>o<span class=\"k\">}</span><span class=\"k\">),</span>e<span class=\"k\">(</span><span class=\"s\">\"fill\"</span><span class=\"k\">,</span><span class=\"k\">{</span>color<span class=\"k\">:</span>n<span class=\"k\">.</span>color<span class=\"k\">,</span>opacity<span class=\"k\">:</span>n<span class=\"k\">.</span>opacity<span class=\"k\">}</span><span class=\"k\">),</span>e<span class=\"k\">(</span><span class=\"s\">\"stroke\"</span><span class=\"k\">,</span><span class=\"k\">{</span>opacity<span class=\"k\">:</span><span class=\"s\">0</span><span class=\"k\">}</span><span class=\"k\">))))</span><span class=\"k\">}</span><span class=\"k\">var</span> r<span class=\"k\">=</span>n<span class=\"k\">.</span>length<span class=\"k\">+</span>n<span class=\"k\">.</span>width<span class=\"k\">,</span>i<span class=\"k\">=</span><span class=\"s\">2</span><span class=\"k\">*</span>r<span class=\"k\">,</span>o<span class=\"k\">=-(</span>n<span class=\"k\">.</span>width<span class=\"k\">+</span>n<span class=\"k\">.</span>length<span class=\"k\">)*</span><span class=\"s\">2</span><span class=\"k\">+</span><span class=\"s\">\"px\"</span><span class=\"k\">,</span>a<span class=\"k\">=</span>c<span class=\"k\">(</span>s<span class=\"k\">(),</span><span class=\"k\">{</span>position<span class=\"k\">:</span><span class=\"s\">\"absolute\"</span><span class=\"k\">,</span>top<span class=\"k\">:</span>o<span class=\"k\">,</span>left<span class=\"k\">:</span>o<span class=\"k\">}</span><span class=\"k\">),</span>f<span class=\"k\">;</span><span class=\"k\">if</span><span class=\"k\">(</span>n<span class=\"k\">.</span>shadow<span class=\"k\">)</span><span class=\"k\">for</span><span class=\"k\">(</span>f<span class=\"k\">=</span><span class=\"s\">1</span><span class=\"k\">;</span>f<span class=\"k\">&lt;=</span>n<span class=\"k\">.</span>lines<span class=\"k\">;</span>f<span class=\"k\">++)</span>l<span class=\"k\">(</span>f<span class=\"k\">,-</span><span class=\"s\">2</span><span class=\"k\">,</span><span class=\"s\">\"progid:DXImageTransform.Microsoft.Blur(pixelradius=2,makeshadow=1,shadowopacity=.3)\"</span><span class=\"k\">);</span><span class=\"k\">for</span><span class=\"k\">(</span>f<span class=\"k\">=</span><span class=\"s\">1</span><span class=\"k\">;</span>f<span class=\"k\">&lt;=</span>n<span class=\"k\">.</span>lines<span class=\"k\">;</span>f<span class=\"k\">++)</span>l<span class=\"k\">(</span>f<span class=\"k\">);</span><span class=\"k\">return</span> u<span class=\"k\">(</span>t<span class=\"k\">,</span>a<span class=\"k\">)</span><span class=\"k\">}</span><span class=\"k\">,</span>v<span class=\"k\">.</span>prototype<span class=\"k\">.</span>opacity<span class=\"k\">=</span><span class=\"k\">function</span><span class=\"k\">(</span>e<span class=\"k\">,</span>t<span class=\"k\">,</span>n<span class=\"k\">,</span>r<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">var</span> i<span class=\"k\">=</span>e<span class=\"k\">.</span>firstChild<span class=\"k\">;</span>r<span class=\"k\">=</span>r<span class=\"k\">.</span>shadow<span class=\"k\">&amp;&amp;</span>r<span class=\"k\">.</span>lines<span class=\"k\">||</span><span class=\"s\">0</span><span class=\"k\">,</span>i<span class=\"k\">&amp;&amp;</span>t<span class=\"k\">+</span>r<span class=\"k\">&lt;</span>i<span class=\"k\">.</span>childNodes<span class=\"k\">.</span>length<span class=\"k\">&amp;&amp;(</span>i<span class=\"k\">=</span>i<span class=\"k\">.</span>childNodes<span class=\"k\">[</span>t<span class=\"k\">+</span>r<span class=\"k\">],</span>i<span class=\"k\">=</span>i<span class=\"k\">&amp;&amp;</span>i<span class=\"k\">.</span>firstChild<span class=\"k\">,</span>i<span class=\"k\">=</span>i<span class=\"k\">&amp;&amp;</span>i<span class=\"k\">.</span>firstChild<span class=\"k\">,</span>i<span class=\"k\">&amp;&amp;(</span>i<span class=\"k\">.</span>opacity<span class=\"k\">=</span>n<span class=\"k\">))</span><span class=\"k\">}</span><span class=\"k\">):</span>s<span class=\"k\">=</span>l<span class=\"k\">(</span>t<span class=\"k\">,</span><span class=\"s\">\"animation\"</span><span class=\"k\">)</span><span class=\"k\">}</span><span class=\"k\">(),</span><span class=\"k\">typeof</span> define<span class=\"k\">==</span><span class=\"s\">\"function\"</span><span class=\"k\">&amp;&amp;</span>define<span class=\"k\">.</span>amd<span class=\"k\">?</span>define<span class=\"k\">(</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span><span class=\"k\">return</span> v<span class=\"k\">}</span><span class=\"k\">):</span>e<span class=\"k\">.</span>Spinner<span class=\"k\">=</span>v<span class=\"k\">}</span><span class=\"k\">(</span>window<span class=\"k\">,</span>document<span class=\"k\">);</span>"];
_$jscoverage['util/spin.min.js'][8]++;
(! (function (e, t, n) {
  _$jscoverage['util/spin.min.js'][8]++;
  function o(e, n) {
    _$jscoverage['util/spin.min.js'][8]++;
    var r = t.createElement((e || "div")), i;
    _$jscoverage['util/spin.min.js'][8]++;
    for (i in n) {
      _$jscoverage['util/spin.min.js'][8]++;
      r[i] = n[i];
}
    _$jscoverage['util/spin.min.js'][8]++;
    return r;
}
  _$jscoverage['util/spin.min.js'][8]++;
  function u(e) {
    _$jscoverage['util/spin.min.js'][8]++;
    for (var t = 1, n = arguments.length; (t < n); (t++)) {
      _$jscoverage['util/spin.min.js'][8]++;
      e.appendChild(arguments[t]);
}
    _$jscoverage['util/spin.min.js'][8]++;
    return e;
}
  _$jscoverage['util/spin.min.js'][8]++;
  function f(e, t, n, r) {
    _$jscoverage['util/spin.min.js'][8]++;
    var o = ["opacity", t, (~ (~ (e * 100))), n, r].join("-"), u = (0.01 + ((n / r) * 100)), f = Math.max((1 - (((1 - e) / t) * (100 - u))), e), l = s.substring(0, s.indexOf("Animation")).toLowerCase(), c = ((l && ("-" + l + "-")) || "");
    _$jscoverage['util/spin.min.js'][8]++;
    return ((i[o] || (a.insertRule(("@" + c + "keyframes " + o + "{" + "0%{opacity:" + f + "}" + u + "%{opacity:" + e + "}" + (u + 0.01) + "%{opacity:1}" + ((u + t) % 100) + "%{opacity:" + e + "}" + "100%{opacity:" + f + "}" + "}"), a.cssRules.length), (i[o] = 1))), o);
}
  _$jscoverage['util/spin.min.js'][8]++;
  function l(e, t) {
    _$jscoverage['util/spin.min.js'][8]++;
    var i = e.style, s, o;
    _$jscoverage['util/spin.min.js'][8]++;
    if ((i[t] !== n)) {
      _$jscoverage['util/spin.min.js'][8]++;
      return t;
    }
    _$jscoverage['util/spin.min.js'][8]++;
    t = (t.charAt(0).toUpperCase() + t.slice(1));
    _$jscoverage['util/spin.min.js'][8]++;
    for (o = 0; (o < r.length); (o++)) {
      _$jscoverage['util/spin.min.js'][8]++;
      s = (r[o] + t);
      _$jscoverage['util/spin.min.js'][8]++;
      if ((i[s] !== n)) {
        _$jscoverage['util/spin.min.js'][8]++;
        return s;
      }
}
}
  _$jscoverage['util/spin.min.js'][8]++;
  function c(e, t) {
    _$jscoverage['util/spin.min.js'][8]++;
    for (var n in t) {
      _$jscoverage['util/spin.min.js'][8]++;
      e.style[(l(e, n) || n)] = t[n];
}
    _$jscoverage['util/spin.min.js'][8]++;
    return e;
}
  _$jscoverage['util/spin.min.js'][8]++;
  function h(e) {
    _$jscoverage['util/spin.min.js'][8]++;
    for (var t = 1; (t < arguments.length); (t++)) {
      _$jscoverage['util/spin.min.js'][8]++;
      var r = arguments[t];
      _$jscoverage['util/spin.min.js'][8]++;
      for (var i in r) {
        _$jscoverage['util/spin.min.js'][8]++;
        ((e[i] === n) && (e[i] = r[i]));
}
}
    _$jscoverage['util/spin.min.js'][8]++;
    return e;
}
  _$jscoverage['util/spin.min.js'][8]++;
  function p(e) {
    _$jscoverage['util/spin.min.js'][8]++;
    var t = {x: e.offsetLeft, y: e.offsetTop};
    _$jscoverage['util/spin.min.js'][8]++;
    while ((e = e.offsetParent)) {
      _$jscoverage['util/spin.min.js'][8]++;
      ((t.x += e.offsetLeft), (t.y += e.offsetTop));
}
    _$jscoverage['util/spin.min.js'][8]++;
    return t;
}
  _$jscoverage['util/spin.min.js'][8]++;
  var r = ["webkit", "Moz", "ms", "O"], i = {}, s, a = (function () {
  _$jscoverage['util/spin.min.js'][8]++;
  var e = o("style", {type: "text/css"});
  _$jscoverage['util/spin.min.js'][8]++;
  return (u(t.getElementsByTagName("head")[0], e), (e.sheet || e.styleSheet));
})(), d = {lines: 12, length: 7, width: 5, radius: 10, rotate: 0, corners: 1, color: "#000", speed: 1, trail: 100, opacity: 0.25, fps: 20, zIndex: 2000000000, className: "spinner", top: "auto", left: "auto"}, v = (function m(e) {
  _$jscoverage['util/spin.min.js'][8]++;
  if ((! this.spin)) {
    _$jscoverage['util/spin.min.js'][8]++;
    return new m(e);
  }
  _$jscoverage['util/spin.min.js'][8]++;
  this.opts = h((e || {}), m.defaults, d);
});
  _$jscoverage['util/spin.min.js'][8]++;
  ((v.defaults = {}), h(v.prototype, {spin: (function (e) {
  _$jscoverage['util/spin.min.js'][8]++;
  this.stop();
  _$jscoverage['util/spin.min.js'][8]++;
  var t = this, n = t.opts, r = (t.el = c(o(0, {className: n.className}), {position: "relative", width: 0, zIndex: n.zIndex})), i = (n.radius + n.length + n.width), u, a;
  _$jscoverage['util/spin.min.js'][8]++;
  ((e && (e.insertBefore(r, (e.firstChild || null)), (a = p(e)), (u = p(r)), c(r, {left: (((n.left == "auto")? ((a.x - u.x) + (e.offsetWidth >> 1)): (parseInt(n.left, 10) + i)) + "px"), top: (((n.top == "auto")? ((a.y - u.y) + (e.offsetHeight >> 1)): (parseInt(n.top, 10) + i)) + "px")}))), r.setAttribute("aria-role", "progressbar"), t.lines(r, t.opts));
  _$jscoverage['util/spin.min.js'][8]++;
  if ((! s)) {
    _$jscoverage['util/spin.min.js'][8]++;
    var f = 0, l = n.fps, h = (l / n.speed), d = ((1 - n.opacity) / ((h * n.trail) / 100)), v = (h / n.lines);
    _$jscoverage['util/spin.min.js'][8]++;
    (function m() {
  _$jscoverage['util/spin.min.js'][8]++;
  (f++);
  _$jscoverage['util/spin.min.js'][8]++;
  for (var e = n.lines; e; (e--)) {
    _$jscoverage['util/spin.min.js'][8]++;
    var i = Math.max((1 - (((f + (e * v)) % h) * d)), n.opacity);
    _$jscoverage['util/spin.min.js'][8]++;
    t.opacity(r, (n.lines - e), i, n);
}
  _$jscoverage['util/spin.min.js'][8]++;
  t.timeout = (t.el && setTimeout(m, (~ (~ (1000 / l)))));
})();
  }
  _$jscoverage['util/spin.min.js'][8]++;
  return t;
}), stop: (function () {
  _$jscoverage['util/spin.min.js'][8]++;
  var e = this.el;
  _$jscoverage['util/spin.min.js'][8]++;
  return ((e && (clearTimeout(this.timeout), (e.parentNode && e.parentNode.removeChild(e)), (this.el = n))), this);
}), lines: (function (e, t) {
  _$jscoverage['util/spin.min.js'][8]++;
  function i(e, r) {
    _$jscoverage['util/spin.min.js'][8]++;
    return c(o(), {position: "absolute", width: (t.length + t.width + "px"), height: (t.width + "px"), background: e, boxShadow: r, transformOrigin: "left", transform: ("rotate(" + (~ (~ (((360 / t.lines) * n) + t.rotate))) + "deg) translate(" + t.radius + "px" + ",0)"), borderRadius: (((t.corners * t.width) >> 1) + "px")});
}
  _$jscoverage['util/spin.min.js'][8]++;
  var n = 0, r;
  _$jscoverage['util/spin.min.js'][8]++;
  for (; (n < t.lines); (n++)) {
    _$jscoverage['util/spin.min.js'][8]++;
    ((r = c(o(), {position: "absolute", top: (1 + (~ (t.width / 2)) + "px"), transform: (t.hwaccel? "translate3d(0,0,0)": ""), opacity: t.opacity, animation: (s && (f(t.opacity, t.trail, n, t.lines) + " " + (1 / t.speed) + "s linear infinite"))})), (t.shadow && u(r, c(i("#000", "0 0 4px #000"), {top: "2px"}))), u(e, u(r, i(t.color, "0 0 1px rgba(0,0,0,.1)"))));
}
  _$jscoverage['util/spin.min.js'][8]++;
  return e;
}), opacity: (function (e, t, n) {
  _$jscoverage['util/spin.min.js'][8]++;
  ((t < e.childNodes.length) && (e.childNodes[t].style.opacity = n));
})}), (function () {
  _$jscoverage['util/spin.min.js'][8]++;
  function e(e, t) {
    _$jscoverage['util/spin.min.js'][8]++;
    return o(("<" + e + " xmlns=\"urn:schemas-microsoft.com:vml\" class=\"spin-vml\">"), t);
}
  _$jscoverage['util/spin.min.js'][8]++;
  var t = c(o("group"), {behavior: "url(#default#VML)"});
  _$jscoverage['util/spin.min.js'][8]++;
  (((! l(t, "transform")) && t.adj)? (a.addRule(".spin-vml", "behavior:url(#default#VML)"), (v.prototype.lines = (function (t, n) {
  _$jscoverage['util/spin.min.js'][8]++;
  function s() {
    _$jscoverage['util/spin.min.js'][8]++;
    return c(e("group", {coordsize: (i + " " + i), coordorigin: ((- r) + " " + (- r))}), {width: i, height: i});
}
  _$jscoverage['util/spin.min.js'][8]++;
  function l(t, i, o) {
    _$jscoverage['util/spin.min.js'][8]++;
    u(a, u(c(s(), {rotation: (((360 / n.lines) * t) + "deg"), left: (~ (~ i))}), u(c(e("roundrect", {arcsize: n.corners}), {width: r, height: n.width, left: n.radius, top: ((- n.width) >> 1), filter: o}), e("fill", {color: n.color, opacity: n.opacity}), e("stroke", {opacity: 0}))));
}
  _$jscoverage['util/spin.min.js'][8]++;
  var r = (n.length + n.width), i = (2 * r), o = (((- (n.width + n.length)) * 2) + "px"), a = c(s(), {position: "absolute", top: o, left: o}), f;
  _$jscoverage['util/spin.min.js'][8]++;
  if (n.shadow) {
    _$jscoverage['util/spin.min.js'][8]++;
    for (f = 1; (f <= n.lines); (f++)) {
      _$jscoverage['util/spin.min.js'][8]++;
      l(f, -2, "progid:DXImageTransform.Microsoft.Blur(pixelradius=2,makeshadow=1,shadowopacity=.3)");
}
  }
  _$jscoverage['util/spin.min.js'][8]++;
  for (f = 1; (f <= n.lines); (f++)) {
    _$jscoverage['util/spin.min.js'][8]++;
    l(f);
}
  _$jscoverage['util/spin.min.js'][8]++;
  return u(t, a);
})), (v.prototype.opacity = (function (e, t, n, r) {
  _$jscoverage['util/spin.min.js'][8]++;
  var i = e.firstChild;
  _$jscoverage['util/spin.min.js'][8]++;
  ((r = ((r.shadow && r.lines) || 0)), (i && ((t + r) < i.childNodes.length) && ((i = i.childNodes[(t + r)]), (i = (i && i.firstChild)), (i = (i && i.firstChild)), (i && (i.opacity = n)))));
}))): (s = l(t, "animation")));
})(), ((((typeof define) == "function") && define.amd)? define((function () {
  _$jscoverage['util/spin.min.js'][8]++;
  return v;
})): (e.Spinner = v)));
})(window, document));
