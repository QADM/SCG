/* automatically generated by JSCoverage - do not edit */
try {
  if (typeof top === 'object' && top !== null && typeof top.opener === 'object' && top.opener !== null) {
    // this is a browser window that was opened from another window

    if (! top.opener._$jscoverage) {
      top.opener._$jscoverage = {};
    }
  }
}
catch (e) {}

try {
  if (typeof top === 'object' && top !== null) {
    // this is a browser window

    try {
      if (typeof top.opener === 'object' && top.opener !== null && top.opener._$jscoverage) {
        top._$jscoverage = top.opener._$jscoverage;
      }
    }
    catch (e) {}

    if (! top._$jscoverage) {
      top._$jscoverage = {};
    }
  }
}
catch (e) {}

try {
  if (typeof top === 'object' && top !== null && top._$jscoverage) {
    _$jscoverage = top._$jscoverage;
  }
}
catch (e) {}
if (typeof _$jscoverage !== 'object') {
  _$jscoverage = {};
}
if (! _$jscoverage['dataapi/app.js']) {
  _$jscoverage['dataapi/app.js'] = [];
  _$jscoverage['dataapi/app.js'][2] = 0;
  _$jscoverage['dataapi/app.js'][3] = 0;
  _$jscoverage['dataapi/app.js'][6] = 0;
  _$jscoverage['dataapi/app.js'][10] = 0;
  _$jscoverage['dataapi/app.js'][11] = 0;
  _$jscoverage['dataapi/app.js'][14] = 0;
  _$jscoverage['dataapi/app.js'][18] = 0;
  _$jscoverage['dataapi/app.js'][19] = 0;
  _$jscoverage['dataapi/app.js'][21] = 0;
  _$jscoverage['dataapi/app.js'][22] = 0;
  _$jscoverage['dataapi/app.js'][23] = 0;
  _$jscoverage['dataapi/app.js'][24] = 0;
  _$jscoverage['dataapi/app.js'][30] = 0;
  _$jscoverage['dataapi/app.js'][31] = 0;
  _$jscoverage['dataapi/app.js'][32] = 0;
  _$jscoverage['dataapi/app.js'][33] = 0;
  _$jscoverage['dataapi/app.js'][34] = 0;
  _$jscoverage['dataapi/app.js'][38] = 0;
  _$jscoverage['dataapi/app.js'][47] = 0;
  _$jscoverage['dataapi/app.js'][53] = 0;
  _$jscoverage['dataapi/app.js'][54] = 0;
  _$jscoverage['dataapi/app.js'][55] = 0;
  _$jscoverage['dataapi/app.js'][58] = 0;
  _$jscoverage['dataapi/app.js'][60] = 0;
  _$jscoverage['dataapi/app.js'][62] = 0;
  _$jscoverage['dataapi/app.js'][64] = 0;
  _$jscoverage['dataapi/app.js'][65] = 0;
  _$jscoverage['dataapi/app.js'][66] = 0;
  _$jscoverage['dataapi/app.js'][67] = 0;
  _$jscoverage['dataapi/app.js'][73] = 0;
  _$jscoverage['dataapi/app.js'][74] = 0;
  _$jscoverage['dataapi/app.js'][77] = 0;
  _$jscoverage['dataapi/app.js'][78] = 0;
  _$jscoverage['dataapi/app.js'][79] = 0;
  _$jscoverage['dataapi/app.js'][82] = 0;
  _$jscoverage['dataapi/app.js'][83] = 0;
  _$jscoverage['dataapi/app.js'][84] = 0;
  _$jscoverage['dataapi/app.js'][85] = 0;
  _$jscoverage['dataapi/app.js'][86] = 0;
  _$jscoverage['dataapi/app.js'][90] = 0;
  _$jscoverage['dataapi/app.js'][91] = 0;
  _$jscoverage['dataapi/app.js'][92] = 0;
  _$jscoverage['dataapi/app.js'][93] = 0;
  _$jscoverage['dataapi/app.js'][97] = 0;
  _$jscoverage['dataapi/app.js'][98] = 0;
  _$jscoverage['dataapi/app.js'][99] = 0;
  _$jscoverage['dataapi/app.js'][100] = 0;
  _$jscoverage['dataapi/app.js'][104] = 0;
  _$jscoverage['dataapi/app.js'][105] = 0;
  _$jscoverage['dataapi/app.js'][107] = 0;
  _$jscoverage['dataapi/app.js'][110] = 0;
  _$jscoverage['dataapi/app.js'][111] = 0;
  _$jscoverage['dataapi/app.js'][112] = 0;
  _$jscoverage['dataapi/app.js'][115] = 0;
  _$jscoverage['dataapi/app.js'][117] = 0;
  _$jscoverage['dataapi/app.js'][118] = 0;
  _$jscoverage['dataapi/app.js'][119] = 0;
  _$jscoverage['dataapi/app.js'][122] = 0;
}
_$jscoverage['dataapi/app.js'].source = ["<span class=\"c\">/* EventTarget from N Zakas Professsional Javascript book */</span>","<span class=\"k\">function</span> EventTarget<span class=\"k\">()</span><span class=\"k\">{</span>","    <span class=\"k\">this</span><span class=\"k\">.</span>handlers <span class=\"k\">=</span> <span class=\"k\">{}</span><span class=\"k\">;</span>    ","<span class=\"k\">}</span>","","EventTarget<span class=\"k\">.</span>prototype <span class=\"k\">=</span> <span class=\"k\">{</span>","    constructor<span class=\"k\">:</span> EventTarget<span class=\"k\">,</span>","","    listen<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span>type<span class=\"k\">,</span> handler<span class=\"k\">)</span><span class=\"k\">{</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">typeof</span> <span class=\"k\">this</span><span class=\"k\">.</span>handlers<span class=\"k\">[</span>type<span class=\"k\">]</span> <span class=\"k\">==</span> <span class=\"s\">\"undefined\"</span><span class=\"k\">)</span><span class=\"k\">{</span>","            <span class=\"k\">this</span><span class=\"k\">.</span>handlers<span class=\"k\">[</span>type<span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"k\">[];</span>","        <span class=\"k\">}</span>","","        <span class=\"k\">this</span><span class=\"k\">.</span>handlers<span class=\"k\">[</span>type<span class=\"k\">].</span>push<span class=\"k\">(</span>handler<span class=\"k\">);</span>","    <span class=\"k\">}</span><span class=\"k\">,</span>","    ","    notify<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span>event<span class=\"k\">)</span><span class=\"k\">{</span>","        <span class=\"k\">if</span> <span class=\"k\">(!</span>event<span class=\"k\">.</span>target<span class=\"k\">)</span><span class=\"k\">{</span>","            event<span class=\"k\">.</span>target <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">;</span>","        <span class=\"k\">}</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>handlers<span class=\"k\">[</span>event<span class=\"k\">.</span>type<span class=\"k\">]</span> <span class=\"k\">instanceof</span> Array<span class=\"k\">)</span><span class=\"k\">{</span>","            <span class=\"k\">var</span> handlers <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>handlers<span class=\"k\">[</span>event<span class=\"k\">.</span>type<span class=\"k\">];</span>","            <span class=\"k\">for</span> <span class=\"k\">(</span><span class=\"k\">var</span> i<span class=\"k\">=</span><span class=\"s\">0</span><span class=\"k\">,</span> len<span class=\"k\">=</span>handlers<span class=\"k\">.</span>length<span class=\"k\">;</span> i <span class=\"k\">&lt;</span> len<span class=\"k\">;</span> i<span class=\"k\">++)</span><span class=\"k\">{</span>","                handlers<span class=\"k\">[</span>i<span class=\"k\">](</span>event<span class=\"k\">);</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span>            ","    <span class=\"k\">}</span><span class=\"k\">,</span>","","    ignore<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span>type<span class=\"k\">,</span> handler<span class=\"k\">)</span><span class=\"k\">{</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>handlers<span class=\"k\">[</span>type<span class=\"k\">]</span> <span class=\"k\">instanceof</span> Array<span class=\"k\">)</span><span class=\"k\">{</span>","            <span class=\"k\">var</span> handlers <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>handlers<span class=\"k\">[</span>type<span class=\"k\">];</span>","            <span class=\"k\">for</span> <span class=\"k\">(</span><span class=\"k\">var</span> i<span class=\"k\">=</span><span class=\"s\">0</span><span class=\"k\">,</span> len<span class=\"k\">=</span>handlers<span class=\"k\">.</span>length<span class=\"k\">;</span> i <span class=\"k\">&lt;</span> len<span class=\"k\">;</span> i<span class=\"k\">++)</span><span class=\"k\">{</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span>handlers<span class=\"k\">[</span>i<span class=\"k\">]</span> <span class=\"k\">===</span> handler<span class=\"k\">)</span><span class=\"k\">{</span>","                    <span class=\"k\">break</span><span class=\"k\">;</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span>","            ","            handlers<span class=\"k\">.</span>splice<span class=\"k\">(</span>i<span class=\"k\">,</span> <span class=\"s\">1</span><span class=\"k\">);</span>","        <span class=\"k\">}</span>            ","    <span class=\"k\">}</span>","<span class=\"k\">}</span><span class=\"k\">;</span>","","","<span class=\"c\">//= require \"oop.js\"</span>","","<span class=\"c\">/* define the pentaho namespace if it is not already defined. */</span>","pentaho <span class=\"k\">=</span> <span class=\"k\">typeof</span> pentaho <span class=\"k\">==</span> <span class=\"s\">\"undefined\"</span> <span class=\"k\">?</span> <span class=\"k\">{}</span> <span class=\"k\">:</span> pentaho<span class=\"k\">;</span>","","<span class=\"c\">/*</span>","<span class=\"c\">pentaho.app concept is taken from Nicholas Zakas, Scalable JavaScript Architecture</span>","<span class=\"c\">*/</span>","","pentaho<span class=\"k\">.</span>app <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span>app<span class=\"k\">)</span><span class=\"k\">{</span>","\tEventTarget<span class=\"k\">.</span>call<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">);</span> <span class=\"c\">//call parent object</span>","\t<span class=\"k\">this</span><span class=\"k\">.</span>moduleData <span class=\"k\">=</span> <span class=\"k\">[];</span>","<span class=\"k\">}</span>","","inheritPrototype<span class=\"k\">(</span>pentaho<span class=\"k\">.</span>app<span class=\"k\">,</span> EventTarget<span class=\"k\">);</span> <span class=\"c\">//borrow the EventTarget's methods</span>","","pentaho<span class=\"k\">.</span>app<span class=\"k\">.</span>prototype<span class=\"k\">.</span>init <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span>modArray<span class=\"k\">)</span> <span class=\"k\">{</span>","","\t<span class=\"k\">var</span> module <span class=\"k\">=</span> <span class=\"k\">{}</span><span class=\"k\">;</span>","\t<span class=\"c\">//register first then start</span>","\t<span class=\"k\">for</span> <span class=\"k\">(</span><span class=\"k\">var</span> i<span class=\"k\">=</span><span class=\"s\">0</span><span class=\"k\">,</span>j<span class=\"k\">=</span>modArray<span class=\"k\">.</span>length<span class=\"k\">;</span>i<span class=\"k\">&lt;</span>j<span class=\"k\">;</span>i<span class=\"k\">++)</span> <span class=\"k\">{</span>","\t\tmodule <span class=\"k\">=</span> modArray<span class=\"k\">[</span>i<span class=\"k\">];</span>","\t\t<span class=\"k\">this</span><span class=\"k\">.</span>register<span class=\"k\">(</span>module<span class=\"k\">);</span>","\t\t<span class=\"k\">this</span><span class=\"k\">.</span>start<span class=\"k\">(</span>module<span class=\"k\">);</span>","<span class=\"c\">//\t\tconsole.log('started module: ' + module.name);</span>","\t<span class=\"k\">}</span>","\t","<span class=\"k\">}</span>","","pentaho<span class=\"k\">.</span>app<span class=\"k\">.</span>prototype<span class=\"k\">.</span>register <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span>module<span class=\"k\">)</span><span class=\"k\">{</span>","\t<span class=\"k\">this</span><span class=\"k\">.</span>moduleData<span class=\"k\">[</span>module<span class=\"k\">.</span>name<span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"k\">{</span>name<span class=\"k\">:</span> module<span class=\"k\">.</span>name<span class=\"k\">,</span> creator<span class=\"k\">:</span> module<span class=\"k\">.</span>objectClass<span class=\"k\">,</span> instance<span class=\"k\">:</span> <span class=\"k\">null</span><span class=\"k\">}</span>","<span class=\"k\">}</span>  <span class=\"c\">//end register</span>","","pentaho<span class=\"k\">.</span>app<span class=\"k\">.</span>prototype<span class=\"k\">.</span>start <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span>module<span class=\"k\">)</span><span class=\"k\">{</span>","\t<span class=\"k\">this</span><span class=\"k\">.</span>moduleData<span class=\"k\">[</span>module<span class=\"k\">.</span>name<span class=\"k\">].</span>instance <span class=\"k\">=</span> <span class=\"k\">new</span> <span class=\"k\">this</span><span class=\"k\">.</span>moduleData<span class=\"k\">[</span>module<span class=\"k\">.</span>name<span class=\"k\">].</span>creator<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">);</span>","\t<span class=\"k\">this</span><span class=\"k\">.</span>moduleData<span class=\"k\">[</span>module<span class=\"k\">.</span>name<span class=\"k\">].</span>instance<span class=\"k\">.</span>init<span class=\"k\">(</span>module<span class=\"k\">.</span>element<span class=\"k\">||</span><span class=\"k\">{}</span><span class=\"k\">);</span>","<span class=\"k\">}</span>  <span class=\"c\">//end start</span>","","pentaho<span class=\"k\">.</span>app<span class=\"k\">.</span>prototype<span class=\"k\">.</span>stop <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span>moduleId<span class=\"k\">)</span><span class=\"k\">{</span>","\t<span class=\"k\">var</span> data <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>moduleData<span class=\"k\">[</span>moduleId<span class=\"k\">];</span>","\t<span class=\"k\">if</span> <span class=\"k\">(</span>data<span class=\"k\">.</span>instance<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\tdata<span class=\"k\">.</span>instance<span class=\"k\">.</span>destroy<span class=\"k\">();</span>","\t\tdata<span class=\"k\">.</span>instance <span class=\"k\">=</span> <span class=\"k\">null</span><span class=\"k\">;</span>","\t<span class=\"k\">}</span>","<span class=\"k\">}</span>","","pentaho<span class=\"k\">.</span>app<span class=\"k\">.</span>prototype<span class=\"k\">.</span>startAll <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span>","\t<span class=\"k\">for</span> <span class=\"k\">(</span><span class=\"k\">var</span> moduleId <span class=\"k\">in</span> <span class=\"k\">this</span><span class=\"k\">.</span>moduleData<span class=\"k\">)</span><span class=\"k\">{</span>","\t\t<span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>moduleData<span class=\"k\">.</span>hasOwnProperty<span class=\"k\">(</span>moduleId<span class=\"k\">))</span><span class=\"k\">{</span>","\t\t\t<span class=\"k\">this</span><span class=\"k\">.</span>start<span class=\"k\">(</span>moduleId<span class=\"k\">);</span>","\t\t<span class=\"k\">}</span>","\t<span class=\"k\">}</span>","<span class=\"k\">}</span>","pentaho<span class=\"k\">.</span>app<span class=\"k\">.</span>prototype<span class=\"k\">.</span>stopAll <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span>","\t<span class=\"k\">for</span> <span class=\"k\">(</span><span class=\"k\">var</span> moduleId <span class=\"k\">in</span> <span class=\"k\">this</span><span class=\"k\">.</span>moduleData<span class=\"k\">)</span><span class=\"k\">{</span>","\t\t<span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>moduleData<span class=\"k\">.</span>hasOwnProperty<span class=\"k\">(</span>moduleId<span class=\"k\">))</span><span class=\"k\">{</span>","\t\t\t<span class=\"k\">this</span><span class=\"k\">.</span>stop<span class=\"k\">(</span>moduleId<span class=\"k\">);</span>","\t\t<span class=\"k\">}</span>","\t<span class=\"k\">}</span>","<span class=\"k\">}</span>","pentaho<span class=\"k\">.</span>app<span class=\"k\">.</span>prototype<span class=\"k\">.</span>getModuleData <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","\t<span class=\"k\">var</span> data <span class=\"k\">=</span> <span class=\"k\">[],</span> mod<span class=\"k\">;</span>","\t<span class=\"c\">// return all if no args supplied</span>","\t<span class=\"k\">if</span> <span class=\"k\">(</span>arguments<span class=\"k\">.</span>length <span class=\"k\">&gt;</span> <span class=\"s\">0</span><span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t<span class=\"c\">//if (typeof arguments[0] == 'object') {</span>","\t\t<span class=\"c\">//}</span>","\t\t<span class=\"k\">for</span> <span class=\"k\">(</span>mod <span class=\"k\">in</span> <span class=\"k\">this</span><span class=\"k\">.</span>moduleData<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t<span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>moduleData<span class=\"k\">.</span>hasOwnProperty<span class=\"k\">(</span>mod<span class=\"k\">))</span> <span class=\"k\">{</span>","\t\t\t\tdata<span class=\"k\">[</span>data<span class=\"k\">.</span>length<span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>moduleData<span class=\"k\">[</span>mod<span class=\"k\">].</span>instance<span class=\"k\">;</span>","      <span class=\"k\">}</span>","\t\t<span class=\"k\">}</span>","\t\t<span class=\"k\">return</span> data<span class=\"k\">;</span>","\t<span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","\t\t<span class=\"k\">for</span> <span class=\"k\">(</span>mod <span class=\"k\">in</span> <span class=\"k\">this</span><span class=\"k\">.</span>moduleData<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t<span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>moduleData<span class=\"k\">.</span>hasOwnProperty<span class=\"k\">(</span>mod<span class=\"k\">))</span> <span class=\"k\">{</span>","\t\t\t  data<span class=\"k\">[</span>data<span class=\"k\">.</span>length<span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>moduleData<span class=\"k\">[</span>mod<span class=\"k\">].</span>instance<span class=\"k\">;</span>","      <span class=\"k\">}</span>","\t\t<span class=\"k\">}</span>","\t\t<span class=\"k\">return</span> data<span class=\"k\">;</span>\t\t","\t<span class=\"k\">}</span>","<span class=\"k\">}</span>"];
_$jscoverage['dataapi/app.js'][2]++;
function EventTarget() {
  _$jscoverage['dataapi/app.js'][3]++;
  this.handlers = {};
}
_$jscoverage['dataapi/app.js'][6]++;
EventTarget.prototype = {constructor: EventTarget, listen: (function (type, handler) {
  _$jscoverage['dataapi/app.js'][10]++;
  if (((typeof this.handlers[type]) == "undefined")) {
    _$jscoverage['dataapi/app.js'][11]++;
    this.handlers[type] = [];
  }
  _$jscoverage['dataapi/app.js'][14]++;
  this.handlers[type].push(handler);
}), notify: (function (event) {
  _$jscoverage['dataapi/app.js'][18]++;
  if ((! event.target)) {
    _$jscoverage['dataapi/app.js'][19]++;
    event.target = this;
  }
  _$jscoverage['dataapi/app.js'][21]++;
  if ((this.handlers[event.type] instanceof Array)) {
    _$jscoverage['dataapi/app.js'][22]++;
    var handlers = this.handlers[event.type];
    _$jscoverage['dataapi/app.js'][23]++;
    for (var i = 0, len = handlers.length; (i < len); (i++)) {
      _$jscoverage['dataapi/app.js'][24]++;
      (handlers[i])(event);
}
  }
}), ignore: (function (type, handler) {
  _$jscoverage['dataapi/app.js'][30]++;
  if ((this.handlers[type] instanceof Array)) {
    _$jscoverage['dataapi/app.js'][31]++;
    var handlers = this.handlers[type];
    _$jscoverage['dataapi/app.js'][32]++;
    for (var i = 0, len = handlers.length; (i < len); (i++)) {
      _$jscoverage['dataapi/app.js'][33]++;
      if ((handlers[i] === handler)) {
        _$jscoverage['dataapi/app.js'][34]++;
        break;
      }
}
    _$jscoverage['dataapi/app.js'][38]++;
    handlers.splice(i, 1);
  }
})};
_$jscoverage['dataapi/app.js'][47]++;
pentaho = (((typeof pentaho) == "undefined")? {}: pentaho);
_$jscoverage['dataapi/app.js'][53]++;
pentaho.app = (function (app) {
  _$jscoverage['dataapi/app.js'][54]++;
  EventTarget.call(this);
  _$jscoverage['dataapi/app.js'][55]++;
  this.moduleData = [];
});
_$jscoverage['dataapi/app.js'][58]++;
inheritPrototype(pentaho.app, EventTarget);
_$jscoverage['dataapi/app.js'][60]++;
pentaho.app.prototype.init = (function (modArray) {
  _$jscoverage['dataapi/app.js'][62]++;
  var module = {};
  _$jscoverage['dataapi/app.js'][64]++;
  for (var i = 0, j = modArray.length; (i < j); (i++)) {
    _$jscoverage['dataapi/app.js'][65]++;
    module = modArray[i];
    _$jscoverage['dataapi/app.js'][66]++;
    this.register(module);
    _$jscoverage['dataapi/app.js'][67]++;
    this.start(module);
}
});
_$jscoverage['dataapi/app.js'][73]++;
pentaho.app.prototype.register = (function (module) {
  _$jscoverage['dataapi/app.js'][74]++;
  this.moduleData[module.name] = {name: module.name, creator: module.objectClass, instance: null};
});
_$jscoverage['dataapi/app.js'][77]++;
pentaho.app.prototype.start = (function (module) {
  _$jscoverage['dataapi/app.js'][78]++;
  this.moduleData[module.name].instance = new (this.moduleData[module.name].creator)(this);
  _$jscoverage['dataapi/app.js'][79]++;
  this.moduleData[module.name].instance.init((module.element || {}));
});
_$jscoverage['dataapi/app.js'][82]++;
pentaho.app.prototype.stop = (function (moduleId) {
  _$jscoverage['dataapi/app.js'][83]++;
  var data = this.moduleData[moduleId];
  _$jscoverage['dataapi/app.js'][84]++;
  if (data.instance) {
    _$jscoverage['dataapi/app.js'][85]++;
    data.instance.destroy();
    _$jscoverage['dataapi/app.js'][86]++;
    data.instance = null;
  }
});
_$jscoverage['dataapi/app.js'][90]++;
pentaho.app.prototype.startAll = (function () {
  _$jscoverage['dataapi/app.js'][91]++;
  for (var moduleId in this.moduleData) {
    _$jscoverage['dataapi/app.js'][92]++;
    if (this.moduleData.hasOwnProperty(moduleId)) {
      _$jscoverage['dataapi/app.js'][93]++;
      this.start(moduleId);
    }
}
});
_$jscoverage['dataapi/app.js'][97]++;
pentaho.app.prototype.stopAll = (function () {
  _$jscoverage['dataapi/app.js'][98]++;
  for (var moduleId in this.moduleData) {
    _$jscoverage['dataapi/app.js'][99]++;
    if (this.moduleData.hasOwnProperty(moduleId)) {
      _$jscoverage['dataapi/app.js'][100]++;
      this.stop(moduleId);
    }
}
});
_$jscoverage['dataapi/app.js'][104]++;
pentaho.app.prototype.getModuleData = (function () {
  _$jscoverage['dataapi/app.js'][105]++;
  var data = [], mod;
  _$jscoverage['dataapi/app.js'][107]++;
  if ((arguments.length > 0)) {
    _$jscoverage['dataapi/app.js'][110]++;
    for (mod in this.moduleData) {
      _$jscoverage['dataapi/app.js'][111]++;
      if (this.moduleData.hasOwnProperty(mod)) {
        _$jscoverage['dataapi/app.js'][112]++;
        data[data.length] = this.moduleData[mod].instance;
      }
}
    _$jscoverage['dataapi/app.js'][115]++;
    return data;
  }
  else {
    _$jscoverage['dataapi/app.js'][117]++;
    for (mod in this.moduleData) {
      _$jscoverage['dataapi/app.js'][118]++;
      if (this.moduleData.hasOwnProperty(mod)) {
        _$jscoverage['dataapi/app.js'][119]++;
        data[data.length] = this.moduleData[mod].instance;
      }
}
    _$jscoverage['dataapi/app.js'][122]++;
    return data;
  }
});
