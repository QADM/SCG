13.06.05
    * New Layout for samples
    * Implemented [REDMINE-2120] - 	Adapt PrptComponent for post, auto-resize, progress indicator on report load    
    * Updated heat grid sample due ccc version update
    * Added SchedulePrpt Component
    * [FEAT](CCC Extension Scenes Legend Item) New kind of extension points: Scene Variables extension points. Allow overriding the calculation of CCC scene variables. This is useful for things like changing the text of discrete ticks or legend items in a way that layout takes it into account. Normal "axisLabel_text" and "legendLabel_text" extension points are not taken into account by the automatic layout algorithms because they cannot be safely used in a context were protovis marks do not yet exist (as is the case). These are not suitable to be used when the size of panels is determined automatically. In practice, for now, there's a single new extension point: "legendItemScene_value" (or "legend2ItemScene_value", ..., and "legend$ItemScene_value", for any legend group) that allows changing the label of the legend item's scene variable 'value'.
    * [CHG](dataSeparator) The option "dataSeparator" now also controls the pvc.data.Complex composite key separator, besides the crosstab translation separator character 
    * [CHG] Removed the new Legend Item Scenes extension point syntax and instead exposed the already existing JSON legend.scenes.item.value property.
    * [FEAT](CCC plot2DataSeriesIndexes) Restored the functionality exposed by the deprecated option "secondAxisIdx".    
    * [CHG] (CCC plot2SeriesIndexes) On third thought, renamed the option plot2DataSeriesIndexes to plot2SeriesIndexes, although the current implementation stilll works like the deprecated v1 secondAxisIdx. The meaning of "series" should already be taken as the value of the "series" visual role.
    * PRD-4429 Multi-value parameter - Select and de-select issue 
    * [FEAT] (Dashboards.getComponentIndex) The single argument now also supports a number value. 
    * [FEAT][CHG] (Dashboards.removeComponent) The return value is not a boolean indicating if the component existed anymore, but the removed component when existing. Also, the single argument now also accepts the index of the component to remove.
    * Changes made to Comments Components: - Verify permissions for each operation; - Verify if user is an admin to show deleted and archived comments; - Return additional data for the client (it´s possible for the administrators see deleted and archived comments); - Depending on permission It´s possible for the administartor change the deleted and archived comments; Added info the the "Dashboards.context": - So we can know if the user can do operations over comments form other user;
    * [FEAT](CCC PiePlot offSetRadius) New extension point slice_offsetRadius allows to easily implement exploded-style-selection.
    * doQuery handles null parameters, fetchData shouldn't be picky
    * Fixed [REDMINE-271] TableComponent with server side pag. hangs with "processing" when query fails
    * Fixed [REDMINE-2112] There isn't any class in the chart components series to represent the cccNormalizedBarChart
    * Fixed [REDMINE-2083] refreshPeriod not working after component lifecycle changes
    * [PERF] (CCC protovis) Performance improvements mostly noticeable on updateAll, due to avoiding DOM calls like the setAttribute/removeAttribute and style setting
    * [FIX](CCC scene var valueOf) removed the valueOf method, that would gain to the toString method, when returning a number.
    * [FIX](Dashboards._castControlToClass) While searching for the first of a set of candidate class names, ignore any global name whose value is not a function.
    * [FIX](CGG) Small fix to debugging code of generated CGG script files. 
    * [FIX](pvc.setDebug) pvc.logError and pv.error weren't being updated on debug level change
    * [FIX](protovis gradient OrdinalScale) Ordinal scales did not convert string ranges using pv.fillStyle but instead used pc.color. This caused a "colors" array containing gradient strings to not be correctly recognized. 
    * [FIX](CCC Translation metadata.type) Reverted the use of metadata.type to default a single bound dimensions' type, because this would cause other relevant defaults not to be applied.    
    * [FIX](protovis gradient multiple) Generally, multiple distinct gradients could render incorrectly, due to sharing of FillStyle/Color objects to store the multiple "color" urls that would refer to gradients defined in distinct parent elements. Urls would point to out-of-scope gradients. Now, all gradients are defined at the svg/defs element and are shared between FillStyles/Colors having the same key. There is no GC of gradients; it is assumed that the number of distinct gradients per root is relatively small, and that these are stable along consecutive renders.
    * [FIX](CCC Waterfall) Bugs in ortho range calculation and water-group rectangles layout, sometimes revealed with the presence of negative values. There's still a bug with the placement of bars themselves. 
    * [FIX](CCC def.string.format) Bug in evaluating toString of objects. If an object had a valueOf method, the toString of the result of valueOf would be used instead.
    * [FIX](CCC Waterfall WaterLineLabel-Placement) With negative values, water-line labels would sometimes be placed in the wrong position (above or below the line) 
    * [FIX](protovis Band Layout) For the stacked mode, a JS bug, would mess up negative values and cause the bars to be wrongly placed, affected the CCC waterfall chart only.
    * [FIX](CCC AxisPanel LabelSpacing Vertical Number Ticks) The min label spacing for numeric label ticks, in vertical cartesian axes, was sometimes not being respected. Also fixed some AxisPanel existing bugs that surfaced when this one was uncovered. 
    * [FIX](CCC PointPlot ignoreNulls nullInterpolationMode) When not ignoring nulls and the null interpolation mode was not none, the point (area, line, dot) plot was not recognizing interpolated scenes. Some interpolation scenes have both the null datum and the interpolated one, which confused the rpevious detection method.
    * [FIX] (CCC Scales FixedMin/Max) The fixed minimum value of a numeric scale would get _switched_ with the maximum domain value when the fixed minimum was set to a value greater that the maximum domain value.
    * [FIX] (CCC protovis) The window.getComputedStyle shim installed by protovis-msie caused problems to other libraries (ace). Refactored some of the code so that the shim is no longer necessary.

13.03.25
    * CCC V2 integration
    * Added capability to detect session timeout and request new credentials (instead of silently failing)
    * Feature: Support for extra options in select component    
    * Feature:  Add clickAction & expand selectors to table component
    * Fixed Heatgrid Sample
    * Fix: Multiselect component now checks for null values regardless of the plugin used.
    * Fix [REDMINE-1822] - Tooltip not showing in select components
    * Fix [REDMINE-309] - td.expandingClass now has a dummy click for it to work as intended.
    * Fix: Column format in table component now takes hidden columns into account. Ex: If column 0 is hidden: - Now: format for column 1 is colFormats[1] - Previously: format for column 1 was colFormats[0]



13.02.07
    
    * Introduced Async Behavior and new component life cycle
    * Initial Storage fetch moved to server side
    * Added a separate resource for all js shims
    * Refactored CoreComponents into smaller pieces
    * Fixed require.js dependencies. Had to reintroduce a resource called CoreComponents so that EE 4.8 still finds it when resolving dependencies
    * Fix styling issues with widgets
    * Upgraded jquery sparkline to 2.1
    * Fix 'notNullMeasure' function in OlapUtils
    * Added Jasmine testing library
    * Added support for secondAxis minimum and maximum value (by Andrea Torre)
    * Add support for arbitrary user data in Views
    * Set TableComponent to use async ajax
    * changed deps to newer pentaho version
    * Implemented legacyProperty support
    * Changed the way "earliestDate" and "latestDate" are retrieving their value. Either set by a property, or with a default value (no Dashboards.getParamaterValue)




12.12.10
    * Fixes to avioid exportData to break due to url length
    * Changed Orient Dependency to 1.3.0
    * Added dashboard Views

12.11.09
    * 4.8 ee compatibility issues

12.10.17
    * [FIX] Fixed linear scale calculation for second axis when all values are null.
    * General image Update
    * Added pv.Rule#strokeDasharray (with support for SVG only, not IE)
    * [FIX] Fixed linear scale calculation for second axis when all values are equal.
    * AMD compatibility with current Pentaho release

12.09.05
    * Fixed [REDMINE 942] - Ensure only one instance of the minification routine is running at any given time
    * send cda dataTables filtering settings on export
    * Change isNumeric predicate in trendArrow addIn.
    * Added support for excel template option in exportData.
    * Fix to dashboardContext and CdfContentGenerator (templating)
    * [PATCH][FIX] Bullet chart bulletTitle and bulletSubtitle options were not showing in the "fixed data" mode
    * Add option to disable url scheme detection in dashboard headers
    * Make bookmark state not generate multiple history entries
    * Make pageStartingAt behave correctly

12.07.19
    * [Redmine-207] - tableComponent oLanguage fix
    * Turned pvc.defaultColorScheme public (for readonly access)
    * [FEAT] Added a hook for plugging in a default chart colorscheme (CvK Feb. 2012)
    * Add clippedText AddIn
    * add column headers support to group headers addIn
    * Added support in fireChange for components to be able to update without triggering increment/decrementRunningCalls.
    * Changed the behaviour of the clickable "span" for removal. Before, we needed to click on the "x" (<a> tag) to get the selection out, 
        now you just need to click on the span of that selection
    * output-index for external cda's
    * jqueryui: use ctrlKey instead of metaKey for multiple selection
    * set datepicker defaults only if it exists
    * CDF tutorial needs that both zip and xml files be downloadable by CDF
    * Patch to fix HeatGrid performance problem.
    * Added queryState to query component.
    * MapComponent fix for FF13 - FooComponent as first object in classNames[]
    * [PATCH] Stacked bars with line: plot panel clipping was activated due to forcing orthoFixedMin to 0 and resulted in cut dots
    * Added underscore, backbone and mustache
    * circle addin border width was not working on Chrome
    * [REDMINE 721, REDMINE 771] selectMultiComponent null-related issues; impromptu css less green
    * Added override to input[type=text] margin and dataTables min-height
    * [PATCH] BulletChart support for the tooltipFormat option.
    * Added TextareaInputComponent
    * Added erichynds Multiselect JQuery Plugin Files
    * Fix the Clean template, which wasn't actually as clean as all that.
    * changed table click handler to use rawData instead of query.lastResult so we can access postFetch changes
    * [REDMINE 206] - Dates are always used in iso format on parameters regardless of display date format

12.05.15
	* Added support on tables for urlTemplate, for backward compatibility
	* DashboardContext: get roles via SecurityParameterProvider
	* Can include session attributes in Dashboards.context according to xml
	* [PATCH][FEAT] Experimental feature that allows to hide overcrowded category labels in a categorical axis. 
	* [PATCH][FIX]  Bar valuesAnchor='top' now works.
	* Handle cases where hash doesn't change so browsers won't jump to top of page
	* Changed duplicate component separator to underscore.
	* Add warning for when CDA isn't detected in auto-includes
	* Added autoinclude documentation
	* Solved [Redmine CCC574] - third bar is not removed from barline when having 2 series PATCH FIX Error occurring when hiding 
	* Second axis series - now it does not try to hide at all, but does not throw also.

12.04.09

	* Added support for auto-including query results in dashboard context
	* Implemented [REDMINE 513] - Added audit support for CDF renderXcdf
	* Solved [REDMINE CDE-528] -  Show values doesn't work on bar charts
	* Solved [REDMINE 539] - Dashboards.getQueryParameter is using unescape(), should use decodeURIComponent()	
	* Changed dashboardContext includes to be compatible with both dbBased and fileBased rep
	* Added resources as a plugin path - Added warning for when content generator is used to serve static resources
	* Updated cdf dependencies to 3.10-stable
	* Removed an extraneous rule from dashboardContext
	* Change the timestamp format in the timing loggers
	* Changed blockUI to simple .gif + slightly opaque white overlay.

12.03.19
	* Fixed pvc.number that caused stacked charts in crosstab format to fail.
	* Fixed bug that caused stacked charts in crosstab format to fail, when rendering the tooltip of a null value.	
	* Adding Javascript source publish
	* Fix Month Picker HTML
	* Upgrade jquery to 1.7
	* Shim Object.keys in Dashboards.js
	* Make ButtonComponent's "expression" callback have this point to the component itself
	* Add support for persistent parameters
	* Added groupHeaders addIn. Changed TableComponent in CoreComponents to render all cells ("td") and not just visible ones ("td:visible").
	* Added marketplace snippet generation to build process
	* Changed buttonComponent expression call
	* Added attribution for sprintf


12.02.24
	* Changes in icons and documentation
	* New template and location for samples - now at plugin-samples/pentaho-cdf
    * Added .otf and .woff to downloadable font formats.
    * Update protovis from webdetails' fork.
    * Implemented Redmine Feature #101: Changed xtactions from solution/cde/components to system/pentaho-cdf/actions.  
    * Changes to plugin id and version management (new version.xml) to make cdf compatible with Pentaho Marketplace
    * Removed dependency to CDA datasource on heatgrid sample
    * Solved bug affection ie
    * Solved dangling comma. could break older IEs
    * Fix BaseComponent AddIn API to properly handle component types rendered as functions, to conform with core CDF behaviour.   
    * Change to template search: Search in solution dir first     
    * Fix an issue with ToggleButton and Checkbox defaults
    * Tiny fix to table expandable component.
    * Fixed issue with check component not handling defaultIfEmpty option properly
    * Changed table expandable row handler to close all open rows (even hidden ones) when a new one is opened.
    * trendArrow value format now accepts jquery objects.     
    * Includes CCC 12.02.16 with the following changes:
    	* New chart type "NormalizedBarChart" (100% stacked/normalized/segmenred bar chart)
    	* Added new "selectable" chart option that is false by default. Currently, selection is supported by BarChart/WaterfallChart and HeatGridChart.
    	* Fixed Redmine Bug #193: BoxplotChart does not show box tooltips correctly
    	* Fixed Redmine Bug #208: BarLine charts break when Independent Line Scale is set to false
    	* Fixed Redmine Bug #298: Wrong extension point in ccc documentation
    	* Fixed Redmine Bug #316 - Tooltips of Dots in line charts do not always appear
    	* Fixed Redmine Bug #317 - Timeseries axes ticks, in some cases, get drawn far to the left, off the chart
    	* Functions 'getZZZScale' now have a 'keyArgs'-like interface. This interface makes it easy to add new arguments to the functions.
    	* Refactoring  pvcPanel.js into separate files.
    	* Put classes in pvcCategoricalAbstract.js and pvcDataDimension.js into separate files
    	* Fixed bug in value/label code of Categorical charts
    	* Added support for value and label distinction, for title and subtitle, on the bullet chart.
    	* Fixed ZOrder bug - did not detect correctly a new child with ZOrder already applied
    	* Fixed tipsy tooltip issue with dots and lines hiding the tooltip imediately on mouseleave, which is incompatible with the point/unpoint pseudo-events, tipically used in these cases to attach the tipsy behavior.
    	* Fixed pvc.mergeDefaults function that did copy specified options with an === undefined value	
    	* Added logging of received Metadata and resultset to DataEngine.
    	* Added logging of received options, in pvc.Base#preRender.    
    	* DataDimension inherited code from Composite Ordinal Axes related to onversion of data to tree form and obtaining labels for its elements. New chart options 'getCategoryLabel' and 'getSeriesLabel'.
    	* Click and Double-click in AxisPanel has been refactored to allow usage by other axis types, besides the composite axis (like linear and normal-ordinal).
    	* Axis value selection is now integrated in the click event (and thus, xAxisClickAction and yAxisClickAction of HeatGrid have been removed).
    	* Axis 'clickAction' and 'doubleClickAction' now receive an object argument that contains the properties: 'value', 'label', 'absValue', 'path', 'absLabel'. This breaks the previous interface of these handlers (its .toString method returns the 'value' property, to ensure some backward compatibility).
    	* Ordinal axes have changed the type of "datum" that is passed to property functions. This can affect functions given tothe following extensions points: 'Ticks_', 'Label_', 'Grid_'. The "datum" received is equal to that described for the clickAction event handler.
    	* Fixed bug in MetricAbstract that affected drawing of base linear axes.
    	* Changed options handling by chart classes. They now all declare options in a static property called 'defaultOptions', which is handled in the instance constructor by the new function: pvc.mergeDefaults. This allowed that options would reach the root base class (which by difficulties in option handling in some cases were not passed to base classes), which was required so that the new "getLabel" options could reach the base class, by the time the DataEngine is created. This involved collecting all options of every chart class and placing a default for them in the defaultOptions object. Only options declared here are read from the user options.
    	* Some refactoring of MultiValueTranslator.
    	* Improved lasso selection, to behave better near min. width or height of selection rectangle (method _createSelectionOverlay lost the w and h arguments).
    	* Fixed bug in the HeatGrid and Waterfall tooltip calculation code, that caused tooltips to be shown delayed one mark instance. To this end, a new method has been added to pv.Mark that allows defining a local mark property: 'localProperty'. This is in most situations a better choice that of using 'def', which isn't evaluated per instance of a Mark, but per build of a Mark.
    	* Performance improvement on heatgrid: don't reevaluate tooltip when shapes are re-rendered
    	* Solved lasso show delay
    	* Fixed some bugs related to the timeSeries option being wrongly read on the panel or on the chart.
    	* compositeAxis: issue with labels overlapping with map when aligned to the right
    	* Fixed bug related to the last showTooltips change.
    	* Normalized showTooltips option and tipsySettings options on Categorical charts.
    	* Generalized categorical charts rubber band detection of selected data.
    	* Added pvc.CategoricalAbstract#clearSelections method to support Pentaho Analyzer.
    	* Solved missing ;

    


12.02.02

* Added "invalid" state to trendArrows
* Fixed compatibility issue between jQuery.sparkline and protovis-msie when in IE8.
* Changed trendArrow default to right align
* Add user locale to dashboard context
* Add a new column type for localized text...takes only effect if  Dashboards.i18nSupport is set
* PDI-7211 - As Pentaho we want Analyzer's new heat grid visualization to work in PDI - Dangling comma
* Changed doQuery so legacy datasources return the same structure as CDA datasources. AddIn set and get changed  - getting addins for fooComponent returns the same as getting addins for Foo.
* Added 'width' option to dataBar addIn. Defaults to undefined.
* Fix to tableComponent with ServerSide Pagination
* Includes CCC 12.01.15 with the following changes:
	* Implemented Redmine Feature #107 - Control number of labels on the linear Axis for categorical charts (show "MinorTicks" option, including 2nd axis) 
	* Implemented Redmine Feature #108 - Control number of ticks on the linear Axis for categorical charts ("DesiredTickCount", including 2nd axis with independent scale) 
	* Implemented Redmine Feature #109 - Rounded maximum for linear axis in categorical charts ("DomainRoundMode" option, including 2nd axis with independent scale) 
	* Solved Redmine Issue #120 - Axis labels get cut off 
	* Solved Redmine Issue #78 - Fix the vertical order in which series are drawn, so that when applicable, they show from top to bottom.
	* Solved Redmine Issue #121 - Tooltips in barcharts do not appear if bars overflow.
	* Solved Redmine Issue #103 - Ordinal axis grids not being drawn
	* MultiValueTranslator: issue when no categories
	* Solved valueFormat receives numeric value, doesn't parse
	* Fixed typo of property name in LegendPanel 
	* Add multi-series barline support
	* useCompositeAxis compatible with flat arrays
	* vml namespace conflict: revert sparkline, declaration in protovis-msie no longer lazy
	* align horizontal text in composite vertical axis towards the chart; revert convention breaks in multiline conditional expressions
	* workaround issue in 16th decimal position in IE9 64bit
	* Fixed regression with bulletcharts being translated in 10px down
	* Added new (and some of the missing) documentation to the testZZZ.html files
	* Fixed the drawing of bars and grid lines on the ordinal scale: they were not centered with the tick and label 
	* In linear axis, made minorTicks "extend" (major)ticks, so that visibility (through .visible or .strokeStyle) of the later affects the former. 
	* testZZZ.html files documentation mencioned '{x,y}AxisFullGrid_' instead of the correct value'{x,y}AxisGrid_'.
	* Fixed linear axis grid to show a line on the last tick (as opposed to the ordinal axis, that does not show the last line). When EndLine is active, it is drawn above the last grid line.
	* Fixed bug in the positioning of linear scale labels that revealed it self (don't know why) only on time series charts * Fixed bug in time series scale range calculation when with a second axis * Fixed bug in the drawing of minor ticks on time series scales (date arithmetic issues)
	* Fixed regression bug in ScatterCharts (DotChart, LineChart, StackedLineChart and StackedAreaChart) that caused null values to break line drawing. 
	* Fixed the visibility of the first grid line of a time series axis - it did not show because, in this case, the first tick is not on the origin.
	* Fixed compatibility issue between jQuery.sparkline and protovis-msie when in IE8.
	* heatgrid: +scalingType:'discrete' (interval-based, no color interpolation)
	* tipsy w/ followMouse: don't fall out of window
	* Heatgrid: ignore null values in min/max calculations; nullShape not taking correct index into account;
	* solved dangling variable reference



*  v3.2
    * NEW FEATURES:
          o New OpenFashChart Component.
          o JfreeChart Caption feature: Zoom , Export Chart (Excel,CSV), Change Type (BarChart,PieChart) and Show pivot details.
          o DialChart now supports float values.
          o Navigate Component:
                + Render Optimization.
                + Current template included in folder links.
          o ContentList Component new mode that shows parent folders
          o OlapUtils Improvements:
                + Exclude optimization.
                + DrillUp Support.
                + Allow single filter reset.
          o Implemented array support in parameters (Now non scalar parameters are sent to Pentaho as multi key/values)
          o Allow the MonthpickerComponent to display the months within the max and min date range.
          o ToggleButtonsComponents with query definition.
    * BUG FIXES:
          o Timeplot:
                + Timeplot error for datasources with NAN(not a number) values.
                + Plots after the seventh plot have always the same plotcolor.
          o JfrreChartComponent:
                + An error is thrown when no data exists.
                + Miscalculated topCount for category datasets.
                + Values enconding problem
          o OlapUtils:
                + Dimension analysis error.
                + Exclude after expand not working.
          o Unable to close window for ExecuteXaction component.
          o Unable to change checkBox previous selected value.
* v3.1
          o Moved to the plugin architecture
          o Released with pentaho 3.0

* v3.0 - Moved all new trunk/ functionalities into stable release

* v2.1-RC1
          o Same features as 2.0.1 but compatible with pentaho 2.0-RC1
          o Removed dashboard links since they don't make sense to use with mantle

* v2.0.1
          o Html selectors lacked enclosing quotes
          o preExpressions are now optional
          o Fixed bug in selectors regarding names with spaces included
          o Implemented preChange and postChange in selector (thanks to Kevin Haas)
          o For selectors, a fixed array of values are now accepted in the parameter 'valuesArray'
          o Added pivot component
          o Removed the url-template bug in samples_broadcast example (thanks to Maria Roldan)
          o Added 2 new steel-wheels alike example (thanks to Harris Ward)
          o CBF 2.0 compatible
* v2.0.0
          o Initial release

